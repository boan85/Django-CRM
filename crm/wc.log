INFO:wc_utils.wc_utils:Get INDEX API info from cache.
INFO:wc_utils.wc_utils:{'/wc/v2/payment_gateways': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Term name.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}}, {'methods': ['DELETE'], 'args': {'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'items': {'type': 'integer'}}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'parent_exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'items': {'type': 'integer'}}}}, {'methods': ['POST'], 'args': {'amount': {'type': 'string', 'required': False, 'description': 'Refund amount.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'api_refund': {'type': 'boolean', 'required': False, 'default': True, 'description': 'When true, the payment gateway API is used to generate the refund.'}, 'refunded_payment': {'type': 'boolean', 'required': False, 'description': 'If the payment was refunded via the API.'}, 'refunded_by': {'type': 'integer', 'required': False, 'description': 'User ID of user who created the refund.'}, 'reason': {'type': 'string', 'required': False, 'description': 'Reason for refund.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'action': {'type': 'string', 'required': False, 'description': 'What running the tool will do.'}, 'description': {'type': 'string', 'required': False, 'description': 'Tool description.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tool name.'}, 'id': {'type': 'string', 'required': False, 'description': 'A unique identifier for the tool.'}, 'message': {'type': 'string', 'required': False, 'description': 'Tool return message.'}, 'success': {'type': 'boolean', 'required': False, 'description': 'Did the tool run successfully?'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Shipping class name.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'parent_exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'items': {'type': 'integer'}}, 'attribute': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific slug.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Limit result set to featured products.'}, 'max_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a maximum price.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.'}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'parent': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'items': {'type': 'integer'}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.'}, 'status': {'type': 'string', 'required': False, 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'min_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a minimum price.'}, 'category': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific category ID.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'tag': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific tag ID.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products in stock or out of stock.'}, 'attribute_term': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'on_sale': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products on sale.'}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}}}, {'methods': ['POST'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Name of the scenario.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Scenario ID.'}, 'configuration': {'context': ['view', 'edit'], 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_id': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Component ID.'}, 'component_options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'actions': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Scenario actions.', 'items': {'properties': {'action_data': {'context': ['view', 'edit'], 'type': 'object', 'description': 'Scenario action data.'}, 'action_id': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the scenario action is active.'}}, 'type': 'object'}}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Optional short description of the scenario.'}}, 'type': 'object'}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Allow one item to be bought in a single order.'}, 'featured': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Featured product.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}, 'variation': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute position.'}, 'visible': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}}, 'type': 'object'}}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'downloadable': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the product is downloadable.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'thumbnail_src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'URL of the thumbnail associated with this Component.'}, 'title': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Title of the component.'}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'query_ids': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Component ID.'}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Description of the component.'}, 'query_type': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.'}, 'default_option_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'thumbnail_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'optional': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the component is optional.'}, 'quantity_min': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Minimum component quantity.'}, 'options_style': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.'}, 'shipped_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'priced_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}}, 'type': 'object'}}, 'type': {'type': 'string', 'required': False, 'default': 'simple', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'download_limit': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Category ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category slug.'}}, 'type': 'object'}}, 'download_expiry': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of days until access to downloadable files expires.'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'backorders': {'type': 'string', 'required': False, 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'catalog_visibility': {'type': 'string', 'required': False, 'default': 'visible', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.'}, 'tax_status': {'type': 'string', 'required': False, 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tag ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag slug.'}}, 'type': 'object'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Stock management at product level.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.'}, 'alt': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image alternative text.'}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image name.'}, 'src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image URL.', 'format': 'uri'}, 'date_modified': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone."}, 'date_modified_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image position. 0 means that the image is featured.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image ID.'}, 'date_created': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone."}}, 'type': 'object'}}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'status': {'type': 'string', 'required': False, 'default': 'publish', 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Allow reviews.'}, 'virtual': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the product is virtual.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'in_stock': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'manage_stock': {'type': 'mixed', 'required': False, 'description': 'Stock management at variation level.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the variation is downloadable.'}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the variation is virtual.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'visible': {'type': 'boolean', 'required': False, 'description': "Define if the variation is visible on the product's page."}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'methods': ['DELETE'], 'endpoints': [{'methods': ['DELETE'], 'args': {'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Unique slug for the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'items': {'type': 'integer'}}, 'status': {'type': 'string', 'required': False, 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'parent_exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific product.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'customer': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific customer.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}}}, {'methods': ['POST'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'status': {'type': 'string', 'required': False, 'default': 'pending', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.'}, 'currency': {'type': 'string', 'required': False, 'default': 'GBP', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line subtotal (before discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'subtotal_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).'}, 'sku': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Product SKU.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'quantity': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Quantity ordered.'}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'price': {'context': ['view', 'edit'], 'type': 'number', 'readonly': True, 'description': 'Product price.'}, 'variation_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Variation ID, if applicable.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax subtotal.'}}, 'type': 'object'}}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of product.'}, 'product_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product ID.'}}, 'type': 'object'}}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'code': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Coupon code.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount total.'}, 'discount_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Discount total tax.'}}, 'type': 'object'}}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'customer_id': {'type': 'integer', 'required': False, 'default': 0, 'description': 'User ID who owns the order. 0 for guests.'}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'set_paid': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'method_title': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}}, 'type': 'object'}}, 'method_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method ID.'}}, 'type': 'object'}}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}, 'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Fee name.'}, 'tax_status': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.'}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of fee.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax subtotal.'}}, 'type': 'object'}}}, 'type': 'object'}}, 'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'parent_exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'items': {'type': 'integer'}}, 'attribute': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific slug.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Limit result set to featured products.'}, 'max_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a maximum price.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.'}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'parent': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'items': {'type': 'integer'}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.'}, 'status': {'type': 'string', 'required': False, 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'min_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a minimum price.'}, 'category': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific category ID.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'tag': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific tag ID.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products in stock or out of stock.'}, 'attribute_term': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'on_sale': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products on sale.'}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}}}, {'methods': ['POST'], 'args': {'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'backorders': {'type': 'string', 'required': False, 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'tax_status': {'type': 'string', 'required': False, 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'manage_stock': {'type': 'mixed', 'required': False, 'default': False, 'description': 'Stock management at variation level.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'downloadable': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the variation is downloadable.'}, 'virtual': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the variation is virtual.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'download_limit': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'in_stock': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'download_expiry': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of days until access to downloadable files expires.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'visible': {'type': 'boolean', 'required': False, 'default': True, 'description': "Define if the variation is visible on the product's page."}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Name of the scenario.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Scenario ID.'}, 'configuration': {'context': ['view', 'edit'], 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_id': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Component ID.'}, 'component_options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'actions': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Scenario actions.', 'items': {'properties': {'action_data': {'context': ['view', 'edit'], 'type': 'object', 'description': 'Scenario action data.'}, 'action_id': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the scenario action is active.'}}, 'type': 'object'}}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Optional short description of the scenario.'}}, 'type': 'object'}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'description': 'Allow one item to be bought in a single order.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Featured product.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}, 'variation': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute position.'}, 'visible': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}}, 'type': 'object'}}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the product is downloadable.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'thumbnail_src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'URL of the thumbnail associated with this Component.'}, 'title': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Title of the component.'}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'query_ids': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Component ID.'}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Description of the component.'}, 'query_type': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.'}, 'default_option_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'thumbnail_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'optional': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the component is optional.'}, 'quantity_min': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Minimum component quantity.'}, 'options_style': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.'}, 'shipped_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'priced_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}}, 'type': 'object'}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Category ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category slug.'}}, 'type': 'object'}}, 'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'catalog_visibility': {'type': 'string', 'required': False, 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tag ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag slug.'}}, 'type': 'object'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'description': 'Stock management at product level.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.'}, 'alt': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image alternative text.'}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image name.'}, 'src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image URL.', 'format': 'uri'}, 'date_modified': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone."}, 'date_modified_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image position. 0 means that the image is featured.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image ID.'}, 'date_created': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone."}}, 'type': 'object'}}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'status': {'type': 'string', 'required': False, 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'description': 'Allow reviews.'}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the product is virtual.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'status': {'type': 'string', 'required': False, 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.'}, 'currency': {'type': 'string', 'required': False, 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line subtotal (before discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'subtotal_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).'}, 'sku': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Product SKU.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'quantity': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Quantity ordered.'}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'price': {'context': ['view', 'edit'], 'type': 'number', 'readonly': True, 'description': 'Product price.'}, 'variation_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Variation ID, if applicable.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax subtotal.'}}, 'type': 'object'}}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of product.'}, 'product_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product ID.'}}, 'type': 'object'}}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'code': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Coupon code.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount total.'}, 'discount_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Discount total tax.'}}, 'type': 'object'}}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'User ID who owns the order. 0 for guests.'}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'set_paid': {'type': 'boolean', 'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'method_title': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}}, 'type': 'object'}}, 'method_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method ID.'}}, 'type': 'object'}}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}, 'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Fee name.'}, 'tax_status': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.'}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of fee.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax subtotal.'}}, 'type': 'object'}}}, 'type': 'object'}}, 'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}, 'topic': {'type': 'string', 'required': False, 'description': 'Webhook topic.'}, 'status': {'type': 'string', 'required': False, 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.'}, 'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Attribute name.'}, 'type': {'type': 'string', 'required': False, 'enum': ['select'], 'description': 'Type of attribute.'}, 'has_archives': {'type': 'boolean', 'required': False, 'description': 'Enable/Disable attribute archives.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'order_by': {'type': 'string', 'required': False, 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'methods': ['GET'], 'args': []}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Shipping zone name.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping zone order.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'name', 'enum': ['id', 'include', 'name', 'registered_date'], 'description': 'Sort collection by object attribute.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'email': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific email.'}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific IDs.', 'items': {'type': 'integer'}}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'role': {'type': 'string', 'required': False, 'default': 'customer', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'description': 'Limit result set to resources with a specific role.'}}}, {'methods': ['POST'], 'args': {'password': {'type': 'string', 'required': True, 'description': 'New user password.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': True, 'description': 'New user email address.'}, 'username': {'type': 'string', 'required': False, 'description': 'New user username.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Tag name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'type': 'string', 'required': False, 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.'}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'code': {'type': 'string', 'required': False, 'description': 'Coupon code.'}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'code': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific code.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}}}, {'methods': ['POST'], 'args': {'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'type': 'string', 'required': False, 'default': 'fixed_cart', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.'}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'code': {'type': 'string', 'required': True, 'description': 'Coupon code.'}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Shipping zone name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping zone order.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'email': {'type': 'string', 'required': False, 'description': 'Reviewer email.'}, 'name': {'type': 'string', 'required': False, 'description': 'Reviewer name.'}, 'review': {'type': 'string', 'required': False, 'description': 'The content of the review.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'has_archives': {'type': 'boolean', 'required': False, 'description': 'Enable/Disable attribute archives.'}, 'order_by': {'type': 'string', 'required': False, 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.'}, 'name': {'type': 'string', 'required': False, 'description': 'Attribute name.'}, 'type': {'type': 'string', 'required': False, 'enum': ['select'], 'description': 'Type of attribute.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific parent.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific ids.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}}}, {'methods': ['POST'], 'args': {'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'display': {'type': 'string', 'required': False, 'default': 'default', 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports/sales': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'period': {'type': 'string', 'required': False, 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.'}, 'date_max': {'type': 'string', 'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.'}, 'date_min': {'type': 'string', 'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific ids.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'type': {'type': 'string', 'required': False, 'enum': ['postcode', 'state', 'country', 'continent'], 'description': 'Shipping zone location type.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'code': {'type': 'string', 'required': False, 'description': 'Shipping zone location code.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.'}, 'compound': {'type': 'boolean', 'required': False, 'description': 'Whether or not this is a compound rate.'}, 'priority': {'type': 'integer', 'required': False, 'description': 'Tax priority.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'shipping': {'type': 'boolean', 'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'manage_stock': {'type': 'mixed', 'required': False, 'description': 'Stock management at variation level.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the variation is downloadable.'}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the variation is virtual.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'visible': {'type': 'boolean', 'required': False, 'description': "Define if the variation is visible on the product's page."}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/network': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'items': {'type': 'integer'}}, 'status': {'type': 'string', 'required': False, 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'parent_exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific product.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.'}, 'customer': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific customer.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Category name.'}, 'display': {'type': 'string', 'required': False, 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports/top_sellers': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'period': {'type': 'string', 'required': False, 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.'}, 'date_max': {'type': 'string', 'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.'}, 'date_min': {'type': 'string', 'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'status': {'type': 'string', 'required': False, 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.'}, 'currency': {'type': 'string', 'required': False, 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line subtotal (before discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'subtotal_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).'}, 'sku': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Product SKU.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'quantity': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Quantity ordered.'}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'price': {'context': ['view', 'edit'], 'type': 'number', 'readonly': True, 'description': 'Product price.'}, 'variation_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Variation ID, if applicable.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax subtotal.'}}, 'type': 'object'}}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of product.'}, 'product_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Product ID.'}}, 'type': 'object'}}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'User ID who owns the order. 0 for guests.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'code': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Coupon code.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount total.'}, 'discount_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Discount total tax.'}}, 'type': 'object'}}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'method_title': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}}, 'type': 'object'}}, 'method_id': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Shipping method ID.'}}, 'type': 'object'}}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'set_paid': {'type': 'boolean', 'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}, 'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Line total (after discounts).'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Item ID.'}, 'meta_data': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'total_tax': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).'}, 'name': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Fee name.'}, 'tax_status': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.'}, 'tax_class': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Tax class of fee.'}, 'taxes': {'context': ['view', 'edit'], 'type': 'array', 'readonly': True, 'description': 'Line taxes.', 'items': {'properties': {'total': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax total.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.'}, 'subtotal': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tax subtotal.'}}, 'type': 'object'}}}, 'type': 'object'}}, 'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}, 'topic': {'type': 'string', 'required': False, 'description': 'Webhook topic.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}, 'status': {'type': 'string', 'required': False, 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Shipping class name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Tax class name.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'value': {'type': 'mixed', 'required': False, 'description': 'Setting value.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Name of the scenario.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Scenario ID.'}, 'configuration': {'context': ['view', 'edit'], 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_id': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Component ID.'}, 'component_options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'actions': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Scenario actions.', 'items': {'properties': {'action_data': {'context': ['view', 'edit'], 'type': 'object', 'description': 'Scenario action data.'}, 'action_id': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the scenario action is active.'}}, 'type': 'object'}}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Optional short description of the scenario.'}}, 'type': 'object'}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'description': 'Allow one item to be bought in a single order.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Featured product.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'properties': {'options': {'context': ['view', 'edit'], 'type': 'array', 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}, 'variation': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute position.'}, 'visible': {'context': ['view', 'edit'], 'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}}, 'type': 'object'}}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the product is downloadable.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'thumbnail_src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'URL of the thumbnail associated with this Component.'}, 'title': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Title of the component.'}, 'discount': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'query_ids': {'context': ['view', 'edit'], 'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Component ID.'}, 'description': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Description of the component.'}, 'query_type': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.'}, 'default_option_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'thumbnail_id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'optional': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the component is optional.'}, 'quantity_min': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Minimum component quantity.'}, 'options_style': {'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.'}, 'shipped_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'priced_individually': {'context': ['view', 'edit'], 'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}}, 'type': 'object'}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Category ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Category slug.'}}, 'type': 'object'}}, 'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File name.'}, 'id': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'File MD5 hash.'}, 'file': {'context': ['view', 'edit'], 'type': 'string', 'description': 'File URL.'}}, 'type': 'object'}}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'catalog_visibility': {'type': 'string', 'required': False, 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Tag ID.'}, 'slug': {'context': ['view', 'edit'], 'type': 'string', 'readonly': True, 'description': 'Tag slug.'}}, 'type': 'object'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'description': 'Stock management at product level.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.'}, 'alt': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image alternative text.'}, 'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image name.'}, 'src': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Image URL.', 'format': 'uri'}, 'date_modified': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone."}, 'date_modified_gmt': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.'}, 'position': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image position. 0 means that the image is featured.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Image ID.'}, 'date_created': {'context': ['view', 'edit'], 'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone."}}, 'type': 'object'}}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'status': {'type': 'string', 'required': False, 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'properties': {'name': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Attribute name.'}, 'option': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Selected attribute term name.'}, 'id': {'context': ['view', 'edit'], 'type': 'integer', 'description': 'Attribute ID.'}}, 'type': 'object'}}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'description': 'Allow reviews.'}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the product is virtual.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'methods': ['GET'], 'args': []}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific parent.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific ids.', 'items': {'type': 'integer'}}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Tag name.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'type': {'type': 'string', 'required': False, 'default': 'any', 'enum': ['any', 'customer', 'internal'], 'description': 'Limit result to customers or internal notes.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}, {'methods': ['POST'], 'args': {'note': {'type': 'string', 'required': True, 'description': 'Order note content.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'customer_note': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'title': {'type': 'string', 'required': False, 'description': 'Payment gateway title on checkout.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Payment gateway settings.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Payment gateway enabled status.'}, 'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Payment gateway sort order.'}, 'description': {'type': 'string', 'required': False, 'description': 'Payment gateway description on checkout.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'webhook_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the webhook.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}}}, {'methods': ['POST'], 'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping method sort order.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Shipping method settings.'}, 'method_id': {'required': True, 'description': 'Shipping method ID.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Shipping method enabled status.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'password': {'type': 'string', 'required': False, 'description': 'Customer password.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': False, 'description': 'The email address for the customer.'}, 'username': {'type': 'string', 'required': False, 'description': 'Customer login name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}}}, {'methods': ['DELETE'], 'args': {'reassign': {'type': 'integer', 'required': False, 'default': 0, 'description': 'ID to reassign posts to.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'default': 'view'}, 'namespace': {'required': False, 'default': 'wc/v2'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'email': {'type': 'string', 'required': False, 'description': 'Reviewer email.'}, 'name': {'type': 'string', 'required': False, 'description': 'Reviewer name.'}, 'review': {'type': 'string', 'required': False, 'description': 'The content of the review.'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'order', 'enum': ['id', 'order'], 'description': 'Sort collection by object attribute.'}, 'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Sort by tax class.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}}, {'methods': ['POST'], 'args': {'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'class': {'type': 'string', 'required': False, 'default': 'standard', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.'}, 'compound': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether or not this is a compound rate.'}, 'priority': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Tax priority.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'shipping': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Whether or not this tax rate also gets applied to shipping.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'compound': {'type': 'boolean', 'required': False, 'description': 'Whether or not this is a compound rate.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'priority': {'type': 'integer', 'required': False, 'description': 'Tax priority.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'shipping': {'type': 'boolean', 'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'webhook_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the webhook.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'type': 'string', 'required': False, 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.'}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'code': {'type': 'string', 'required': False, 'description': 'Coupon code.'}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'status': {'type': 'string', 'required': False, 'default': 'all', 'enum': ['all', 'active', 'paused', 'disabled'], 'description': 'Limit result set to webhooks assigned a specific status.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific IDs.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'order': {'type': 'string', 'required': False, 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'date', 'enum': ['date', 'id', 'title'], 'description': 'Sort collection by object attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}, 'topic': {'type': 'string', 'required': True, 'description': 'Webhook topic.'}, 'delivery_url': {'type': 'string', 'required': True, 'description': 'Webhook delivery URL.'}, 'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}, 'status': {'type': 'string', 'required': False, 'default': 'active', 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping method sort order.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Shipping method settings.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Shipping method enabled status.'}}}, {'methods': ['DELETE'], 'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}, 'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'exclude': {'type': 'array', 'required': False, 'default': [], 'description': 'Ensure result set excludes specific ids.', 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'default': [], 'description': 'Limit result set to specific ids.', 'items': {'type': 'integer'}}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'orderby': {'type': 'string', 'required': False, 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'order': {'type': 'string', 'required': False, 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}}}, {'methods': ['POST'], 'args': {'email': {'type': 'string', 'required': True, 'description': 'Email of the reviewer.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name of the reviewer.'}, 'review': {'type': 'string', 'required': True, 'description': 'Review content.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'password': {'type': 'string', 'required': False, 'description': 'Customer password.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'properties': {'id': {'context': ['view', 'edit'], 'type': 'integer', 'readonly': True, 'description': 'Meta ID.'}, 'value': {'context': ['view', 'edit'], 'type': 'mixed', 'description': 'Meta value.'}, 'key': {'context': ['view', 'edit'], 'type': 'string', 'description': 'Meta key.'}}, 'type': 'object'}}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': False, 'description': 'The email address for the customer.'}, 'username': {'type': 'string', 'required': False, 'description': 'Customer login name.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'value': {'type': 'mixed', 'required': False, 'description': 'Setting value.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'type': {'type': 'string', 'required': False, 'default': 'select', 'enum': ['select'], 'description': 'Type of attribute.'}, 'has_archives': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Enable/Disable attribute archives.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'order_by': {'type': 'string', 'required': False, 'default': 'menu_order', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Category name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'display': {'type': 'string', 'required': False, 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'required': False, 'description': 'Term name.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'required': False, 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Required to be true, as resource does not support trashing.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}}], 'namespace': 'wc/v2'}}
INFO:root:Get INDEX API info from cache.
INFO:root:{'/wc/v2/shipping_methods': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'status': {'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False}, 'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'orderby': {'type': 'string', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'parent': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific parent.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/system_status/tools': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}, 'enabled': {'type': 'boolean', 'description': 'Shipping method enabled status.', 'required': False}, 'settings': {'type': 'object', 'description': 'Shipping method settings.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping method sort order.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}]}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'message': {'type': 'string', 'description': 'Tool return message.', 'required': False}, 'description': {'type': 'string', 'description': 'Tool description.', 'required': False}, 'success': {'type': 'boolean', 'description': 'Did the tool run successfully?', 'required': False}, 'id': {'type': 'string', 'description': 'A unique identifier for the tool.', 'required': False}, 'action': {'type': 'string', 'description': 'What running the tool will do.', 'required': False}, 'name': {'type': 'string', 'description': 'Tool name.', 'required': False}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'review': {'type': 'string', 'description': 'The content of the review.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'email': {'type': 'string', 'description': 'Reviewer email.', 'required': False}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'name': {'type': 'string', 'description': 'Reviewer name.', 'required': False}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}}}, {'methods': ['DELETE'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'review': {'type': 'string', 'description': 'The content of the review.', 'required': False}, 'name': {'type': 'string', 'description': 'Reviewer name.', 'required': False}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'email': {'type': 'string', 'description': 'Reviewer email.', 'required': False}}}]}, '/wc/v2/products': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'methods': ['GET'], 'args': {'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'status': {'type': 'string', 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to products with a specific slug.', 'required': False}, 'min_price': {'type': 'string', 'description': 'Limit result set to products based on a minimum price.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Limit result set to products in stock or out of stock.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'parent': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'required': False}, 'type': {'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'category': {'type': 'string', 'description': 'Limit result set to products assigned a specific category ID.', 'required': False}, 'max_price': {'type': 'string', 'description': 'Limit result set to products based on a maximum price.', 'required': False}, 'tag': {'type': 'string', 'description': 'Limit result set to products assigned a specific tag ID.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'on_sale': {'type': 'boolean', 'description': 'Limit result set to products on sale.', 'required': False}, 'parent_exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Limit result set to featured products.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False}, 'attribute_term': {'type': 'string', 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False}, 'sku': {'type': 'string', 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'attribute': {'type': 'string', 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}}}, {'methods': ['POST'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'options': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'tax_status': {'type': 'string', 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'tags': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag slug.'}}}, 'description': 'List of tags.', 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'default_attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'required': False}, 'backorders': {'type': 'string', 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'composite_scenarios': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'actions': {'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'action_id': {'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'context': ['view', 'edit']}, 'configuration': {'properties': {'options_modifier': {'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'component_options': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'downloadable': {'type': 'boolean', 'default': False, 'description': 'If the product is downloadable.', 'required': False}, 'upsell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'download_limit': {'type': 'integer', 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'composite_shop_price_calc': {'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'default': True, 'description': 'Allow reviews.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'manage_stock': {'type': 'boolean', 'default': False, 'description': 'Stock management at product level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'categories': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category slug.'}}}, 'description': 'List of categories.', 'required': False}, 'virtual': {'type': 'boolean', 'default': False, 'description': 'If the product is virtual.', 'required': False}, 'status': {'type': 'string', 'default': 'publish', 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False}, 'in_stock': {'type': 'boolean', 'default': True, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'cross_sell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'required': False}, 'type': {'type': 'string', 'default': 'simple', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'composite_components': {'type': 'array', 'items': {'type': 'object', 'properties': {'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'query_type': {'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'grouped_products': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'catalog_visibility': {'type': 'string', 'default': 'visible', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False}, 'featured': {'type': 'boolean', 'default': False, 'description': 'Featured product.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'sold_individually': {'type': 'boolean', 'default': False, 'description': 'Allow one item to be bought in a single order.', 'required': False}, 'download_expiry': {'type': 'integer', 'default': -1, 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'images': {'type': 'array', 'items': {'type': 'object', 'properties': {'date_modified': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'date_created_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}}}, 'description': 'List of images.', 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}}}]}, '/wc/v2/customers/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'password': {'type': 'string', 'description': 'Customer password.', 'required': False}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'email': {'type': 'string', 'description': 'The email address for the customer.', 'required': False}, 'username': {'type': 'string', 'description': 'Customer login name.', 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}}}]}, '/wc/v2/products/shipping_classes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'orderby': {'type': 'string', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/payment_gateways': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/system_status': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/orders': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific product.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'customer': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific customer.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'status': {'type': 'string', 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'parent_exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False}, 'parent': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'dp': {'type': 'integer', 'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False}}}, {'methods': ['POST'], 'args': {'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'line_items': {'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'price': {'type': 'number', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product price.'}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'required': False}, 'status': {'type': 'string', 'default': 'pending', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'customer_id': {'type': 'integer', 'default': 0, 'description': 'User ID who owns the order. 0 for guests.', 'required': False}, 'fee_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'tax_status': {'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}, 'set_paid': {'type': 'boolean', 'default': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'currency': {'type': 'string', 'default': 'GBP', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False}, 'coupon_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'required': False}, 'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}}}]}, '/wc/v2/reports/sales': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'methods': ['GET'], 'args': {'period': {'type': 'string', 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.', 'required': False}, 'date_min': {'type': 'string', 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'date_max': {'type': 'string', 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False}}}]}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'shipping': {'type': 'boolean', 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'compound': {'type': 'boolean', 'description': 'Whether or not this is a compound rate.', 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'priority': {'type': 'integer', 'description': 'Tax priority.', 'required': False}, 'class': {'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/products/tags': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'orderby': {'type': 'string', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'webhook_id': {'type': 'integer', 'description': 'Unique identifier for the webhook.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/shipping/zones': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'methods': ['GET'], 'args': []}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Shipping zone name.', 'required': True}, 'order': {'type': 'integer', 'description': 'Shipping zone order.', 'required': False}}}]}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Shipping class name.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/customers/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'password': {'type': 'string', 'description': 'Customer password.', 'required': False}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'username': {'type': 'string', 'description': 'Customer login name.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'email': {'type': 'string', 'description': 'The email address for the customer.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'reassign': {'type': 'integer', 'default': 0, 'description': 'ID to reassign posts to.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}}}]}, '/wc/v2/webhooks': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'methods': ['GET'], 'args': {'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'status': {'type': 'string', 'default': 'all', 'enum': ['all', 'active', 'paused', 'disabled'], 'description': 'Limit result set to webhooks assigned a specific status.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'title'], 'description': 'Sort collection by object attribute.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}}}, {'methods': ['POST'], 'args': {'delivery_url': {'type': 'string', 'description': 'Webhook delivery URL.', 'required': True}, 'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}, 'status': {'type': 'string', 'default': 'active', 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False}, 'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': True}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'backorders': {'type': 'string', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'manage_stock': {'type': 'mixed', 'description': 'Stock management at variation level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'tax_status': {'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the variation is downloadable.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the variation is virtual.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'visible': {'type': 'boolean', 'description': "Define if the variation is visible on the product's page.", 'required': False}}}, {'methods': ['DELETE'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/products/tags/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'Tag name.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/products/attributes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST'], 'args': {'type': {'type': 'string', 'default': 'select', 'enum': ['select'], 'description': 'Type of attribute.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'has_archives': {'type': 'boolean', 'default': False, 'description': 'Enable/Disable attribute archives.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'order_by': {'type': 'string', 'default': 'menu_order', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False}}}]}, '/wc/v2/products/attributes/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'type': {'type': 'string', 'enum': ['select'], 'description': 'Type of attribute.', 'required': False}, 'name': {'type': 'string', 'description': 'Attribute name.', 'required': False}, 'has_archives': {'type': 'boolean', 'description': 'Enable/Disable attribute archives.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'order_by': {'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False}}}]}, '/wc/v2/reports/top_sellers': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'methods': ['GET'], 'args': {'period': {'type': 'string', 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.', 'required': False}, 'date_min': {'type': 'string', 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'date_max': {'type': 'string', 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False}}}]}, '/wc/v2/taxes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'methods': ['GET'], 'args': {'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'class': {'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Sort by tax class.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'orderby': {'type': 'string', 'default': 'order', 'enum': ['id', 'order'], 'description': 'Sort collection by object attribute.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}}}, {'methods': ['POST'], 'args': {'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'shipping': {'type': 'boolean', 'default': True, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'compound': {'type': 'boolean', 'default': False, 'description': 'Whether or not this is a compound rate.', 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'priority': {'type': 'integer', 'default': 1, 'description': 'Tax priority.', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'class': {'type': 'string', 'default': 'standard', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False}}}]}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'name': {'type': 'string', 'description': 'Term name.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/orders/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}, 'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'line_items': {'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'price': {'type': 'number', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product price.'}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'required': False}, 'status': {'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'customer_id': {'type': 'integer', 'description': 'User ID who owns the order. 0 for guests.', 'required': False}, 'fee_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'tax_status': {'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}, 'set_paid': {'type': 'boolean', 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'currency': {'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False}, 'coupon_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/reports': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'customer_id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'methods': ['DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['DELETE'], 'args': {'slug': {'type': 'string', 'description': 'Unique slug for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'methods': ['GET'], 'args': {'namespace': {'default': 'wc/v2', 'required': False}, 'context': {'default': 'view', 'required': False}}}]}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'title': {'type': 'string', 'description': 'Payment gateway title on checkout.', 'required': False}, 'description': {'type': 'string', 'description': 'Payment gateway description on checkout.', 'required': False}, 'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'enabled': {'type': 'boolean', 'description': 'Payment gateway enabled status.', 'required': False}, 'order': {'type': 'integer', 'description': 'Payment gateway sort order.', 'required': False}, 'settings': {'type': 'object', 'description': 'Payment gateway settings.', 'required': False}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'review': {'type': 'string', 'description': 'Review content.', 'required': True}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'email': {'type': 'string', 'description': 'Email of the reviewer.', 'required': True}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'name': {'type': 'string', 'description': 'Name of the reviewer.', 'required': True}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}}}]}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'Term name.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/customers': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'methods': ['GET'], 'args': {'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific IDs.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'role': {'type': 'string', 'default': 'customer', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'description': 'Limit result set to resources with a specific role.', 'required': False}, 'email': {'type': 'string', 'description': 'Limit result set to resources with a specific email.', 'required': False}, 'orderby': {'type': 'string', 'default': 'name', 'enum': ['id', 'include', 'name', 'registered_date'], 'description': 'Sort collection by object attribute.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}}}, {'methods': ['POST'], 'args': {'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'password': {'type': 'string', 'description': 'New user password.', 'required': True}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'email': {'type': 'string', 'description': 'New user email address.', 'required': True}, 'username': {'type': 'string', 'description': 'New user username.', 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}}}]}, '/wc/v2/products/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'options': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'tax_status': {'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'tags': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag slug.'}}}, 'description': 'List of tags.', 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'default_attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'required': False}, 'backorders': {'type': 'string', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'composite_scenarios': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'actions': {'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'action_id': {'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'context': ['view', 'edit']}, 'configuration': {'properties': {'options_modifier': {'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'component_options': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the product is downloadable.', 'required': False}, 'upsell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'composite_shop_price_calc': {'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'description': 'Allow reviews.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'manage_stock': {'type': 'boolean', 'description': 'Stock management at product level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'categories': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category slug.'}}}, 'description': 'List of categories.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the product is virtual.', 'required': False}, 'status': {'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'cross_sell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'required': False}, 'type': {'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'composite_components': {'type': 'array', 'items': {'type': 'object', 'properties': {'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'query_type': {'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'grouped_products': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'catalog_visibility': {'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Featured product.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'sold_individually': {'type': 'boolean', 'description': 'Allow one item to be bought in a single order.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'images': {'type': 'array', 'items': {'type': 'object', 'properties': {'date_modified': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'date_created_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}}}, 'description': 'List of images.', 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}, 'value': {'type': 'mixed', 'description': 'Setting value.', 'required': False}}}]}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}, 'value': {'type': 'mixed', 'description': 'Setting value.', 'required': False}}}]}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Tag name.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/orders/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'line_items': {'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'price': {'type': 'number', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product price.'}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'required': False}, 'status': {'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'customer_id': {'type': 'integer', 'description': 'User ID who owns the order. 0 for guests.', 'required': False}, 'fee_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'tax_status': {'type': 'string', 'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'taxes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'total': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tax total.'}}}, 'readonly': True, 'context': ['view', 'edit'], 'description': 'Line taxes.'}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}, 'set_paid': {'type': 'boolean', 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'currency': {'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False}, 'coupon_lines': {'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'required': False}, 'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}}}]}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}, 'type': {'type': 'string', 'enum': ['postcode', 'state', 'country', 'continent'], 'description': 'Shipping zone location type.', 'required': False}, 'code': {'type': 'string', 'description': 'Shipping zone location code.', 'required': False}}}]}, '/wc/v2/products/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'options': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'tax_status': {'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'tags': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Tag slug.'}}}, 'description': 'List of tags.', 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'default_attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'required': False}, 'backorders': {'type': 'string', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'composite_scenarios': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'actions': {'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'action_id': {'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'context': ['view', 'edit']}, 'configuration': {'properties': {'options_modifier': {'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'component_options': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the product is downloadable.', 'required': False}, 'upsell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'composite_shop_price_calc': {'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'description': 'Allow reviews.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'manage_stock': {'type': 'boolean', 'description': 'Stock management at product level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'categories': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category name.'}, 'slug': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Category slug.'}}}, 'description': 'List of categories.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the product is virtual.', 'required': False}, 'status': {'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'cross_sell_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'required': False}, 'type': {'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'composite_components': {'type': 'array', 'items': {'type': 'object', 'properties': {'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'query_type': {'type': 'string', 'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'grouped_products': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'catalog_visibility': {'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Featured product.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'sold_individually': {'type': 'boolean', 'description': 'Allow one item to be bought in a single order.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'images': {'type': 'array', 'items': {'type': 'object', 'properties': {'date_modified': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'date_created_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}}}, 'description': 'List of images.', 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/products/categories/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'display': {'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'name': {'type': 'string', 'description': 'Category name.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/settings': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'methods': ['GET'], 'args': []}]}, '/wc/v2/orders/network': {'methods': ['GET'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific product.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'customer': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific customer.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'status': {'type': 'string', 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'parent_exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False}, 'parent': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'dp': {'type': 'integer', 'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False}}}]}, '/wc/v2/coupons/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'exclude_sale_items': {'type': 'boolean', 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False}, 'free_shipping': {'type': 'boolean', 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}, 'product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'required': False}, 'excluded_product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'required': False}, 'product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'required': False}, 'individual_use': {'type': 'boolean', 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': False}, 'email_restrictions': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'required': False}, 'discount_type': {'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'status': {'type': 'string', 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to products with a specific slug.', 'required': False}, 'min_price': {'type': 'string', 'description': 'Limit result set to products based on a minimum price.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Limit result set to products in stock or out of stock.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'parent': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'required': False}, 'type': {'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'category': {'type': 'string', 'description': 'Limit result set to products assigned a specific category ID.', 'required': False}, 'max_price': {'type': 'string', 'description': 'Limit result set to products based on a maximum price.', 'required': False}, 'tag': {'type': 'string', 'description': 'Limit result set to products assigned a specific tag ID.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'on_sale': {'type': 'boolean', 'description': 'Limit result set to products on sale.', 'required': False}, 'parent_exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Limit result set to featured products.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False}, 'attribute_term': {'type': 'string', 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False}, 'sku': {'type': 'string', 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'attribute': {'type': 'string', 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}}}, {'methods': ['POST'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'backorders': {'type': 'string', 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'manage_stock': {'type': 'mixed', 'default': False, 'description': 'Stock management at variation level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'tax_status': {'type': 'string', 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'in_stock': {'type': 'boolean', 'default': True, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'download_limit': {'type': 'integer', 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'downloadable': {'type': 'boolean', 'default': False, 'description': 'If the variation is downloadable.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'download_expiry': {'type': 'integer', 'default': -1, 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'virtual': {'type': 'boolean', 'default': False, 'description': 'If the variation is virtual.', 'required': False}, 'visible': {'type': 'boolean', 'default': True, 'description': "Define if the variation is visible on the product's page.", 'required': False}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'attributes': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'required': False}, 'backorders': {'type': 'string', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'manage_stock': {'type': 'mixed', 'description': 'Stock management at variation level.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'tax_status': {'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'downloads': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'readonly': True, 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the variation is downloadable.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the variation is virtual.', 'required': False}, 'visible': {'type': 'boolean', 'description': "Define if the variation is visible on the product's page.", 'required': False}}}]}, '/wc/v2/products/shipping_classes/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'Shipping class name.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/taxes/classes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Tax class name.', 'required': True}}}]}, '/wc/v2/coupons': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'methods': ['GET'], 'args': {'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'code': {'type': 'string', 'description': 'Limit result set to resources with a specific code.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}}}, {'methods': ['POST'], 'args': {'exclude_sale_items': {'type': 'boolean', 'default': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False}, 'free_shipping': {'type': 'boolean', 'default': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}, 'product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'required': False}, 'excluded_product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'required': False}, 'product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'required': False}, 'individual_use': {'type': 'boolean', 'default': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': True}, 'email_restrictions': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'required': False}, 'discount_type': {'type': 'string', 'default': 'fixed_cart', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}}}]}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Shipping zone name.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping zone order.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'display': {'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Category name.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}, {'methods': ['POST'], 'args': {'method_id': {'description': 'Shipping method ID.', 'required': True}, 'enabled': {'type': 'boolean', 'description': 'Shipping method enabled status.', 'required': False}, 'settings': {'type': 'object', 'description': 'Shipping method settings.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping method sort order.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'type': {'type': 'string', 'default': 'any', 'enum': ['any', 'customer', 'internal'], 'description': 'Limit result to customers or internal notes.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}, {'methods': ['POST'], 'args': {'note': {'type': 'string', 'description': 'Order note content.', 'required': True}, 'customer_note': {'type': 'boolean', 'default': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}]}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'exclude_sale_items': {'type': 'boolean', 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False}, 'free_shipping': {'type': 'boolean', 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}, 'product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'required': False}, 'excluded_product_categories': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'required': False}, 'product_ids': {'type': 'array', 'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'required': False}, 'individual_use': {'type': 'boolean', 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': False}, 'email_restrictions': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'required': False}, 'discount_type': {'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False}}}]}, '/wc/v2/taxes/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'shipping': {'type': 'boolean', 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'compound': {'type': 'boolean', 'description': 'Whether or not this is a compound rate.', 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'priority': {'type': 'integer', 'description': 'Tax priority.', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'class': {'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'orderby': {'type': 'string', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False}, 'order': {'type': 'string', 'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}, 'parent_exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False}, 'parent': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'required': False}, 'dp': {'type': 'integer', 'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}, {'methods': ['POST'], 'args': {'refunded_by': {'type': 'integer', 'description': 'User ID of user who created the refund.', 'required': False}, 'refunded_payment': {'type': 'boolean', 'description': 'If the payment was refunded via the API.', 'required': False}, 'reason': {'type': 'string', 'description': 'Reason for refund.', 'required': False}, 'api_refund': {'type': 'boolean', 'default': True, 'description': 'When true, the payment gateway API is used to generate the refund.', 'required': False}, 'meta_data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'readonly': True, 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}}}, 'description': 'Meta data.', 'required': False}, 'amount': {'type': 'string', 'description': 'Refund amount.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}]}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/products/categories': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'methods': ['GET'], 'args': {'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'orderby': {'type': 'string', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'page': {'type': 'integer', 'default': 1, 'description': 'Current page of the collection.', 'required': False}, 'exclude': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'include': {'type': 'array', 'default': [], 'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'required': False}, 'order': {'type': 'string', 'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False}, 'parent': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific parent.', 'required': False}, 'per_page': {'type': 'integer', 'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False}}}, {'methods': ['POST'], 'args': {'display': {'type': 'string', 'default': 'default', 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}}}]}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'has_archives': {'type': 'boolean', 'description': 'Enable/Disable attribute archives.', 'required': False}, 'order_by': {'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False}, 'type': {'type': 'string', 'enum': ['select'], 'description': 'Type of attribute.', 'required': False}, 'name': {'type': 'string', 'description': 'Attribute name.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'default': True, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'force': {'type': 'boolean', 'default': True, 'description': 'Required to be true, as resource does not support trashing.', 'required': False}}}]}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'webhook_id': {'type': 'integer', 'description': 'Unique identifier for the webhook.', 'required': False}, 'context': {'type': 'string', 'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False}}}]}, '/wc/v2/webhooks/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}, 'status': {'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': False}}}]}}
11:02:54,642 root INFO Get INDEX API info from cache.
11:02:54,645 root INFO {'/wc/v2/customers/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'email': {'required': False, 'description': 'The email address for the customer.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'username': {'required': False, 'description': 'Customer login name.', 'type': 'string'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'password': {'required': False, 'description': 'Customer password.', 'type': 'string'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'reassign': {'required': False, 'description': 'ID to reassign posts to.', 'type': 'integer', 'default': 0}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tag name.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'display': {'required': False, 'description': 'Category archive display type.', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both']}, 'name': {'required': False, 'description': 'Category name.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'role': {'required': False, 'description': 'Limit result set to resources with a specific role.', 'type': 'string', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'default': 'customer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['id', 'include', 'name', 'registered_date'], 'default': 'name'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'email': {'required': False, 'description': 'Limit result set to resources with a specific email.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'email': {'required': True, 'description': 'New user email address.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'username': {'required': False, 'description': 'New user username.', 'type': 'string'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'password': {'required': True, 'description': 'New user password.', 'type': 'string'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'class': {'required': False, 'description': 'Sort by tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate']}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['id', 'order'], 'default': 'order'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}, 'class': {'required': False, 'description': 'Tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'default': 'standard'}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'default': True}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'default': False}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'priority': {'required': False, 'description': 'Tax priority.', 'type': 'integer', 'default': 1}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'review': {'required': True, 'description': 'Review content.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'name': {'required': True, 'description': 'Name of the reviewer.', 'type': 'string'}, 'email': {'required': True, 'description': 'Email of the reviewer.', 'type': 'string'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}}}], 'namespace': 'wc/v2'}, '/wc/v2': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'default': 'view'}, 'namespace': {'required': False, 'default': 'wc/v2'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'code': {'required': False, 'description': 'Shipping zone location code.', 'type': 'string'}, 'type': {'required': False, 'description': 'Shipping zone location type.', 'type': 'string', 'enum': ['postcode', 'state', 'country', 'continent']}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'type': 'mixed'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes']}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none']}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'type': 'boolean'}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'type': 'boolean'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'type': 'boolean'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}, 'class': {'required': False, 'description': 'Tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate']}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean'}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'type': 'boolean'}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'priority': {'required': False, 'description': 'Tax priority.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Term name.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'type': {'required': False, 'description': 'Type of attribute.', 'type': 'string', 'enum': ['select']}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id']}, 'name': {'required': False, 'description': 'Attribute name.', 'type': 'string'}, 'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'type': 'boolean'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'email': {'required': False, 'description': 'Reviewer email.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Reviewer name.', 'type': 'string'}, 'review': {'required': False, 'description': 'The content of the review.', 'type': 'string'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'code': {'required': False, 'description': 'Limit result set to resources with a specific code.', 'type': 'string'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'default': False}, 'email_restrictions': {'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False}, 'product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'default': False}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'default': 'fixed_cart'}, 'excluded_product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'code': {'required': True, 'description': 'Coupon code.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'default': False}, 'excluded_product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports/top_sellers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}, 'period': {'required': False, 'description': 'Report period.', 'type': 'string', 'enum': ['week', 'month', 'last_month', 'year']}, 'date_min': {'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'date_max': {'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean'}, 'email_restrictions': {'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False}, 'product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean'}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person']}, 'excluded_product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'code': {'required': False, 'description': 'Coupon code.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean'}, 'excluded_product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'class': {'required': False, 'description': 'Tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate']}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'type': 'boolean'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'priority': {'required': False, 'description': 'Tax priority.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean'}, 'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'topic': {'required': False, 'description': 'Webhook topic.', 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'type': 'string', 'enum': ['active', 'paused', 'disabled']}, 'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'type': 'mixed'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes']}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none']}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'type': 'boolean'}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'type': 'boolean'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'type': 'boolean'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'default': 2}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'parent_exclude': {'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'default': [], 'required': False}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'parent': {'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'default': [], 'required': False}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'refunded_by': {'required': False, 'description': 'User ID of user who created the refund.', 'type': 'integer'}, 'reason': {'required': False, 'description': 'Reason for refund.', 'type': 'string'}, 'refunded_payment': {'required': False, 'description': 'If the payment was refunded via the API.', 'type': 'boolean'}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'api_refund': {'required': False, 'description': 'When true, the payment gateway API is used to generate the refund.', 'type': 'boolean', 'default': True}, 'amount': {'required': False, 'description': 'Refund amount.', 'type': 'string'}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'customer_id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/network': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'default': 2}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'customer': {'required': False, 'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer'}, 'product': {'required': False, 'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'parent_exclude': {'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'default': [], 'required': False}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'parent': {'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'default': [], 'required': False}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'status': {'required': False, 'description': 'Limit result set to orders assigned a specific status.', 'type': 'string', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'default': 'any'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'enabled': {'required': False, 'description': 'Shipping method enabled status.', 'type': 'boolean'}, 'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'settings': {'required': False, 'description': 'Shipping method settings.', 'type': 'object'}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Shipping method sort order.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'type': 'boolean'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id']}, 'type': {'required': False, 'description': 'Type of attribute.', 'type': 'string', 'enum': ['select']}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Attribute name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': True}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'topic': {'required': False, 'description': 'Webhook topic.', 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'type': 'string', 'enum': ['active', 'paused', 'disabled']}, 'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean'}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW']}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'line_items': {'items': {'type': 'object', 'properties': {'sku': {'description': 'Product SKU.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of product.', 'type': 'string', 'context': ['view', 'edit']}, 'price': {'description': 'Product price.', 'type': 'number', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'product_id': {'description': 'Product ID.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'quantity': {'description': 'Quantity ordered.', 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'type': 'array', 'required': False}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'status': {'required': False, 'description': 'Order status.', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed']}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'coupon_lines': {'items': {'type': 'object', 'properties': {'code': {'description': 'Coupon code.', 'type': 'mixed', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'type': 'string', 'context': ['view', 'edit']}, 'discount_tax': {'description': 'Discount total tax.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer'}, 'shipping_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'method_title': {'description': 'Shipping method name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'method_id': {'description': 'Shipping method ID.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'type': 'array', 'required': False}, 'fee_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'description': 'Tax status of fee.', 'type': 'string', 'enum': ['taxable', 'none'], 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of fee.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Fee name.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'type': 'array', 'required': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'title'], 'default': 'date'}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'status': {'required': False, 'description': 'Limit result set to webhooks assigned a specific status.', 'type': 'string', 'enum': ['all', 'active', 'paused', 'disabled'], 'default': 'all'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'topic': {'required': True, 'description': 'Webhook topic.', 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'default': 'active'}, 'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'delivery_url': {'required': True, 'description': 'Webhook delivery URL.', 'type': 'string'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Tool description.', 'type': 'string'}, 'action': {'required': False, 'description': 'What running the tool will do.', 'type': 'string'}, 'message': {'required': False, 'description': 'Tool return message.', 'type': 'string'}, 'success': {'required': False, 'description': 'Did the tool run successfully?', 'type': 'boolean'}, 'name': {'required': False, 'description': 'Tool name.', 'type': 'string'}, 'id': {'required': False, 'description': 'A unique identifier for the tool.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}}}, {'methods': ['POST'], 'args': {'type': {'required': False, 'description': 'Type of attribute.', 'type': 'string', 'enum': ['select'], 'default': 'select'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'default': 'menu_order'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}, 'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'default': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Shipping class name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': True}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'type': 'boolean'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes']}, 'grouped_products': {'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'type': 'array', 'required': False}, 'default_attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'type': 'array', 'required': False}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'type': 'boolean'}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'type': 'boolean'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden']}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'cross_sell_ids': {'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False}, 'composite_components': {'items': {'type': 'object', 'properties': {'description': {'description': 'Description of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'optional': {'description': 'Indicates whether the component is optional.', 'type': 'boolean', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'type': 'integer', 'context': ['view', 'edit']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer', 'context': ['view', 'edit']}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer', 'context': ['view', 'edit']}, 'id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'context': ['view', 'edit']}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'title': {'description': 'Title of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'query_ids': {'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'context': ['view', 'edit']}, 'query_type': {'description': 'Query type associated with component options.', 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden']}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'tags': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Tag name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tag ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of tags.', 'type': 'array', 'required': False}, 'status': {'required': False, 'description': 'Product status (post status).', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish']}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'type': {'required': False, 'description': 'Product type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite']}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'attributes': {'items': {'type': 'object', 'properties': {'options': {'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'type': 'array', 'context': ['view', 'edit']}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'position': {'description': 'Attribute position.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'categories': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Category name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Category ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of categories.', 'type': 'array', 'required': False}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'type': 'boolean'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none']}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'type': 'boolean'}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'type': 'boolean'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'images': {'items': {'type': 'object', 'properties': {'src': {'description': 'Image URL.', 'type': 'string', 'context': ['view', 'edit'], 'format': 'uri'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'type': 'integer', 'context': ['view', 'edit']}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'alt': {'description': 'Image alternative text.', 'type': 'string', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Image ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of images.', 'type': 'array', 'required': False}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'upsell_ids': {'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False}, 'composite_scenarios': {'items': {'type': 'object', 'properties': {'description': {'description': 'Optional short description of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'actions': {'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'context': ['view', 'edit']}, 'action_data': {'description': 'Scenario action data.', 'type': 'object', 'context': ['view', 'edit']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'type': 'boolean', 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'type': 'array', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Scenario ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'configuration': {'description': 'Scenario matching conditions.', 'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_options': {'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'context': ['view', 'edit']}, 'component_id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit']}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'context': ['view', 'edit']}}}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Payment gateway description on checkout.', 'type': 'string'}, 'order': {'required': False, 'description': 'Payment gateway sort order.', 'type': 'integer'}, 'title': {'required': False, 'description': 'Payment gateway title on checkout.', 'type': 'string'}, 'enabled': {'required': False, 'description': 'Payment gateway enabled status.', 'type': 'boolean'}, 'settings': {'required': False, 'description': 'Payment gateway settings.', 'type': 'object'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'type': {'required': False, 'description': 'Limit result to customers or internal notes.', 'type': 'string', 'enum': ['any', 'customer', 'internal'], 'default': 'any'}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}}}, {'methods': ['POST'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'note': {'required': True, 'description': 'Order note content.', 'type': 'string'}, 'customer_note': {'required': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'type': 'boolean', 'default': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'default': 'name'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'default': False}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'default': [], 'required': False}}}, {'methods': ['POST'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'display': {'required': False, 'description': 'Category archive display type.', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'default': 'default'}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'webhook_id': {'required': False, 'description': 'Unique identifier for the webhook.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': []}], 'namespace': 'wc/v2'}, '/wc/v2/products': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'sku': {'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'parent_exclude': {'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'default': [], 'required': False}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'attribute': {'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'type': {'required': False, 'description': 'Limit result set to products assigned a specific type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite']}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string'}, 'slug': {'required': False, 'description': 'Limit result set to products with a specific slug.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'attribute_term': {'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string'}, 'max_price': {'required': False, 'description': 'Limit result set to products based on a maximum price.', 'type': 'string'}, 'on_sale': {'required': False, 'description': 'Limit result set to products on sale.', 'type': 'boolean'}, 'featured': {'required': False, 'description': 'Limit result set to featured products.', 'type': 'boolean'}, 'parent': {'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'default': [], 'required': False}, 'min_price': {'required': False, 'description': 'Limit result set to products based on a minimum price.', 'type': 'string'}, 'status': {'required': False, 'description': 'Limit result set to products assigned a specific status.', 'type': 'string', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'default': 'any'}, 'category': {'required': False, 'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string'}, 'tag': {'required': False, 'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'in_stock': {'required': False, 'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'default': False}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'default': 'no'}, 'grouped_products': {'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'type': 'array', 'required': False}, 'default_attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'type': 'array', 'required': False}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'type': 'boolean', 'default': True}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'type': 'boolean', 'default': False}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'cross_sell_ids': {'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False}, 'composite_components': {'items': {'type': 'object', 'properties': {'description': {'description': 'Description of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'optional': {'description': 'Indicates whether the component is optional.', 'type': 'boolean', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'type': 'integer', 'context': ['view', 'edit']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer', 'context': ['view', 'edit']}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer', 'context': ['view', 'edit']}, 'id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'context': ['view', 'edit']}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'title': {'description': 'Title of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'query_ids': {'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'context': ['view', 'edit']}, 'query_type': {'description': 'Query type associated with component options.', 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden']}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'default': -1}, 'tags': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Tag name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tag ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of tags.', 'type': 'array', 'required': False}, 'status': {'required': False, 'description': 'Product status (post status).', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'default': 'publish'}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'type': {'required': False, 'description': 'Product type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'default': 'simple'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'default': -1}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'attributes': {'items': {'type': 'object', 'properties': {'options': {'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'type': 'array', 'context': ['view', 'edit']}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'position': {'description': 'Attribute position.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'categories': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Category name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Category ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of categories.', 'type': 'array', 'required': False}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'type': 'boolean', 'default': False}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'default': 'taxable'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'default': 'visible'}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'type': 'boolean', 'default': False}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'type': 'boolean', 'default': False}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'images': {'items': {'type': 'object', 'properties': {'src': {'description': 'Image URL.', 'type': 'string', 'context': ['view', 'edit'], 'format': 'uri'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'type': 'integer', 'context': ['view', 'edit']}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'alt': {'description': 'Image alternative text.', 'type': 'string', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Image ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of images.', 'type': 'array', 'required': False}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'upsell_ids': {'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False}, 'composite_scenarios': {'items': {'type': 'object', 'properties': {'description': {'description': 'Optional short description of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'actions': {'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'context': ['view', 'edit']}, 'action_data': {'description': 'Scenario action data.', 'type': 'object', 'context': ['view', 'edit']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'type': 'boolean', 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'type': 'array', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Scenario ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'configuration': {'description': 'Scenario matching conditions.', 'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_options': {'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'context': ['view', 'edit']}, 'component_id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit']}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'context': ['view', 'edit']}}}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'default': True}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}, 'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'value': {'required': False, 'description': 'Setting value.', 'type': 'mixed'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}, 'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'sku': {'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'parent_exclude': {'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'default': [], 'required': False}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'attribute': {'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'type': {'required': False, 'description': 'Limit result set to products assigned a specific type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite']}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string'}, 'slug': {'required': False, 'description': 'Limit result set to products with a specific slug.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'attribute_term': {'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string'}, 'max_price': {'required': False, 'description': 'Limit result set to products based on a maximum price.', 'type': 'string'}, 'on_sale': {'required': False, 'description': 'Limit result set to products on sale.', 'type': 'boolean'}, 'featured': {'required': False, 'description': 'Limit result set to featured products.', 'type': 'boolean'}, 'parent': {'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'default': [], 'required': False}, 'min_price': {'required': False, 'description': 'Limit result set to products based on a minimum price.', 'type': 'string'}, 'status': {'required': False, 'description': 'Limit result set to products assigned a specific status.', 'type': 'string', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'default': 'any'}, 'category': {'required': False, 'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string'}, 'tag': {'required': False, 'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'in_stock': {'required': False, 'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'type': 'mixed', 'default': False}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'default': 'no'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'default': 'taxable'}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'default': True}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'type': 'boolean', 'default': False}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'default': -1}, 'attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'type': 'boolean', 'default': False}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'default': -1}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'default': True}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports/sales': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}, 'period': {'required': False, 'description': 'Report period.', 'type': 'string', 'enum': ['week', 'month', 'last_month', 'year']}, 'date_min': {'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'date_max': {'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Shipping class name.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'default': 2}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'customer': {'required': False, 'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer'}, 'product': {'required': False, 'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'default': 'date'}, 'parent_exclude': {'items': {'type': 'integer'}, 'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'default': [], 'required': False}, 'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'parent': {'items': {'type': 'integer'}, 'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'default': [], 'required': False}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'status': {'required': False, 'description': 'Limit result set to orders assigned a specific status.', 'type': 'string', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'default': 'any'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'desc'}}}, {'methods': ['POST'], 'args': {'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'default': False}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'default': 'GBP'}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'line_items': {'items': {'type': 'object', 'properties': {'sku': {'description': 'Product SKU.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of product.', 'type': 'string', 'context': ['view', 'edit']}, 'price': {'description': 'Product price.', 'type': 'number', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'product_id': {'description': 'Product ID.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'quantity': {'description': 'Quantity ordered.', 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'type': 'array', 'required': False}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'status': {'required': False, 'description': 'Order status.', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'default': 'pending'}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'coupon_lines': {'items': {'type': 'object', 'properties': {'code': {'description': 'Coupon code.', 'type': 'mixed', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'type': 'string', 'context': ['view', 'edit']}, 'discount_tax': {'description': 'Discount total tax.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'default': 0}, 'shipping_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'method_title': {'description': 'Shipping method name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'method_id': {'description': 'Shipping method ID.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'type': 'array', 'required': False}, 'fee_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'description': 'Tax status of fee.', 'type': 'string', 'enum': ['taxable', 'none'], 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of fee.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Fee name.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'type': 'array', 'required': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tag name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'methods': ['DELETE'], 'endpoints': [{'methods': ['DELETE'], 'args': {'slug': {'required': False, 'description': 'Unique slug for the resource.', 'type': 'string'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'review': {'required': False, 'description': 'The content of the review.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Reviewer name.', 'type': 'string'}, 'email': {'required': False, 'description': 'Reviewer email.', 'type': 'string'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'webhook_id': {'required': False, 'description': 'Unique identifier for the webhook.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/tags': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'default': 'name'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'default': False}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'default': [], 'required': False}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'default': 'name'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'default': False}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'default': [], 'required': False}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'display': {'required': False, 'description': 'Category archive display type.', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both']}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}, 'name': {'required': False, 'description': 'Category name.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'type': 'boolean'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes']}, 'grouped_products': {'items': {'type': 'integer'}, 'description': 'List of grouped products ID.', 'type': 'array', 'required': False}, 'default_attributes': {'items': {'type': 'object', 'properties': {'option': {'description': 'Selected attribute term name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'Defaults variation attributes.', 'type': 'array', 'required': False}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'type': 'boolean'}, 'downloads': {'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'File MD5 hash.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'file': {'description': 'File URL.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of downloadable files.', 'type': 'array', 'required': False}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'type': 'boolean'}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'cross_sell_ids': {'items': {'type': 'integer'}, 'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False}, 'composite_components': {'items': {'type': 'object', 'properties': {'description': {'description': 'Description of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'optional': {'description': 'Indicates whether the component is optional.', 'type': 'boolean', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean', 'context': ['view', 'edit']}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'type': 'integer', 'context': ['view', 'edit']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer', 'context': ['view', 'edit']}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer', 'context': ['view', 'edit']}, 'id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'context': ['view', 'edit']}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'title': {'description': 'Title of the component.', 'type': 'string', 'context': ['view', 'edit']}, 'query_ids': {'items': {'type': 'integer'}, 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'context': ['view', 'edit']}, 'query_type': {'description': 'Query type associated with component options.', 'type': 'string', 'enum': ['product_ids', 'category_ids'], 'context': ['view', 'edit']}}}, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden']}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'tags': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Tag name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tag ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of tags.', 'type': 'array', 'required': False}, 'status': {'required': False, 'description': 'Product status (post status).', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish']}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'type': {'required': False, 'description': 'Product type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite']}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'attributes': {'items': {'type': 'object', 'properties': {'options': {'items': {'type': 'string'}, 'description': 'List of available term names of the attribute.', 'type': 'array', 'context': ['view', 'edit']}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'context': ['view', 'edit'], 'default': False}, 'position': {'description': 'Attribute position.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Attribute name.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Attribute ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of attributes.', 'type': 'array', 'required': False}, 'categories': {'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Category name.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Category ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'List of categories.', 'type': 'array', 'required': False}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'type': 'boolean'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none']}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden']}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'type': 'boolean'}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'type': 'boolean'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'images': {'items': {'type': 'object', 'properties': {'src': {'description': 'Image URL.', 'type': 'string', 'context': ['view', 'edit'], 'format': 'uri'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'type': 'integer', 'context': ['view', 'edit']}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'alt': {'description': 'Image alternative text.', 'type': 'string', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'type': 'date-time', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Image ID.', 'type': 'integer', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'type': 'string', 'context': ['view', 'edit']}}}, 'description': 'List of images.', 'type': 'array', 'required': False}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'upsell_ids': {'items': {'type': 'integer'}, 'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False}, 'composite_scenarios': {'items': {'type': 'object', 'properties': {'description': {'description': 'Optional short description of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'actions': {'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'type': 'string', 'enum': ['compat_group', 'conditional_components'], 'context': ['view', 'edit']}, 'action_data': {'description': 'Scenario action data.', 'type': 'object', 'context': ['view', 'edit']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'type': 'boolean', 'context': ['view', 'edit']}}}, 'description': 'Scenario actions.', 'type': 'array', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Scenario ID.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'configuration': {'description': 'Scenario matching conditions.', 'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_options': {'items': {'type': 'integer'}, 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'context': ['view', 'edit']}, 'component_id': {'description': 'Component ID.', 'type': 'string', 'context': ['view', 'edit']}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'type': 'string', 'enum': ['in', 'not-in', 'masked'], 'context': ['view', 'edit']}}}}}, 'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean'}, 'email_restrictions': {'items': {'type': 'string'}, 'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False}, 'product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean'}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person']}, 'excluded_product_ids': {'items': {'type': 'integer'}, 'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'code': {'required': False, 'description': 'Coupon code.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean'}, 'excluded_product_categories': {'items': {'type': 'integer'}, 'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Term name.', 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view'], 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'email': {'required': False, 'description': 'The email address for the customer.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'username': {'required': False, 'description': 'Customer login name.', 'type': 'string'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'password': {'required': False, 'description': 'Customer password.', 'type': 'string'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'enabled': {'required': False, 'description': 'Shipping method enabled status.', 'type': 'boolean'}, 'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'settings': {'required': False, 'description': 'Shipping method settings.', 'type': 'object'}, 'method_id': {'required': True, 'description': 'Shipping method ID.'}, 'order': {'required': False, 'description': 'Shipping method sort order.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'value': {'required': False, 'description': 'Setting value.', 'type': 'mixed'}, 'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW']}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'line_items': {'items': {'type': 'object', 'properties': {'sku': {'description': 'Product SKU.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of product.', 'type': 'string', 'context': ['view', 'edit']}, 'price': {'description': 'Product price.', 'type': 'number', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'product_id': {'description': 'Product ID.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'quantity': {'description': 'Quantity ordered.', 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'type': 'integer', 'context': ['view', 'edit']}}}, 'description': 'Line items data.', 'type': 'array', 'required': False}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'required': False}, 'status': {'required': False, 'description': 'Order status.', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed']}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'coupon_lines': {'items': {'type': 'object', 'properties': {'code': {'description': 'Coupon code.', 'type': 'mixed', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'type': 'string', 'context': ['view', 'edit']}, 'discount_tax': {'description': 'Discount total tax.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}}}, 'description': 'Coupons line data.', 'type': 'array', 'required': False}, 'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean'}, 'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer'}, 'shipping_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'taxes': {'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'method_title': {'description': 'Shipping method name.', 'type': 'mixed', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'method_id': {'description': 'Shipping method ID.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Shipping lines data.', 'type': 'array', 'required': False}, 'fee_lines': {'items': {'type': 'object', 'properties': {'meta_data': {'items': {'type': 'object', 'properties': {'key': {'description': 'Meta key.', 'type': 'string', 'context': ['view', 'edit']}, 'value': {'description': 'Meta value.', 'type': 'mixed', 'context': ['view', 'edit']}, 'id': {'description': 'Meta ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Meta data.', 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'description': 'Tax status of fee.', 'type': 'string', 'enum': ['taxable', 'none'], 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}, 'tax_class': {'description': 'Tax class of fee.', 'type': 'string', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'type': 'string', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'taxes': {'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'total': {'description': 'Tax total.', 'type': 'string', 'context': ['view', 'edit'], 'readonly': True}, 'id': {'description': 'Tax rate ID.', 'type': 'integer', 'context': ['view', 'edit'], 'readonly': True}}}, 'description': 'Line taxes.', 'type': 'array', 'context': ['view', 'edit'], 'readonly': True}, 'name': {'description': 'Fee name.', 'type': 'mixed', 'context': ['view', 'edit']}}}, 'description': 'Fee lines data.', 'type': 'array', 'required': False}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': []}, {'methods': ['POST'], 'args': {'order': {'required': False, 'description': 'Shipping zone order.', 'type': 'integer'}, 'name': {'required': True, 'description': 'Shipping zone name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}, 'exclude': {'items': {'type': 'integer'}, 'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'default': [], 'required': False}, 'include': {'items': {'type': 'integer'}, 'description': 'Limit result set to specific ids.', 'type': 'array', 'default': [], 'required': False}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'type': 'string', 'enum': ['asc', 'desc'], 'default': 'asc'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'default': 'name'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'type': 'integer', 'default': 1}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'default': False}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'default': 10}}}, {'methods': ['POST'], 'args': {'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'methods': ['GET', 'POST'], 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'type': 'string', 'enum': ['view', 'edit'], 'default': 'view'}}}, {'methods': ['POST'], 'args': {'name': {'required': True, 'description': 'Tax class name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'methods': ['GET'], 'endpoints': [{'methods': ['GET'], 'args': {'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'order': {'required': False, 'description': 'Shipping zone order.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Shipping zone name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'default': False}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}}
11:08:01,579 root INFO Get INDEX API info from cache.
11:08:01,583 root INFO {'/wc/v2': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'args': {'namespace': {'default': 'wc/v2', 'required': False}, 'context': {'default': 'view', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/customers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'args': {'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'email': {'description': 'Limit result set to resources with a specific email.', 'required': False, 'type': 'string'}, 'orderby': {'default': 'name', 'enum': ['id', 'include', 'name', 'registered_date'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'role': {'default': 'customer', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'description': 'Limit result set to resources with a specific role.', 'required': False, 'type': 'string'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}}, 'methods': ['GET']}, {'args': {'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'username': {'description': 'New user username.', 'required': False, 'type': 'string'}, 'password': {'description': 'New user password.', 'required': True, 'type': 'string'}, 'shipping': {'description': 'List of shipping address data.', 'required': False, 'type': 'object'}, 'billing': {'description': 'List of billing address data.', 'required': False, 'type': 'object'}, 'email': {'description': 'New user email address.', 'required': True, 'type': 'string'}, 'first_name': {'description': 'Customer first name.', 'required': False, 'type': 'string'}, 'last_name': {'description': 'Customer last name.', 'required': False, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/attributes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'required': False, 'type': 'boolean'}, 'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False, 'type': 'string'}, 'type': {'enum': ['select'], 'description': 'Type of attribute.', 'required': False, 'type': 'string'}, 'name': {'description': 'Attribute name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'endpoints': [{'args': {'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False, 'type': 'string'}, 'hide_empty': {'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False, 'type': 'boolean'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'required': False, 'type': 'integer'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'required': False, 'type': 'string'}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Name for the resource.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/customers/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'args': {'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'username': {'description': 'Customer login name.', 'required': False, 'type': 'string'}, 'password': {'description': 'Customer password.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'List of shipping address data.', 'required': False, 'type': 'object'}, 'billing': {'description': 'List of billing address data.', 'required': False, 'type': 'object'}, 'email': {'description': 'The email address for the customer.', 'required': False, 'type': 'string'}, 'first_name': {'description': 'Customer first name.', 'required': False, 'type': 'string'}, 'last_name': {'description': 'Customer last name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'args': {'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'title'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'status': {'default': 'all', 'enum': ['all', 'active', 'paused', 'disabled'], 'description': 'Limit result set to webhooks assigned a specific status.', 'required': False, 'type': 'string'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False, 'type': 'string'}, 'topic': {'description': 'Webhook topic.', 'required': True, 'type': 'string'}, 'status': {'default': 'active', 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False, 'type': 'string'}, 'delivery_url': {'description': 'Webhook delivery URL.', 'required': True, 'type': 'string'}, 'name': {'description': 'A friendly name for the webhook.', 'required': False, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'coupon_lines': {'description': 'Coupons line data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'discount_tax': {'description': 'Discount total tax.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'payment_method': {'description': 'Payment method ID.', 'required': False, 'type': 'string'}, 'shipping_lines': {'description': 'Shipping lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'fee_lines': {'description': 'Fee lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Tax subtotal.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'billing': {'description': 'Billing address.', 'required': False, 'type': 'object'}, 'payment_method_title': {'description': 'Payment method title.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'transaction_id': {'description': 'Unique transaction ID.', 'required': False, 'type': 'string'}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'required': False, 'type': 'integer'}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False, 'type': 'string'}, 'customer_note': {'description': 'Note left by customer during checkout.', 'required': False, 'type': 'string'}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'Shipping address.', 'required': False, 'type': 'object'}, 'line_items': {'description': 'Line items data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'sku': {'description': 'Product SKU.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'price': {'description': 'Product price.', 'readonly': True, 'type': 'number', 'context': ['view', 'edit']}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False, 'type': 'boolean'}, 'parent_id': {'description': 'Parent order ID.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tag name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/payment_gateways': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'image': {'description': 'Image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Category name.', 'required': False, 'type': 'string'}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False, 'type': 'string'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}, 'parent': {'description': 'The ID for the parent of the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the variation.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'visible': {'description': "Define if the variation is visible on the product's page.", 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'sale_price': {'description': 'Variation sale price.', 'required': False, 'type': 'string'}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'weight': {'description': 'Variation weight (kg).', 'required': False, 'type': 'string'}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'virtual': {'description': 'If the variation is virtual.', 'required': False, 'type': 'boolean'}, 'image': {'description': 'Variation image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'Variation description.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Variation regular price.', 'required': False, 'type': 'string'}, 'downloadable': {'description': 'If the variation is downloadable.', 'required': False, 'type': 'boolean'}, 'id': {'description': 'Unique identifier for the variation.', 'required': False, 'type': 'integer'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'description': 'Stock management at variation level.', 'required': False, 'type': 'mixed'}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'dimensions': {'description': 'Variation dimensions.', 'required': False, 'type': 'object'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the variation.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'args': {'parent_exclude': {'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.', 'required': False, 'type': 'string'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'featured': {'description': 'Limit result set to featured products.', 'required': False, 'type': 'boolean'}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'required': False, 'type': 'boolean'}, 'status': {'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.', 'required': False, 'type': 'string'}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'required': False, 'type': 'string'}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False, 'type': 'string'}, 'parent': {'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'required': False, 'type': 'string'}, 'max_price': {'description': 'Limit result set to products based on a maximum price.', 'required': False, 'type': 'string'}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'required': False, 'type': 'string'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False, 'type': 'string'}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False, 'type': 'string'}, 'on_sale': {'description': 'Limit result set to products on sale.', 'required': False, 'type': 'boolean'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Scenario ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string'}}}}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string'}}}}}}, 'type': {'default': 'simple', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False, 'type': 'string'}, 'grouped_products': {'description': 'List of grouped products ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'backorders': {'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'featured': {'default': False, 'description': 'Featured product.', 'required': False, 'type': 'boolean'}, 'sale_price': {'description': 'Product sale price.', 'required': False, 'type': 'string'}, 'download_limit': {'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'status': {'default': 'publish', 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False, 'type': 'string'}, 'weight': {'description': 'Product weight (kg).', 'required': False, 'type': 'string'}, 'slug': {'description': 'Product slug.', 'required': False, 'type': 'string'}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'virtual': {'default': False, 'description': 'If the product is virtual.', 'required': False, 'type': 'boolean'}, 'external_url': {'description': 'Product external URL. Only for external products.', 'required': False, 'type': 'string'}, 'tags': {'description': 'List of tags.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Tag name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'downloadable': {'default': False, 'description': 'If the product is downloadable.', 'required': False, 'type': 'boolean'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'parent_id': {'description': 'Product parent ID.', 'required': False, 'type': 'integer'}, 'default_attributes': {'description': 'Defaults variation attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'short_description': {'description': 'Product short description.', 'required': False, 'type': 'string'}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Component ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'variation': {'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'visible': {'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean'}}}}, 'reviews_allowed': {'default': True, 'description': 'Allow reviews.', 'required': False, 'type': 'boolean'}, 'button_text': {'description': 'Product external button text. Only for external products.', 'required': False, 'type': 'string'}, 'in_stock': {'default': True, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'categories': {'description': 'List of categories.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Category name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'download_expiry': {'default': -1, 'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'name': {'description': 'Product name.', 'required': False, 'type': 'string'}, 'sold_individually': {'default': False, 'description': 'Allow one item to be bought in a single order.', 'required': False, 'type': 'boolean'}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'images': {'description': 'List of images.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'src': {'description': 'Image URL.', 'format': 'uri', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'description': {'description': 'Product description.', 'required': False, 'type': 'string'}, 'catalog_visibility': {'default': 'visible', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Product regular price.', 'required': False, 'type': 'string'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'default': False, 'description': 'Stock management at product level.', 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'dimensions': {'description': 'Product dimensions.', 'required': False, 'type': 'object'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/reports': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/shipping_methods': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'endpoints': [{'args': {'slug': {'description': 'Unique slug for the resource.', 'required': False, 'type': 'string'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['DELETE']}, '/wc/v2/orders/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'args': {'coupon_lines': {'description': 'Coupons line data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'discount_tax': {'description': 'Discount total tax.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'transaction_id': {'description': 'Unique transaction ID.', 'required': False, 'type': 'string'}, 'payment_method_title': {'description': 'Payment method title.', 'required': False, 'type': 'string'}, 'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False, 'type': 'boolean'}, 'fee_lines': {'description': 'Fee lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Tax subtotal.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'billing': {'description': 'Billing address.', 'required': False, 'type': 'object'}, 'payment_method': {'description': 'Payment method ID.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'required': False, 'type': 'integer'}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False, 'type': 'string'}, 'customer_note': {'description': 'Note left by customer during checkout.', 'required': False, 'type': 'string'}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'Shipping address.', 'required': False, 'type': 'object'}, 'shipping_lines': {'description': 'Shipping lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'line_items': {'description': 'Line items data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'sku': {'description': 'Product SKU.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'price': {'description': 'Product price.', 'readonly': True, 'type': 'number', 'context': ['view', 'edit']}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'parent_id': {'description': 'Parent order ID.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique ID for the resource.', 'required': False, 'type': 'integer'}, 'code': {'description': 'Shipping zone location code.', 'required': False, 'type': 'string'}, 'type': {'enum': ['postcode', 'state', 'country', 'continent'], 'description': 'Shipping zone location type.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'endpoints': [{'args': {'parent_exclude': {'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.', 'required': False, 'type': 'string'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'featured': {'description': 'Limit result set to featured products.', 'required': False, 'type': 'boolean'}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'required': False, 'type': 'boolean'}, 'status': {'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'description': 'Limit result set to products assigned a specific status.', 'required': False, 'type': 'string'}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'required': False, 'type': 'string'}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'required': False, 'type': 'string'}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False, 'type': 'string'}, 'parent': {'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'required': False, 'type': 'string'}, 'max_price': {'description': 'Limit result set to products based on a maximum price.', 'required': False, 'type': 'string'}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'required': False, 'type': 'string'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False, 'type': 'string'}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False, 'type': 'string'}, 'on_sale': {'description': 'Limit result set to products on sale.', 'required': False, 'type': 'boolean'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'visible': {'default': True, 'description': "Define if the variation is visible on the product's page.", 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'sale_price': {'description': 'Variation sale price.', 'required': False, 'type': 'string'}, 'in_stock': {'default': True, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'download_expiry': {'default': -1, 'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'weight': {'description': 'Variation weight (kg).', 'required': False, 'type': 'string'}, 'download_limit': {'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'virtual': {'default': False, 'description': 'If the variation is virtual.', 'required': False, 'type': 'boolean'}, 'image': {'description': 'Variation image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'Variation description.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Variation regular price.', 'required': False, 'type': 'string'}, 'downloadable': {'default': False, 'description': 'If the variation is downloadable.', 'required': False, 'type': 'boolean'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'default': False, 'description': 'Stock management at variation level.', 'required': False, 'type': 'mixed'}, 'backorders': {'default': 'no', 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'dimensions': {'description': 'Variation dimensions.', 'required': False, 'type': 'object'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Scenario ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string'}}}}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string'}}}}}}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False, 'type': 'string'}, 'grouped_products': {'description': 'List of grouped products ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'featured': {'description': 'Featured product.', 'required': False, 'type': 'boolean'}, 'sale_price': {'description': 'Product sale price.', 'required': False, 'type': 'string'}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False, 'type': 'string'}, 'weight': {'description': 'Product weight (kg).', 'required': False, 'type': 'string'}, 'slug': {'description': 'Product slug.', 'required': False, 'type': 'string'}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'virtual': {'description': 'If the product is virtual.', 'required': False, 'type': 'boolean'}, 'external_url': {'description': 'Product external URL. Only for external products.', 'required': False, 'type': 'string'}, 'tags': {'description': 'List of tags.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Tag name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'downloadable': {'description': 'If the product is downloadable.', 'required': False, 'type': 'boolean'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'parent_id': {'description': 'Product parent ID.', 'required': False, 'type': 'integer'}, 'default_attributes': {'description': 'Defaults variation attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'short_description': {'description': 'Product short description.', 'required': False, 'type': 'string'}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Component ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'variation': {'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'visible': {'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean'}}}}, 'reviews_allowed': {'description': 'Allow reviews.', 'required': False, 'type': 'boolean'}, 'button_text': {'description': 'Product external button text. Only for external products.', 'required': False, 'type': 'string'}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'categories': {'description': 'List of categories.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Category name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'name': {'description': 'Product name.', 'required': False, 'type': 'string'}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'required': False, 'type': 'boolean'}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'images': {'description': 'List of images.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'src': {'description': 'Image URL.', 'format': 'uri', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'description': {'description': 'Product description.', 'required': False, 'type': 'string'}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Product regular price.', 'required': False, 'type': 'string'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'description': 'Stock management at product level.', 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'dimensions': {'description': 'Product dimensions.', 'required': False, 'type': 'object'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/tags/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tag name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'force': {'default': True, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/orders/network': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'args': {'parent_exclude': {'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'status': {'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.', 'required': False, 'type': 'string'}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'required': False, 'type': 'integer'}, 'dp': {'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False, 'type': 'integer'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'required': False, 'type': 'integer'}, 'parent': {'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}, 'description': {'description': 'Payment gateway description on checkout.', 'required': False, 'type': 'string'}, 'enabled': {'description': 'Payment gateway enabled status.', 'required': False, 'type': 'boolean'}, 'order': {'description': 'Payment gateway sort order.', 'required': False, 'type': 'integer'}, 'title': {'description': 'Payment gateway title on checkout.', 'required': False, 'type': 'string'}, 'settings': {'description': 'Payment gateway settings.', 'required': False, 'type': 'object'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'args': [], 'methods': ['GET']}, {'args': {'order': {'description': 'Shipping zone order.', 'required': False, 'type': 'integer'}, 'name': {'description': 'Shipping zone name.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/categories/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'args': {'image': {'description': 'Image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Category name.', 'required': False, 'type': 'string'}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False, 'type': 'string'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}, 'parent': {'description': 'The ID for the parent of the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'usage_limit': {'description': 'How many times the coupon can be used in total.', 'required': False, 'type': 'integer'}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'required': False, 'type': 'string'}, 'description': {'description': 'Coupon description.', 'required': False, 'type': 'string'}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False, 'type': 'string'}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False, 'type': 'boolean'}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False, 'type': 'boolean'}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False, 'type': 'integer'}, 'code': {'description': 'Coupon code.', 'required': False, 'type': 'string'}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False, 'type': 'string'}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'required': False, 'type': 'array', 'items': {'type': 'string'}}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'required': False, 'type': 'string'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'required': False, 'type': 'integer'}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False, 'type': 'string'}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False, 'type': 'boolean'}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'args': {'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Scenario ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string'}}}}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string'}}}}}}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.', 'required': False, 'type': 'string'}, 'grouped_products': {'description': 'List of grouped products ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'featured': {'description': 'Featured product.', 'required': False, 'type': 'boolean'}, 'sale_price': {'description': 'Product sale price.', 'required': False, 'type': 'string'}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).', 'required': False, 'type': 'string'}, 'weight': {'description': 'Product weight (kg).', 'required': False, 'type': 'string'}, 'slug': {'description': 'Product slug.', 'required': False, 'type': 'string'}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'virtual': {'description': 'If the product is virtual.', 'required': False, 'type': 'boolean'}, 'external_url': {'description': 'Product external URL. Only for external products.', 'required': False, 'type': 'string'}, 'tags': {'description': 'List of tags.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Tag slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Tag name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'downloadable': {'description': 'If the product is downloadable.', 'required': False, 'type': 'boolean'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'parent_id': {'description': 'Product parent ID.', 'required': False, 'type': 'integer'}, 'default_attributes': {'description': 'Defaults variation attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'short_description': {'description': 'Product short description.', 'required': False, 'type': 'string'}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Component ID.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'variation': {'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'visible': {'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean'}}}}, 'reviews_allowed': {'description': 'Allow reviews.', 'required': False, 'type': 'boolean'}, 'button_text': {'description': 'Product external button text. Only for external products.', 'required': False, 'type': 'string'}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'categories': {'description': 'List of categories.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'description': 'Category slug.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'name': {'description': 'Category name.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False, 'type': 'string'}, 'name': {'description': 'Product name.', 'required': False, 'type': 'string'}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'required': False, 'type': 'boolean'}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'images': {'description': 'List of images.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'src': {'description': 'Image URL.', 'format': 'uri', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time', 'context': ['view', 'edit']}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'description': {'description': 'Product description.', 'required': False, 'type': 'string'}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Product regular price.', 'required': False, 'type': 'string'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'description': 'Stock management at product level.', 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'dimensions': {'description': 'Product dimensions.', 'required': False, 'type': 'object'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/coupons': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'args': {'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'code': {'description': 'Limit result set to resources with a specific code.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'usage_limit': {'description': 'How many times the coupon can be used in total.', 'required': False, 'type': 'integer'}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'required': False, 'type': 'string'}, 'description': {'description': 'Coupon description.', 'required': False, 'type': 'string'}, 'exclude_sale_items': {'default': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False, 'type': 'boolean'}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'free_shipping': {'default': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False, 'type': 'boolean'}, 'discount_type': {'default': 'fixed_cart', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False, 'type': 'string'}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False, 'type': 'integer'}, 'code': {'description': 'Coupon code.', 'required': True, 'type': 'string'}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False, 'type': 'string'}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'required': False, 'type': 'array', 'items': {'type': 'string'}}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'required': False, 'type': 'string'}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'required': False, 'type': 'integer'}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False, 'type': 'string'}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'individual_use': {'default': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False, 'type': 'boolean'}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique ID for the resource.', 'required': False, 'type': 'integer'}, 'order': {'description': 'Shipping zone order.', 'required': False, 'type': 'integer'}, 'name': {'description': 'Shipping zone name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique ID for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/tags': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'args': {'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False, 'type': 'string'}, 'hide_empty': {'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False, 'type': 'boolean'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'required': False, 'type': 'integer'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Name for the resource.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Shipping class name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'args': [], 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Term name.', 'required': False, 'type': 'string'}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/system_status': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/customers/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'username': {'description': 'Customer login name.', 'required': False, 'type': 'string'}, 'password': {'description': 'Customer password.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'List of shipping address data.', 'required': False, 'type': 'object'}, 'billing': {'description': 'List of billing address data.', 'required': False, 'type': 'object'}, 'email': {'description': 'The email address for the customer.', 'required': False, 'type': 'string'}, 'first_name': {'description': 'Customer first name.', 'required': False, 'type': 'string'}, 'last_name': {'description': 'Customer last name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'reassign': {'default': 0, 'description': 'ID to reassign posts to.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}, 'group': {'description': 'Settings group ID.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}, 'group': {'description': 'Settings group ID.', 'required': False, 'type': 'string'}, 'value': {'description': 'Setting value.', 'required': False, 'type': 'mixed'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'endpoints': [{'args': {'zone_id': {'description': 'Unique ID for the zone.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'enabled': {'description': 'Shipping method enabled status.', 'required': False, 'type': 'boolean'}, 'method_id': {'description': 'Shipping method ID.', 'required': True}, 'order': {'description': 'Shipping method sort order.', 'required': False, 'type': 'integer'}, 'zone_id': {'description': 'Unique ID for the zone.', 'required': False, 'type': 'integer'}, 'settings': {'description': 'Shipping method settings.', 'required': False, 'type': 'object'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/attributes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'has_archives': {'default': False, 'description': 'Enable/Disable attribute archives.', 'required': False, 'type': 'boolean'}, 'order_by': {'default': 'menu_order', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False, 'type': 'string'}, 'type': {'default': 'select', 'enum': ['select'], 'description': 'Type of attribute.', 'required': False, 'type': 'string'}, 'name': {'description': 'Name for the resource.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'endpoints': [{'args': {'customer_id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/taxes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'args': {'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Sort by tax class.', 'required': False, 'type': 'string'}, 'orderby': {'default': 'order', 'enum': ['id', 'order'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'priority': {'default': 1, 'description': 'Tax priority.', 'required': False, 'type': 'integer'}, 'compound': {'default': False, 'description': 'Whether or not this is a compound rate.', 'required': False, 'type': 'boolean'}, 'postcode': {'description': 'Postcode / ZIP.', 'required': False, 'type': 'string'}, 'rate': {'description': 'Tax rate.', 'required': False, 'type': 'string'}, 'shipping': {'default': True, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False, 'type': 'boolean'}, 'country': {'description': 'Country ISO 3166 code.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tax rate name.', 'required': False, 'type': 'string'}, 'order': {'description': 'Indicates the order that will appear in queries.', 'required': False, 'type': 'integer'}, 'city': {'description': 'City name.', 'required': False, 'type': 'string'}, 'class': {'default': 'standard', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False, 'type': 'string'}, 'state': {'description': 'State code.', 'required': False, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'A unique identifier for the tool.', 'required': False, 'type': 'string'}, 'action': {'description': 'What running the tool will do.', 'required': False, 'type': 'string'}, 'message': {'description': 'Tool return message.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tool name.', 'required': False, 'type': 'string'}, 'description': {'description': 'Tool description.', 'required': False, 'type': 'string'}, 'success': {'description': 'Did the tool run successfully?', 'required': False, 'type': 'boolean'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'review': {'description': 'The content of the review.', 'required': False, 'type': 'string'}, 'name': {'description': 'Reviewer name.', 'required': False, 'type': 'string'}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'required': False, 'type': 'date-time'}, 'rating': {'description': 'Review rating (0 to 5).', 'required': False, 'type': 'integer'}, 'email': {'description': 'Reviewer email.', 'required': False, 'type': 'string'}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'required': False, 'type': 'date-time'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'webhook_id': {'description': 'Unique identifier for the webhook.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/system_status/tools': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/reports/top_sellers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'args': {'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False, 'type': 'string'}, 'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'period': {'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'endpoints': [{'args': {'shipping_class': {'description': 'Shipping class slug.', 'required': False, 'type': 'string'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.', 'required': False, 'type': 'string'}, 'visible': {'description': "Define if the variation is visible on the product's page.", 'required': False, 'type': 'boolean'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'attributes': {'description': 'List of attributes.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'sale_price': {'description': 'Variation sale price.', 'required': False, 'type': 'string'}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False, 'type': 'boolean'}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'required': False, 'type': 'integer'}, 'weight': {'description': 'Variation weight (kg).', 'required': False, 'type': 'string'}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False, 'type': 'integer'}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'tax_class': {'description': 'Tax class.', 'required': False, 'type': 'string'}, 'downloads': {'description': 'List of downloadable files.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'virtual': {'description': 'If the variation is virtual.', 'required': False, 'type': 'boolean'}, 'image': {'description': 'Variation image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'Variation description.', 'required': False, 'type': 'string'}, 'regular_price': {'description': 'Variation regular price.', 'required': False, 'type': 'string'}, 'downloadable': {'description': 'If the variation is downloadable.', 'required': False, 'type': 'boolean'}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'required': False, 'type': 'date-time'}, 'manage_stock': {'description': 'Stock management at variation level.', 'required': False, 'type': 'mixed'}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False, 'type': 'string'}, 'sku': {'description': 'Unique identifier.', 'required': False, 'type': 'string'}, 'stock_quantity': {'description': 'Stock quantity.', 'required': False, 'type': 'integer'}, 'dimensions': {'description': 'Variation dimensions.', 'required': False, 'type': 'object'}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'required': False, 'type': 'date-time'}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'required': False, 'type': 'integer'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'endpoints': [{'args': {'zone_id': {'description': 'Unique ID for the zone.', 'required': False, 'type': 'integer'}, 'instance_id': {'description': 'Unique ID for the instance.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'enabled': {'description': 'Shipping method enabled status.', 'required': False, 'type': 'boolean'}, 'order': {'description': 'Shipping method sort order.', 'required': False, 'type': 'integer'}, 'zone_id': {'description': 'Unique ID for the zone.', 'required': False, 'type': 'integer'}, 'instance_id': {'description': 'Unique ID for the instance.', 'required': False, 'type': 'integer'}, 'settings': {'description': 'Shipping method settings.', 'required': False, 'type': 'object'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'zone_id': {'description': 'Unique ID for the zone.', 'required': False, 'type': 'integer'}, 'instance_id': {'description': 'Unique ID for the instance.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'type': {'enum': ['select'], 'description': 'Type of attribute.', 'required': False, 'type': 'string'}, 'name': {'description': 'Attribute name.', 'required': False, 'type': 'string'}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'required': False, 'type': 'boolean'}, 'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': True, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'type': {'default': 'any', 'enum': ['any', 'customer', 'internal'], 'description': 'Limit result to customers or internal notes.', 'required': False, 'type': 'string'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'note': {'description': 'Order note content.', 'required': True, 'type': 'string'}, 'customer_note': {'default': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'required': False, 'type': 'boolean'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/taxes/classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'args': {'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tax class name.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'endpoints': [{'args': {'parent_exclude': {'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'dp': {'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False, 'type': 'integer'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'parent': {'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}}, 'methods': ['GET']}, {'args': {'api_refund': {'default': True, 'description': 'When true, the payment gateway API is used to generate the refund.', 'required': False, 'type': 'boolean'}, 'amount': {'description': 'Refund amount.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'order_id': {'description': 'The order ID.', 'required': False, 'type': 'integer'}, 'refunded_by': {'description': 'User ID of user who created the refund.', 'required': False, 'type': 'integer'}, 'reason': {'description': 'Reason for refund.', 'required': False, 'type': 'string'}, 'refunded_payment': {'description': 'If the payment was refunded via the API.', 'required': False, 'type': 'boolean'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/shipping_classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'args': {'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False, 'type': 'string'}, 'hide_empty': {'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False, 'type': 'boolean'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'required': False, 'type': 'integer'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Name for the resource.', 'required': True, 'type': 'string'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'endpoints': [{'args': {'webhook_id': {'description': 'Unique identifier for the webhook.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/reports/sales': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'args': {'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False, 'type': 'string'}, 'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False, 'type': 'string'}, 'context': {'default': 'view', 'enum': ['view'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'period': {'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'endpoints': [{'args': {'group': {'description': 'Settings group ID.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False, 'type': 'string'}, 'topic': {'description': 'Webhook topic.', 'required': False, 'type': 'string'}, 'status': {'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False, 'type': 'string'}, 'name': {'description': 'A friendly name for the webhook.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/webhooks/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'args': {'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False, 'type': 'string'}, 'topic': {'description': 'Webhook topic.', 'required': False, 'type': 'string'}, 'status': {'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.', 'required': False, 'type': 'string'}, 'name': {'description': 'A friendly name for the webhook.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'priority': {'description': 'Tax priority.', 'required': False, 'type': 'integer'}, 'compound': {'description': 'Whether or not this is a compound rate.', 'required': False, 'type': 'boolean'}, 'rate': {'description': 'Tax rate.', 'required': False, 'type': 'string'}, 'city': {'description': 'City name.', 'required': False, 'type': 'string'}, 'country': {'description': 'Country ISO 3166 code.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False, 'type': 'boolean'}, 'order': {'description': 'Indicates the order that will appear in queries.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'postcode': {'description': 'Postcode / ZIP.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tax rate name.', 'required': False, 'type': 'string'}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False, 'type': 'string'}, 'state': {'description': 'State code.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Required to be true, as resource does not support trashing.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'email': {'description': 'Reviewer email.', 'required': False, 'type': 'string'}, 'name': {'description': 'Reviewer name.', 'required': False, 'type': 'string'}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'required': False, 'type': 'date-time'}, 'rating': {'description': 'Review rating (0 to 5).', 'required': False, 'type': 'integer'}, 'review': {'description': 'The content of the review.', 'required': False, 'type': 'string'}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'required': False, 'type': 'date-time'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the resource.', 'required': False, 'type': 'integer'}, 'force': {'default': False, 'description': 'Whether to bypass trash and force deletion.', 'required': False, 'type': 'boolean'}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'endpoints': [{'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'required': False, 'type': 'integer'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Term name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/shipping_classes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'args': {'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Shipping class name.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the variation.', 'required': False, 'type': 'integer'}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'required': False, 'type': 'integer'}, 'id': {'description': 'Unique identifier for the variation.', 'required': False, 'type': 'integer'}, 'email': {'description': 'Email of the reviewer.', 'required': True, 'type': 'string'}, 'name': {'description': 'Name of the reviewer.', 'required': True, 'type': 'string'}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'required': False, 'type': 'date-time'}, 'rating': {'description': 'Review rating (0 to 5).', 'required': False, 'type': 'integer'}, 'review': {'description': 'Review content.', 'required': True, 'type': 'string'}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'required': False, 'type': 'date-time'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/coupons/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'args': {'usage_limit': {'description': 'How many times the coupon can be used in total.', 'required': False, 'type': 'integer'}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'required': False, 'type': 'string'}, 'description': {'description': 'Coupon description.', 'required': False, 'type': 'string'}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False, 'type': 'boolean'}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False, 'type': 'boolean'}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.', 'required': False, 'type': 'string'}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False, 'type': 'integer'}, 'code': {'description': 'Coupon code.', 'required': False, 'type': 'string'}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False, 'type': 'string'}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'required': False, 'type': 'array', 'items': {'type': 'string'}}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'required': False, 'type': 'string'}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'required': False, 'type': 'integer'}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False, 'type': 'string'}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False, 'type': 'boolean'}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'args': {'parent_exclude': {'default': [], 'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'description': 'Sort collection by object attribute.', 'required': False, 'type': 'string'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False, 'type': 'string'}, 'order': {'default': 'desc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'status': {'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Limit result set to orders assigned a specific status.', 'required': False, 'type': 'string'}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'required': False, 'type': 'integer'}, 'dp': {'default': 2, 'description': 'Number of decimal points to use in each resource.', 'required': False, 'type': 'integer'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'required': False, 'type': 'integer'}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'required': False, 'type': 'integer'}, 'parent': {'default': [], 'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False, 'type': 'string'}}, 'methods': ['GET']}, {'args': {'coupon_lines': {'description': 'Coupons line data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'discount_tax': {'description': 'Discount total tax.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'transaction_id': {'description': 'Unique transaction ID.', 'required': False, 'type': 'string'}, 'payment_method_title': {'description': 'Payment method title.', 'required': False, 'type': 'string'}, 'set_paid': {'default': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False, 'type': 'boolean'}, 'fee_lines': {'description': 'Fee lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Tax subtotal.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'billing': {'description': 'Billing address.', 'required': False, 'type': 'object'}, 'payment_method': {'description': 'Payment method ID.', 'required': False, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'customer_id': {'default': 0, 'description': 'User ID who owns the order. 0 for guests.', 'required': False, 'type': 'integer'}, 'currency': {'default': 'GBP', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.', 'required': False, 'type': 'string'}, 'customer_note': {'description': 'Note left by customer during checkout.', 'required': False, 'type': 'string'}, 'status': {'default': 'pending', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'Shipping address.', 'required': False, 'type': 'object'}, 'shipping_lines': {'description': 'Shipping lines data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'id': {'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}}}}, 'line_items': {'description': 'Line items data.', 'required': False, 'type': 'array', 'items': {'type': 'object', 'properties': {'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'sku': {'description': 'Product SKU.', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}}}, 'readonly': True, 'type': 'array', 'context': ['view', 'edit']}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'description': 'Meta ID.', 'readonly': True, 'type': 'integer', 'context': ['view', 'edit']}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}}}}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string', 'context': ['view', 'edit']}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'price': {'description': 'Product price.', 'readonly': True, 'type': 'number', 'context': ['view', 'edit']}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'parent_id': {'description': 'Parent order ID.', 'required': False, 'type': 'integer'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'endpoints': [{'args': {'group': {'description': 'Settings group ID.', 'required': False, 'type': 'string'}, 'value': {'description': 'Setting value.', 'required': False, 'type': 'mixed'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/taxes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'args': {'priority': {'description': 'Tax priority.', 'required': False, 'type': 'integer'}, 'compound': {'description': 'Whether or not this is a compound rate.', 'required': False, 'type': 'boolean'}, 'postcode': {'description': 'Postcode / ZIP.', 'required': False, 'type': 'string'}, 'rate': {'description': 'Tax rate.', 'required': False, 'type': 'string'}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False, 'type': 'boolean'}, 'country': {'description': 'Country ISO 3166 code.', 'required': False, 'type': 'string'}, 'name': {'description': 'Tax rate name.', 'required': False, 'type': 'string'}, 'order': {'description': 'Indicates the order that will appear in queries.', 'required': False, 'type': 'integer'}, 'city': {'description': 'City name.', 'required': False, 'type': 'string'}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.', 'required': False, 'type': 'string'}, 'state': {'description': 'State code.', 'required': False, 'type': 'string'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/categories': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'args': {'page': {'default': 1, 'description': 'Current page of the collection.', 'required': False, 'type': 'integer'}, 'orderby': {'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'description': 'Sort collection by resource attribute.', 'required': False, 'type': 'string'}, 'hide_empty': {'default': False, 'description': 'Whether to hide resources not assigned to any products.', 'required': False, 'type': 'boolean'}, 'order': {'default': 'asc', 'enum': ['asc', 'desc'], 'description': 'Order sort attribute ascending or descending.', 'required': False, 'type': 'string'}, 'include': {'default': [], 'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'context': {'default': 'view', 'enum': ['view', 'edit'], 'description': 'Scope under which the request is made; determines fields present in response.', 'required': False, 'type': 'string'}, 'exclude': {'default': [], 'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}}, 'per_page': {'default': 10, 'description': 'Maximum number of items to be returned in result set.', 'required': False, 'type': 'integer'}, 'search': {'description': 'Limit results to those matching a string.', 'required': False, 'type': 'string'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'required': False, 'type': 'integer'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'required': False, 'type': 'string'}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'required': False, 'type': 'integer'}}, 'methods': ['GET']}, {'args': {'image': {'description': 'Image data.', 'required': False, 'type': 'object'}, 'description': {'description': 'HTML description of the resource.', 'required': False, 'type': 'string'}, 'name': {'description': 'Name for the resource.', 'required': True, 'type': 'string'}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False, 'type': 'string'}, 'display': {'default': 'default', 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.', 'required': False, 'type': 'string'}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'required': False, 'type': 'integer'}, 'parent': {'description': 'The ID for the parent of the resource.', 'required': False, 'type': 'integer'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}}
11:08:07,489 root INFO Get INDEX API info from cache.
11:08:07,492 root INFO {'/wc/v2/products/tags/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tag name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'value': {'type': 'mixed', 'required': False, 'description': 'Setting value.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'status': {'type': 'string', 'required': False, 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.'}, 'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}, 'topic': {'type': 'string', 'required': False, 'description': 'Webhook topic.'}, 'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/tags': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name', 'description': 'Sort collection by resource attribute.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/reports': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'type': 'string', 'required': False, 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}, 'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'code': {'type': 'string', 'required': False, 'description': 'Coupon code.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/attributes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'has_archives': {'type': 'boolean', 'required': False, 'description': 'Enable/Disable attribute archives.'}, 'type': {'type': 'string', 'required': False, 'enum': ['select'], 'description': 'Type of attribute.'}, 'order_by': {'type': 'string', 'required': False, 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'name': {'type': 'string', 'required': False, 'description': 'Attribute name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'namespace': 'wc/v2', 'endpoints': [{'args': {'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}, 'email': {'type': 'string', 'required': False, 'description': 'Reviewer email.'}, 'review': {'type': 'string', 'required': False, 'description': 'The content of the review.'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'name': {'type': 'string', 'required': False, 'description': 'Reviewer name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/taxes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Sort by tax class.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'orderby': {'enum': ['id', 'order'], 'type': 'string', 'required': False, 'default': 'order', 'description': 'Sort collection by object attribute.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'required': False, 'default': 'standard', 'description': 'Tax class.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'priority': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Tax priority.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'shipping': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Whether or not this tax rate also gets applied to shipping.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'compound': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether or not this is a compound rate.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Shipping class name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'type': {'type': 'string', 'required': False, 'enum': ['select'], 'description': 'Type of attribute.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'has_archives': {'type': 'boolean', 'required': False, 'description': 'Enable/Disable attribute archives.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order_by': {'type': 'string', 'required': False, 'enum': ['menu_order', 'name', 'name_num', 'id'], 'description': 'Default sort order.'}, 'name': {'type': 'string', 'required': False, 'description': 'Attribute name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/categories/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'display': {'type': 'string', 'required': False, 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Category name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'webhook_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the webhook.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/customers/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': False, 'description': 'The email address for the customer.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}, 'password': {'type': 'string', 'required': False, 'description': 'Customer password.'}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}, 'username': {'type': 'string', 'required': False, 'description': 'Customer login name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}, 'reassign': {'type': 'integer', 'required': False, 'default': 0, 'description': 'ID to reassign posts to.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'title': {'type': 'string', 'required': False, 'description': 'Payment gateway title on checkout.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Payment gateway sort order.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Payment gateway settings.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Payment gateway enabled status.'}, 'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'Payment gateway description on checkout.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'namespace': 'wc/v2', 'endpoints': [{'args': {'type': {'enum': ['any', 'customer', 'internal'], 'type': 'string', 'required': False, 'default': 'any', 'description': 'Limit result to customers or internal notes.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}, 'methods': ['GET']}, {'args': {'customer_note': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'note': {'type': 'string', 'required': True, 'description': 'Order note content.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/tags/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tag name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/shipping_classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name', 'description': 'Sort collection by resource attribute.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'display': {'type': 'string', 'required': False, 'enum': ['default', 'products', 'subcategories', 'both'], 'description': 'Category archive display type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Category name.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'namespace': 'wc/v2', 'endpoints': [{'args': {'value': {'type': 'mixed', 'required': False, 'description': 'Setting value.'}, 'group': {'type': 'string', 'required': False, 'description': 'Settings group ID.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/reports/top_sellers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'date_min': {'type': 'string', 'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.'}, 'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'date_max': {'type': 'string', 'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.'}, 'period': {'type': 'string', 'required': False, 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'namespace': 'wc/v2', 'endpoints': [{'args': {'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the variation is virtual.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the variation is downloadable.'}, 'manage_stock': {'type': 'mixed', 'required': False, 'description': 'Stock management at variation level.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'visible': {'type': 'boolean', 'required': False, 'description': "Define if the variation is visible on the product's page."}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'namespace': 'wc/v2', 'endpoints': [{'args': {'sku': {'type': 'string', 'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.'}, 'status': {'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'any', 'description': 'Limit result set to products assigned a specific status.'}, 'max_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a maximum price.'}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'attribute_term': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Limit result set to featured products.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'attribute': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'on_sale': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products on sale.'}, 'parent_exclude': {'type': 'array', 'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'tag': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific tag ID.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific slug.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products in stock or out of stock.'}, 'min_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a minimum price.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'parent': {'type': 'array', 'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.'}, 'category': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific category ID.'}}, 'methods': ['GET']}, {'args': {'download_expiry': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False, 'default': 'taxable', 'description': 'Tax status.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the variation is virtual.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'downloadable': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the variation is downloadable.'}, 'manage_stock': {'type': 'mixed', 'required': False, 'default': False, 'description': 'Stock management at variation level.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'visible': {'type': 'boolean', 'required': False, 'default': True, 'description': "Define if the variation is visible on the product's page."}, 'in_stock': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False, 'default': 'no', 'description': 'If managing stock, this controls if backorders are allowed.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'download_limit': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}, 'email': {'type': 'string', 'required': False, 'description': 'Reviewer email.'}, 'review': {'type': 'string', 'required': False, 'description': 'The content of the review.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'name': {'type': 'string', 'required': False, 'description': 'Reviewer name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'status': {'type': 'string', 'required': False, 'enum': ['active', 'paused', 'disabled'], 'description': 'Webhook status.'}, 'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}, 'topic': {'type': 'string', 'required': False, 'description': 'Webhook topic.'}, 'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/system_status': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/products/categories': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name', 'description': 'Sort collection by resource attribute.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific parent.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'The ID for the parent of the resource.'}, 'image': {'type': 'object', 'required': False, 'description': 'Image data.'}, 'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'required': False, 'default': 'default', 'description': 'Category archive display type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'type': {'type': 'string', 'required': False, 'enum': ['postcode', 'state', 'country', 'continent'], 'description': 'Shipping zone location type.'}, 'code': {'type': 'string', 'required': False, 'description': 'Shipping zone location code.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Featured product.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the product is virtual.'}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'description': 'Stock management at product level.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'description': 'Allow reviews.'}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'title': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Title of the component.'}, 'thumbnail_src': {'type': 'string', 'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'quantity_min': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Minimum component quantity.'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Query type associated with component options.'}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Description of the component.'}, 'query_ids': {'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}, 'default_option_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.'}, 'shipped_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'thumbnail_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'priced_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'optional': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.'}}}}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'description': 'Allow one item to be bought in a single order.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the product is downloadable.'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'date_modified_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'date_created_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image ID.'}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.'}, 'date_modified': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'alt': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image alternative text.'}, 'date_created': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image name.'}}}}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'configuration': {'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_id': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_options': {'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Name of the scenario.'}, 'actions': {'type': 'array', 'description': 'Scenario actions.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'action_data': {'type': 'object', 'context': ['view', 'edit'], 'description': 'Scenario action data.'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.'}}}}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.'}}}}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'status': {'type': 'string', 'required': False, 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Category ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category name.'}}}}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tag ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag name.'}}}}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'visible': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}, 'options': {'type': 'array', 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'items': {'type': 'string'}}, 'variation': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute position.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}}}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'catalog_visibility': {'type': 'string', 'required': False, 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/orders/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'status': {'type': 'string', 'required': False, 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'User ID who owns the order. 0 for guests.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'code': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Coupon code.'}, 'discount_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total.'}}}}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}}}}, 'method_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method ID.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'method_title': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method name.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'set_paid': {'type': 'boolean', 'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'currency': {'type': 'string', 'required': False, 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of product.'}, 'subtotal_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'quantity': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Quantity ordered.'}, 'product_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product ID.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'variation_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.'}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'price': {'readonly': True, 'type': 'number', 'context': ['view', 'edit'], 'description': 'Product price.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product name.'}}}}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax status of fee.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of fee.'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Fee name.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'has_archives': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Enable/Disable attribute archives.'}, 'type': {'enum': ['select'], 'type': 'string', 'required': False, 'default': 'select', 'description': 'Type of attribute.'}, 'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'required': False, 'default': 'menu_order', 'description': 'Default sort order.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/taxes/classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'name': {'type': 'string', 'required': True, 'description': 'Tax class name.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/payment_gateways': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'namespace': 'wc/v2', 'endpoints': [{'args': {'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'name': {'type': 'string', 'required': False, 'description': 'Term name.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'string', 'required': False, 'description': 'Unique identifier for the resource.'}}, 'methods': ['GET']}, {'args': {'success': {'type': 'boolean', 'required': False, 'description': 'Did the tool run successfully?'}, 'message': {'type': 'string', 'required': False, 'description': 'Tool return message.'}, 'id': {'type': 'string', 'required': False, 'description': 'A unique identifier for the tool.'}, 'action': {'type': 'string', 'required': False, 'description': 'What running the tool will do.'}, 'description': {'type': 'string', 'required': False, 'description': 'Tool description.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tool name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'force': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'DELETE']}, '/wc/v2': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'namespace': {'default': 'wc/v2', 'required': False}, 'context': {'default': 'view', 'required': False}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/taxes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'priority': {'type': 'integer', 'required': False, 'description': 'Tax priority.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'shipping': {'type': 'boolean', 'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'compound': {'type': 'boolean', 'required': False, 'description': 'Whether or not this is a compound rate.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/coupons': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'code': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific code.'}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'required': False, 'default': 'fixed_cart', 'description': 'Determines the type of discount that will be applied.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}, 'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'code': {'type': 'string', 'required': True, 'description': 'Coupon code.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'slug': {'type': 'string', 'required': False, 'description': 'Unique slug for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['DELETE']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Term name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping zone order.'}, 'name': {'type': 'string', 'required': False, 'description': 'Shipping zone name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/orders': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'status': {'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'any', 'description': 'Limit result set to orders assigned a specific status.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'customer': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific customer.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'parent': {'type': 'array', 'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}}, 'parent_exclude': {'type': 'array', 'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific product.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'pending', 'description': 'Order status.'}, 'customer_id': {'type': 'integer', 'required': False, 'default': 0, 'description': 'User ID who owns the order. 0 for guests.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'code': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Coupon code.'}, 'discount_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total.'}}}}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}}}}, 'method_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method ID.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'method_title': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method name.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'set_paid': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'required': False, 'default': 'GBP', 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of product.'}, 'subtotal_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'quantity': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Quantity ordered.'}, 'product_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product ID.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'variation_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.'}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'price': {'readonly': True, 'type': 'number', 'context': ['view', 'edit'], 'description': 'Product price.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product name.'}}}}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax status of fee.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of fee.'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Fee name.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'namespace': 'wc/v2', 'endpoints': [{'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}}, 'methods': ['GET']}, {'args': {'method_id': {'required': True, 'description': 'Shipping method ID.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping method sort order.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Shipping method settings.'}, 'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Shipping method enabled status.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'parent_exclude': {'type': 'array', 'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'parent': {'type': 'array', 'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'api_refund': {'type': 'boolean', 'required': False, 'default': True, 'description': 'When true, the payment gateway API is used to generate the refund.'}, 'reason': {'type': 'string', 'required': False, 'description': 'Reason for refund.'}, 'refunded_by': {'type': 'integer', 'required': False, 'description': 'User ID of user who created the refund.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'amount': {'type': 'string', 'required': False, 'description': 'Refund amount.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'refunded_payment': {'type': 'boolean', 'required': False, 'description': 'If the payment was refunded via the API.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/orders/network': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'status': {'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'any', 'description': 'Limit result set to orders assigned a specific status.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'customer': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific customer.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'parent': {'type': 'array', 'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}}, 'parent_exclude': {'type': 'array', 'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to orders assigned a specific product.'}, 'dp': {'type': 'integer', 'required': False, 'default': 2, 'description': 'Number of decimal points to use in each resource.'}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/settings': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'namespace': 'wc/v2', 'endpoints': [{'args': [], 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/shipping/zones': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'namespace': 'wc/v2', 'endpoints': [{'args': [], 'methods': ['GET']}, {'args': {'order': {'type': 'integer', 'required': False, 'description': 'Shipping zone order.'}, 'name': {'type': 'string', 'required': True, 'description': 'Shipping zone name.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'namespace': 'wc/v2', 'endpoints': [{'args': {'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'date_created': {'type': 'date-time', 'required': False, 'description': "The date the review was created, in the site's timezone."}, 'email': {'type': 'string', 'required': True, 'description': 'Email of the reviewer.'}, 'review': {'type': 'string', 'required': True, 'description': 'Review content.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'rating': {'type': 'integer', 'required': False, 'description': 'Review rating (0 to 5).'}, 'date_created_gmt': {'type': 'date-time', 'required': False, 'description': 'The date the review was created, as GMT.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name of the reviewer.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/shipping_methods': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/webhooks': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'status': {'enum': ['all', 'active', 'paused', 'disabled'], 'type': 'string', 'required': False, 'default': 'all', 'description': 'Limit result set to webhooks assigned a specific status.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'orderby': {'enum': ['date', 'id', 'title'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'secret': {'type': 'string', 'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided."}, 'status': {'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'required': False, 'default': 'active', 'description': 'Webhook status.'}, 'delivery_url': {'type': 'string', 'required': True, 'description': 'Webhook delivery URL.'}, 'topic': {'type': 'string', 'required': True, 'description': 'Webhook topic.'}, 'name': {'type': 'string', 'required': False, 'description': 'A friendly name for the webhook.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'class': {'type': 'string', 'required': False, 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'description': 'Tax class.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Indicates the order that will appear in queries.'}, 'city': {'type': 'string', 'required': False, 'description': 'City name.'}, 'state': {'type': 'string', 'required': False, 'description': 'State code.'}, 'shipping': {'type': 'boolean', 'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.'}, 'compound': {'type': 'boolean', 'required': False, 'description': 'Whether or not this is a compound rate.'}, 'rate': {'type': 'string', 'required': False, 'description': 'Tax rate.'}, 'postcode': {'type': 'string', 'required': False, 'description': 'Postcode / ZIP.'}, 'country': {'type': 'string', 'required': False, 'description': 'Country ISO 3166 code.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'priority': {'type': 'integer', 'required': False, 'description': 'Tax priority.'}, 'name': {'type': 'string', 'required': False, 'description': 'Tax rate name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/coupons/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}}, 'date_expires': {'type': 'string', 'required': False, 'description': "The date the coupon expires, in the site's timezone."}, 'email_restrictions': {'type': 'array', 'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}}, 'date_expires_gmt': {'type': 'string', 'required': False, 'description': 'The date the coupon expires, as GMT.'}, 'excluded_product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}}, 'individual_use': {'type': 'boolean', 'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.'}, 'maximum_amount': {'type': 'string', 'required': False, 'description': 'Maximum order amount allowed when using the coupon.'}, 'usage_limit_per_user': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used per customer.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'product_categories': {'type': 'array', 'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}}, 'minimum_amount': {'type': 'string', 'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.'}, 'discount_type': {'type': 'string', 'required': False, 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'description': 'Determines the type of discount that will be applied.'}, 'description': {'type': 'string', 'required': False, 'description': 'Coupon description.'}, 'usage_limit': {'type': 'integer', 'required': False, 'description': 'How many times the coupon can be used in total.'}, 'amount': {'type': 'string', 'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.'}, 'limit_usage_to_x_items': {'type': 'integer', 'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.'}, 'exclude_sale_items': {'type': 'boolean', 'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.'}, 'free_shipping': {'type': 'boolean', 'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.'}, 'excluded_product_ids': {'type': 'array', 'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}}, 'code': {'type': 'string', 'required': False, 'description': 'Coupon code.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Product type.'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Featured product.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the product is virtual.'}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'description': 'Stock management at product level.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'description': 'Allow reviews.'}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'title': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Title of the component.'}, 'thumbnail_src': {'type': 'string', 'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'quantity_min': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Minimum component quantity.'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Query type associated with component options.'}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Description of the component.'}, 'query_ids': {'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}, 'default_option_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.'}, 'shipped_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'thumbnail_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'priced_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'optional': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.'}}}}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'description': 'Allow one item to be bought in a single order.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'date_modified_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'date_created_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image ID.'}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.'}, 'date_modified': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'alt': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image alternative text.'}, 'date_created': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image name.'}}}}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'configuration': {'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_id': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_options': {'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Name of the scenario.'}, 'actions': {'type': 'array', 'description': 'Scenario actions.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'action_data': {'type': 'object', 'context': ['view', 'edit'], 'description': 'Scenario action data.'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.'}}}}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.'}}}}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'status': {'type': 'string', 'required': False, 'enum': ['draft', 'pending', 'private', 'publish'], 'description': 'Product status (post status).'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the product is downloadable.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Category ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category name.'}}}}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tag ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag name.'}}}}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'visible': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}, 'options': {'type': 'array', 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'items': {'type': 'string'}}, 'variation': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute position.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}}}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'catalog_visibility': {'type': 'string', 'required': False, 'enum': ['visible', 'catalog', 'search', 'hidden'], 'description': 'Catalog visibility.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/customers/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': False, 'description': 'The email address for the customer.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'username': {'type': 'string', 'required': False, 'description': 'Customer login name.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}, 'password': {'type': 'string', 'required': False, 'description': 'Customer password.'}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/reports/sales': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'date_min': {'type': 'string', 'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.'}, 'context': {'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'date_max': {'type': 'string', 'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.'}, 'period': {'type': 'string', 'required': False, 'enum': ['week', 'month', 'last_month', 'year'], 'description': 'Report period.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}}, 'methods': ['GET']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'order_id': {'type': 'integer', 'required': False, 'description': 'The order ID.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Required to be true, as resource does not support trashing.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'DELETE']}, '/wc/v2/orders/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'shipping': {'type': 'object', 'required': False, 'description': 'Shipping address.'}, 'status': {'type': 'string', 'required': False, 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'description': 'Order status.'}, 'customer_id': {'type': 'integer', 'required': False, 'description': 'User ID who owns the order. 0 for guests.'}, 'payment_method': {'type': 'string', 'required': False, 'description': 'Payment method ID.'}, 'customer_note': {'type': 'string', 'required': False, 'description': 'Note left by customer during checkout.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'coupon_lines': {'type': 'array', 'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'code': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Coupon code.'}, 'discount_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total tax.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount total.'}}}}, 'transaction_id': {'type': 'string', 'required': False, 'description': 'Unique transaction ID.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'billing': {'type': 'object', 'required': False, 'description': 'Billing address.'}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Parent order ID.'}, 'shipping_lines': {'type': 'array', 'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}}}}, 'method_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method ID.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'method_title': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Shipping method name.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'set_paid': {'type': 'boolean', 'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.'}, 'currency': {'type': 'string', 'required': False, 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'description': 'Currency the order was created with, in ISO format.'}, 'line_items': {'type': 'array', 'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Product SKU.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of product.'}, 'subtotal_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).'}, 'quantity': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Quantity ordered.'}, 'product_id': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product ID.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}, 'variation_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.'}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'price': {'readonly': True, 'type': 'number', 'context': ['view', 'edit'], 'description': 'Product price.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'subtotal': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Product name.'}}}}, 'fee_lines': {'type': 'array', 'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax status of fee.'}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'tax_class': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax class of fee.'}, 'name': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Fee name.'}, 'taxes': {'readonly': True, 'type': 'array', 'description': 'Line taxes.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'total': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax total.'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tax rate ID.'}, 'subtotal': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tax subtotal.'}}}}, 'total': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total (after discounts).'}, 'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Item ID.'}, 'total_tax': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).'}}}}, 'payment_method_title': {'type': 'string', 'required': False, 'description': 'Payment method title.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the resource.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'sku': {'type': 'string', 'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.'}, 'status': {'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'any', 'description': 'Limit result set to products assigned a specific status.'}, 'max_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a maximum price.'}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'attribute_term': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'}, 'featured': {'type': 'boolean', 'required': False, 'description': 'Limit result set to featured products.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'attribute': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.'}, 'before': {'type': 'string', 'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.'}, 'type': {'type': 'string', 'required': False, 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'description': 'Limit result set to products assigned a specific type.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc', 'description': 'Order sort attribute ascending or descending.'}, 'on_sale': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products on sale.'}, 'parent_exclude': {'type': 'array', 'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date', 'description': 'Sort collection by object attribute.'}, 'tag': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific tag ID.'}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}, 'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to products with a specific slug.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Limit result set to products in stock or out of stock.'}, 'min_price': {'type': 'string', 'required': False, 'description': 'Limit result set to products based on a minimum price.'}, 'after': {'type': 'string', 'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.'}, 'parent': {'type': 'array', 'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.'}, 'category': {'type': 'string', 'required': False, 'description': 'Limit result set to products assigned a specific category ID.'}}, 'methods': ['GET']}, {'args': {'download_expiry': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False, 'default': 'taxable', 'description': 'Tax status.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Product sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False, 'default': 'simple', 'description': 'Product type.'}, 'featured': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Featured product.'}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the product is virtual.'}, 'composite_layout': {'type': 'string', 'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Product weight (kg).'}, 'short_description': {'type': 'string', 'required': False, 'description': 'Product short description.'}, 'upsell_ids': {'type': 'array', 'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}}, 'manage_stock': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Stock management at product level.'}, 'reviews_allowed': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Allow reviews.'}, 'name': {'type': 'string', 'required': False, 'description': 'Product name.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'composite_components': {'type': 'array', 'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'title': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Title of the component.'}, 'thumbnail_src': {'type': 'string', 'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'quantity_min': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Minimum component quantity.'}, 'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Query type associated with component options.'}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Description of the component.'}, 'query_ids': {'type': 'array', 'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}, 'default_option_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.'}, 'shipped_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.'}, 'thumbnail_id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.'}, 'priced_individually': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.'}, 'discount': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.'}, 'optional': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.'}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.'}}}}, 'slug': {'type': 'string', 'required': False, 'description': 'Product slug.'}, 'in_stock': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.'}, 'description': {'type': 'string', 'required': False, 'description': 'Product description.'}, 'sold_individually': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Allow one item to be bought in a single order.'}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Product regular price.'}, 'composite_shop_price_calc': {'type': 'string', 'required': False, 'enum': ['defaults', 'min_max', 'hidden'], 'description': 'Composite catalog price calculation. Applicable to composite-type products.'}, 'parent_id': {'type': 'integer', 'required': False, 'description': 'Product parent ID.'}, 'images': {'type': 'array', 'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'date_modified_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.'}, 'date_created_gmt': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.'}, 'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image ID.'}, 'src': {'type': 'string', 'format': 'uri', 'context': ['view', 'edit'], 'description': 'Image URL.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.'}, 'date_modified': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone."}, 'alt': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image alternative text.'}, 'date_created': {'readonly': True, 'type': 'date-time', 'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone."}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Image name.'}}}}, 'composite_scenarios': {'type': 'array', 'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Scenario ID.'}, 'configuration': {'type': 'array', 'context': ['view', 'edit'], 'properties': {'component_id': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Component ID.'}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.'}, 'component_options': {'type': 'array', 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'items': {'type': 'integer'}}}, 'description': 'Scenario matching conditions.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Name of the scenario.'}, 'actions': {'type': 'array', 'description': 'Scenario actions.', 'context': ['view', 'edit'], 'items': {'type': 'object', 'properties': {'action_data': {'type': 'object', 'context': ['view', 'edit'], 'description': 'Scenario action data.'}, 'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components')."}, 'is_active': {'type': 'boolean', 'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.'}}}}, 'description': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.'}}}}, 'download_limit': {'type': 'integer', 'required': False, 'default': -1, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'purchase_note': {'type': 'string', 'required': False, 'description': 'Optional note to send the customer after purchase.'}, 'button_text': {'type': 'string', 'required': False, 'description': 'Product external button text. Only for external products.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'publish', 'description': 'Product status (post status).'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'downloadable': {'type': 'boolean', 'required': False, 'default': False, 'description': 'If the product is downloadable.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'categories': {'type': 'array', 'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Category ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Category name.'}}}}, 'grouped_products': {'type': 'array', 'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Product dimensions.'}, 'external_url': {'type': 'string', 'required': False, 'description': 'Product external URL. Only for external products.'}, 'cross_sell_ids': {'type': 'array', 'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False, 'default': 'no', 'description': 'If managing stock, this controls if backorders are allowed.'}, 'tags': {'type': 'array', 'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Tag ID.'}, 'slug': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag slug.'}, 'name': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'Tag name.'}}}}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'visible': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.'}, 'options': {'type': 'array', 'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'items': {'type': 'string'}}, 'variation': {'type': 'boolean', 'default': False, 'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.'}, 'position': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute position.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}}}}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'default_attributes': {'type': 'array', 'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'required': False, 'default': 'visible', 'description': 'Catalog visibility.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}}, 'methods': ['GET']}, {'args': {'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}, 'order': {'type': 'integer', 'required': False, 'description': 'Shipping method sort order.'}, 'settings': {'type': 'object', 'required': False, 'description': 'Shipping method settings.'}, 'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'enabled': {'type': 'boolean', 'required': False, 'description': 'Shipping method enabled status.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'zone_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the zone.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}, 'instance_id': {'type': 'integer', 'required': False, 'description': 'Unique ID for the instance.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/system_status/tools': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/products/shipping_classes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}, 'name': {'type': 'string', 'required': False, 'description': 'Shipping class name.'}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'namespace': 'wc/v2', 'endpoints': [{'args': {'webhook_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the webhook.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}], 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'namespace': 'wc/v2', 'endpoints': [{'args': {'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'slug': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific slug.'}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name', 'description': 'Sort collection by resource attribute.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'parent': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific parent.'}, 'hide_empty': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to hide resources not assigned to any products.'}, 'product': {'type': 'integer', 'required': False, 'description': 'Limit result set to resources assigned to a specific product.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'attribute_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the attribute of the terms.'}, 'slug': {'type': 'string', 'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.'}, 'name': {'type': 'string', 'required': True, 'description': 'Name for the resource.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort the resource.'}, 'description': {'type': 'string', 'required': False, 'description': 'HTML description of the resource.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'namespace': 'wc/v2', 'endpoints': [{'args': {'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}}, 'methods': ['GET']}, {'args': {'download_expiry': {'type': 'integer', 'required': False, 'description': 'Number of days until access to downloadable files expires.'}, 'tax_status': {'type': 'string', 'required': False, 'enum': ['taxable', 'shipping', 'none'], 'description': 'Tax status.'}, 'tax_class': {'type': 'string', 'required': False, 'description': 'Tax class.'}, 'sku': {'type': 'string', 'required': False, 'description': 'Unique identifier.'}, 'sale_price': {'type': 'string', 'required': False, 'description': 'Variation sale price.'}, 'menu_order': {'type': 'integer', 'required': False, 'description': 'Menu order, used to custom sort products.'}, 'date_on_sale_from': {'type': 'date-time', 'required': False, 'description': "Start date of sale price, in the site's timezone."}, 'downloads': {'type': 'array', 'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File URL.'}, 'id': {'readonly': True, 'type': 'string', 'context': ['view', 'edit'], 'description': 'File MD5 hash.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'File name.'}}}}, 'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'virtual': {'type': 'boolean', 'required': False, 'description': 'If the variation is virtual.'}, 'weight': {'type': 'string', 'required': False, 'description': 'Variation weight (kg).'}, 'manage_stock': {'type': 'mixed', 'required': False, 'description': 'Stock management at variation level.'}, 'dimensions': {'type': 'object', 'required': False, 'description': 'Variation dimensions.'}, 'shipping_class': {'type': 'string', 'required': False, 'description': 'Shipping class slug.'}, 'image': {'type': 'object', 'required': False, 'description': 'Variation image data.'}, 'date_on_sale_to': {'type': 'date-time', 'required': False, 'description': "End date of sale price, in the site's timezone."}, 'downloadable': {'type': 'boolean', 'required': False, 'description': 'If the variation is downloadable.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'in_stock': {'type': 'boolean', 'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.'}, 'backorders': {'type': 'string', 'required': False, 'enum': ['no', 'notify', 'yes'], 'description': 'If managing stock, this controls if backorders are allowed.'}, 'description': {'type': 'string', 'required': False, 'description': 'Variation description.'}, 'attributes': {'type': 'array', 'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'context': ['view', 'edit'], 'description': 'Attribute ID.'}, 'name': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Attribute name.'}, 'option': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Selected attribute term name.'}}}}, 'date_on_sale_to_gmt': {'type': 'date-time', 'required': False, 'description': 'End date of sale price, as GMT.'}, 'regular_price': {'type': 'string', 'required': False, 'description': 'Variation regular price.'}, 'stock_quantity': {'type': 'integer', 'required': False, 'description': 'Stock quantity.'}, 'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'visible': {'type': 'boolean', 'required': False, 'description': "Define if the variation is visible on the product's page."}, 'download_limit': {'type': 'integer', 'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.'}, 'date_on_sale_from_gmt': {'type': 'date-time', 'required': False, 'description': 'Start date of sale price, as GMT.'}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variable product.'}, 'id': {'type': 'integer', 'required': False, 'description': 'Unique identifier for the variation.'}, 'force': {'type': 'boolean', 'required': False, 'default': False, 'description': 'Whether to bypass trash and force deletion.'}}, 'methods': ['DELETE']}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/customers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'namespace': 'wc/v2', 'endpoints': [{'args': {'offset': {'type': 'integer', 'required': False, 'description': 'Offset the result set by a specific number of items.'}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc', 'description': 'Order sort attribute ascending or descending.'}, 'email': {'type': 'string', 'required': False, 'description': 'Limit result set to resources with a specific email.'}, 'search': {'type': 'string', 'required': False, 'description': 'Limit results to those matching a string.'}, 'orderby': {'enum': ['id', 'include', 'name', 'registered_date'], 'type': 'string', 'required': False, 'default': 'name', 'description': 'Sort collection by object attribute.'}, 'include': {'type': 'array', 'required': False, 'description': 'Limit result set to specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'exclude': {'type': 'array', 'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}}, 'page': {'type': 'integer', 'required': False, 'default': 1, 'description': 'Current page of the collection.'}, 'role': {'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'type': 'string', 'required': False, 'default': 'customer', 'description': 'Limit result set to resources with a specific role.'}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view', 'description': 'Scope under which the request is made; determines fields present in response.'}, 'per_page': {'type': 'integer', 'required': False, 'default': 10, 'description': 'Maximum number of items to be returned in result set.'}}, 'methods': ['GET']}, {'args': {'meta_data': {'type': 'array', 'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'id': {'readonly': True, 'type': 'integer', 'context': ['view', 'edit'], 'description': 'Meta ID.'}, 'value': {'type': 'mixed', 'context': ['view', 'edit'], 'description': 'Meta value.'}, 'key': {'type': 'string', 'context': ['view', 'edit'], 'description': 'Meta key.'}}}}, 'billing': {'type': 'object', 'required': False, 'description': 'List of billing address data.'}, 'email': {'type': 'string', 'required': True, 'description': 'New user email address.'}, 'first_name': {'type': 'string', 'required': False, 'description': 'Customer first name.'}, 'username': {'type': 'string', 'required': False, 'description': 'New user username.'}, 'shipping': {'type': 'object', 'required': False, 'description': 'List of shipping address data.'}, 'password': {'type': 'string', 'required': True, 'description': 'New user password.'}, 'last_name': {'type': 'string', 'required': False, 'description': 'Customer last name.'}}, 'methods': ['POST']}], 'methods': ['GET', 'POST']}}
11:08:17,872 root INFO Get INDEX API info from cache.
11:08:17,875 root INFO {'/wc/v2/taxes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'priority': {'description': 'Tax priority.', 'type': 'integer', 'required': False}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'class': {'description': 'Tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Term name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/system_status': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/taxes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['id', 'order'], 'type': 'string', 'required': False, 'default': 'order'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'class': {'description': 'Sort by tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'priority': {'description': 'Tax priority.', 'type': 'integer', 'required': False, 'default': 1}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'required': False, 'default': True}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'class': {'description': 'Tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'required': False, 'default': 'standard'}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'required': False, 'default': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'review': {'description': 'The content of the review.', 'type': 'string', 'required': False}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}, 'email': {'description': 'Reviewer email.', 'type': 'string', 'required': False}, 'name': {'description': 'Reviewer name.', 'type': 'string', 'required': False}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}, 'customer_id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Tag name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'endpoints': [{'args': {'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'type': 'boolean', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'type': 'boolean', 'required': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'type': 'mixed', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'visible': {'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/customers/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'password': {'description': 'Customer password.', 'type': 'string', 'required': False}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'email': {'description': 'The email address for the customer.', 'type': 'string', 'required': False}, 'username': {'description': 'Customer login name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'reassign': {'description': 'ID to reassign posts to.', 'type': 'integer', 'required': False, 'default': 0}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'order': {'description': 'Shipping zone order.', 'type': 'integer', 'required': False}, 'name': {'description': 'Shipping zone name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/categories': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'required': False, 'default': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'orderby': {'description': 'Sort collection by resource attribute.', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name'}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'display': {'description': 'Category archive display type.', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'required': False, 'default': 'default'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/attributes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'args': {'has_archives': {'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Attribute name.', 'type': 'string', 'required': False}, 'type': {'description': 'Type of attribute.', 'enum': ['select'], 'type': 'string', 'required': False}, 'order_by': {'description': 'Default sort order.', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'type': 'boolean', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'default': False}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'default': False}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'downloadable': {'description': 'If the product is downloadable.', 'type': 'boolean', 'required': False}, 'categories': {'description': 'List of categories.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}}}, 'required': False}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False}, 'reviews_allowed': {'description': 'Allow reviews.', 'type': 'boolean', 'required': False}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}, 'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}}}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Scenario ID.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'type': 'array', 'items': {'type': 'object', 'properties': {'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}}}}, 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Component ID.', 'type': 'string'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'tags': {'description': 'List of tags.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}}}, 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'type': 'boolean', 'required': False}, 'status': {'description': 'Product status (post status).', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False}, 'featured': {'description': 'Featured product.', 'type': 'boolean', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'images': {'description': 'List of images.', 'type': 'array', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'description': 'Image URL.', 'format': 'uri', 'type': 'string'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time'}, 'date_created_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was created, as GMT.', 'type': 'date-time'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_created': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'type': 'date-time'}}}, 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'required': False}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'required': False, 'default': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'orderby': {'description': 'Sort collection by resource attribute.', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name'}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/taxes/classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tax class name.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/tags': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'required': False, 'default': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'orderby': {'description': 'Sort collection by resource attribute.', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Discount total tax.', 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}}}, 'required': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'required': False}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'status': {'description': 'Order status.', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'required': False}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'sku': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product SKU.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}, 'price': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product price.', 'type': 'number'}, 'subtotal_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'value': {'description': 'Setting value.', 'type': 'mixed', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'type': {'description': 'Shipping zone location type.', 'enum': ['postcode', 'state', 'country', 'continent'], 'type': 'string', 'required': False}, 'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}, 'code': {'description': 'Shipping zone location code.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/orders/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'args': {'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'required': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'sku': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product SKU.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}, 'price': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product price.', 'type': 'number'}, 'subtotal_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}}}, 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'required': False}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'status': {'description': 'Order status.', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'required': False}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Discount total tax.', 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'webhook_id': {'description': 'Unique identifier for the webhook.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'endpoints': [{'args': {'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'settings': {'description': 'Shipping method settings.', 'type': 'object', 'required': False}, 'order': {'description': 'Shipping method sort order.', 'type': 'integer', 'required': False}, 'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}, 'enabled': {'description': 'Shipping method enabled status.', 'type': 'boolean', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/tags/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Tag name.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'type': 'boolean', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'type': 'boolean', 'required': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'type': 'mixed', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'visible': {'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'webhook_id': {'description': 'Unique identifier for the webhook.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'endpoints': [{'args': {'value': {'description': 'Setting value.', 'type': 'mixed', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/shipping_classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'type': 'boolean', 'required': False, 'default': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'orderby': {'description': 'Sort collection by resource attribute.', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'required': False, 'default': 'name'}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/coupons/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'args': {'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'required': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'required': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'required': False}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'items': {'type': 'string'}, 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'required': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'args': {'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'type': 'boolean', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'default': False}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'default': False}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'downloadable': {'description': 'If the product is downloadable.', 'type': 'boolean', 'required': False}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False}, 'reviews_allowed': {'description': 'Allow reviews.', 'type': 'boolean', 'required': False}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}, 'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}}}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Scenario ID.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'type': 'array', 'items': {'type': 'object', 'properties': {'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}}}}, 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'categories': {'description': 'List of categories.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}}}, 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Component ID.', 'type': 'string'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'tags': {'description': 'List of tags.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}}}, 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'type': 'boolean', 'required': False}, 'status': {'description': 'Product status (post status).', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False}, 'featured': {'description': 'Featured product.', 'type': 'boolean', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'images': {'description': 'List of images.', 'type': 'array', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'description': 'Image URL.', 'format': 'uri', 'type': 'string'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time'}, 'date_created_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was created, as GMT.', 'type': 'date-time'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_created': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'type': 'date-time'}}}, 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'required': False}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'args': [], 'methods': ['GET']}, {'args': {'order': {'description': 'Shipping zone order.', 'type': 'integer', 'required': False}, 'name': {'description': 'Shipping zone name.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'title': {'description': 'Payment gateway title on checkout.', 'type': 'string', 'required': False}, 'description': {'description': 'Payment gateway description on checkout.', 'type': 'string', 'required': False}, 'settings': {'description': 'Payment gateway settings.', 'type': 'object', 'required': False}, 'order': {'description': 'Payment gateway sort order.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'enabled': {'description': 'Payment gateway enabled status.', 'type': 'boolean', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': True}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/coupons': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}, 'code': {'description': 'Limit result set to resources with a specific code.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'required': False, 'default': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'required': False, 'default': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'required': False, 'default': 'fixed_cart'}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'items': {'type': 'string'}, 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'required': False, 'default': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': True}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'review': {'description': 'Review content.', 'type': 'string', 'required': True}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}, 'email': {'description': 'Email of the reviewer.', 'type': 'string', 'required': True}, 'name': {'description': 'Name of the reviewer.', 'type': 'string', 'required': True}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping_methods': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/payment_gateways': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/webhooks': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to webhooks assigned a specific status.', 'enum': ['all', 'active', 'paused', 'disabled'], 'type': 'string', 'required': False, 'default': 'all'}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'title'], 'type': 'string', 'required': False, 'default': 'date'}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': True}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'delivery_url': {'description': 'Webhook delivery URL.', 'type': 'string', 'required': True}, 'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'status': {'description': 'Webhook status.', 'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'required': False, 'default': 'active'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/settings': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'args': [], 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'required': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'required': False}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'items': {'type': 'string'}, 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'required': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'required': False}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/categories/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Category name.', 'type': 'string', 'required': False}, 'display': {'description': 'Category archive display type.', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'endpoints': [{'args': {'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'settings': {'description': 'Shipping method settings.', 'type': 'object', 'required': False}, 'order': {'description': 'Shipping method sort order.', 'type': 'integer', 'required': False}, 'method_id': {'description': 'Shipping method ID.', 'required': True}, 'enabled': {'description': 'Shipping method enabled status.', 'type': 'boolean', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/webhooks/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'args': {'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': False}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'status': {'description': 'Webhook status.', 'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/customers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['id', 'include', 'name', 'registered_date'], 'type': 'string', 'required': False, 'default': 'name'}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'email': {'description': 'Limit result set to resources with a specific email.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'include': {'description': 'Limit result set to specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'role': {'description': 'Limit result set to resources with a specific role.', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'type': 'string', 'required': False, 'default': 'customer'}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'asc'}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'password': {'description': 'New user password.', 'type': 'string', 'required': True}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'email': {'description': 'New user email address.', 'type': 'string', 'required': True}, 'username': {'description': 'New user username.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'review': {'description': 'The content of the review.', 'type': 'string', 'required': False}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}, 'email': {'description': 'Reviewer email.', 'type': 'string', 'required': False}, 'name': {'description': 'Reviewer name.', 'type': 'string', 'required': False}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Whether to bypass trash and force deletion.', 'type': 'boolean', 'required': False, 'default': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/taxes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'args': {'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'priority': {'description': 'Tax priority.', 'type': 'integer', 'required': False}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'required': False}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'class': {'description': 'Tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'required': False}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to orders assigned a specific status.', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'any'}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'required': False, 'default': 2}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'required': False, 'default': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}}}, 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'sku': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product SKU.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line total tax (after discounts).', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line taxes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}, 'price': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Product price.', 'type': 'number'}, 'subtotal_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}}}, 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'required': False, 'default': 0}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'status': {'description': 'Order status.', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'pending'}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'required': False, 'default': 'GBP'}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'discount_tax': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Discount total tax.', 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Item ID.', 'type': 'integer'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/reports/top_sellers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}, 'period': {'description': 'Report period.', 'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string', 'required': False}, 'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'endpoints': [{'args': {'max_price': {'description': 'Limit result set to products based on a maximum price.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'on_sale': {'description': 'Limit result set to products on sale.', 'type': 'boolean', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string', 'required': False}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to products assigned a specific status.', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'any'}, 'featured': {'description': 'Limit result set to featured products.', 'type': 'boolean', 'required': False}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'type': 'string', 'required': False}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string', 'required': False}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'type': {'description': 'Limit result set to products assigned a specific type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False, 'default': -1}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'type': 'boolean', 'required': False, 'default': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'type': 'boolean', 'required': False, 'default': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'type': 'mixed', 'required': False, 'default': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'visible': {'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'required': False, 'default': True}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False, 'default': 'no'}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False, 'default': -1}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False, 'default': 'taxable'}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False, 'default': True}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'endpoints': [{'args': {'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Category name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'display': {'description': 'Category archive display type.', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/reports/sales': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}, 'period': {'description': 'Report period.', 'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string', 'required': False}, 'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'args': {'max_price': {'description': 'Limit result set to products based on a maximum price.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'on_sale': {'description': 'Limit result set to products on sale.', 'type': 'boolean', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string', 'required': False}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to products assigned a specific status.', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'any'}, 'featured': {'description': 'Limit result set to featured products.', 'type': 'boolean', 'required': False}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'type': 'string', 'required': False}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string', 'required': False}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'type': {'description': 'Limit result set to products assigned a specific type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'type': 'boolean', 'required': False, 'default': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'type': 'boolean', 'default': False}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'type': 'boolean', 'default': False}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'downloadable': {'description': 'If the product is downloadable.', 'type': 'boolean', 'required': False, 'default': False}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'File MD5 hash.', 'type': 'string'}, 'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}}}, 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string', 'required': False, 'default': 'no'}, 'reviews_allowed': {'description': 'Allow reviews.', 'type': 'boolean', 'required': False, 'default': True}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}, 'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}}}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Scenario ID.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'type': 'array', 'items': {'type': 'object', 'properties': {'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}}}}, 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'items': {'type': 'integer'}, 'required': False}, 'categories': {'description': 'List of categories.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Category name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}}}, 'required': False}, 'tax_status': {'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'required': False, 'default': 'taxable'}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}}}, 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'items': {'type': 'object', 'properties': {'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Component ID.', 'type': 'string'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}}}, 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False, 'default': -1}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'tags': {'description': 'List of tags.', 'type': 'array', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag slug.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Tag name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}}}, 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'required': False, 'default': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'type': 'boolean', 'required': False, 'default': False}, 'status': {'description': 'Product status (post status).', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'required': False, 'default': 'publish'}, 'featured': {'description': 'Featured product.', 'type': 'boolean', 'required': False, 'default': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'images': {'description': 'List of images.', 'type': 'array', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'description': 'Image URL.', 'format': 'uri', 'type': 'string'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'type': 'date-time'}, 'date_created_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was created, as GMT.', 'type': 'date-time'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_created': {'context': ['view', 'edit'], 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'type': 'date-time'}}}, 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False, 'default': -1}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'required': False, 'default': 'visible'}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'required': False, 'default': 'simple'}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False, 'default': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'type': {'description': 'Type of attribute.', 'enum': ['select'], 'type': 'string', 'required': False}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Attribute name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'order_by': {'description': 'Default sort order.', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': True}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'endpoints': [{'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'slug': {'description': 'Unique slug for the resource.', 'type': 'string', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['DELETE']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'required': False, 'default': 2}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}}, 'methods': ['GET']}, {'args': {'api_refund': {'description': 'When true, the payment gateway API is used to generate the refund.', 'type': 'boolean', 'required': False, 'default': True}, 'refunded_by': {'description': 'User ID of user who created the refund.', 'type': 'integer', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}, 'refunded_payment': {'description': 'If the payment was refunded via the API.', 'type': 'boolean', 'required': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'reason': {'description': 'Reason for refund.', 'type': 'string', 'required': False}, 'amount': {'description': 'Refund amount.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/customers/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'args': {'password': {'description': 'Customer password.', 'type': 'string', 'required': False}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'email': {'description': 'The email address for the customer.', 'type': 'string', 'required': False}, 'username': {'description': 'Customer login name.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}, 'id': {'context': ['view', 'edit'], 'readonly': True, 'description': 'Meta ID.', 'type': 'integer'}, 'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}}}, 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}, {'args': {'has_archives': {'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'required': False, 'default': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'type': {'description': 'Type of attribute.', 'enum': ['select'], 'type': 'string', 'required': False, 'default': 'select'}, 'order_by': {'description': 'Default sort order.', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'required': False, 'default': 'menu_order'}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/shipping_classes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Shipping class name.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'args': {'context': {'required': False, 'default': 'view'}, 'namespace': {'required': False, 'default': 'wc/v2'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/system_status/tools': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/orders/network': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'args': {'exclude': {'description': 'Ensure result set excludes specific IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'page': {'description': 'Current page of the collection.', 'type': 'integer', 'required': False, 'default': 1}, 'include': {'description': 'Limit result set to specific ids.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'required': False, 'type': 'array', 'items': {'type': 'integer'}, 'default': []}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to orders assigned a specific status.', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'required': False, 'default': 'any'}, 'orderby': {'description': 'Sort collection by object attribute.', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'required': False, 'default': 'date'}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'type': 'integer', 'required': False, 'default': 2}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'enum': ['asc', 'desc'], 'type': 'string', 'required': False, 'default': 'desc'}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'type': 'integer', 'required': False, 'default': 10}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'endpoints': [{'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'name': {'description': 'Term name.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'message': {'description': 'Tool return message.', 'type': 'string', 'required': False}, 'description': {'description': 'Tool description.', 'type': 'string', 'required': False}, 'success': {'description': 'Did the tool run successfully?', 'type': 'boolean', 'required': False}, 'action': {'description': 'What running the tool will do.', 'type': 'string', 'required': False}, 'name': {'description': 'Tool name.', 'type': 'string', 'required': False}, 'id': {'description': 'A unique identifier for the tool.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/reports': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view'], 'type': 'string', 'required': False, 'default': 'view'}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'name': {'description': 'Shipping class name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'type': {'description': 'Limit result to customers or internal notes.', 'enum': ['any', 'customer', 'internal'], 'type': 'string', 'required': False, 'default': 'any'}}, 'methods': ['GET']}, {'args': {'note': {'description': 'Order note content.', 'type': 'string', 'required': True}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'customer_note': {'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'type': 'boolean', 'required': False, 'default': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'enum': ['view', 'edit'], 'type': 'string', 'required': False, 'default': 'view'}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': False}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'status': {'description': 'Webhook status.', 'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'force': {'description': 'Required to be true, as resource does not support trashing.', 'type': 'boolean', 'required': False, 'default': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}}
11:08:30,18 root INFO Get INDEX API info from cache.
11:08:30,21 root INFO {'/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'webhook_id': {'required': False, 'description': 'Unique identifier for the webhook.', 'type': 'integer'}}}]}, '/wc/v2/shipping_methods': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'parent_exclude': {'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'customer': {'required': False, 'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer'}, 'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'status': {'required': False, 'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'default': 0, 'type': 'integer'}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'line_items': {'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'context': ['view', 'edit'], 'description': 'Product SKU.', 'readonly': True, 'type': 'string'}, 'subtotal_tax': {'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'price': {'context': ['view', 'edit'], 'description': 'Product price.', 'readonly': True, 'type': 'number'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}}}, 'type': 'array'}, 'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'default': False, 'type': 'boolean'}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'fee_lines': {'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'readonly': True, 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}}}, 'type': 'array'}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'default': 'GBP', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string'}, 'shipping_lines': {'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}}}, 'type': 'array'}, 'coupon_lines': {'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}, 'discount_tax': {'context': ['view', 'edit'], 'description': 'Discount total tax.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'status': {'required': False, 'description': 'Order status.', 'default': 'pending', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'password': {'required': False, 'description': 'Customer password.', 'type': 'string'}, 'username': {'required': False, 'description': 'Customer login name.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'email': {'required': False, 'description': 'The email address for the customer.', 'type': 'string'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'reassign': {'required': False, 'description': 'ID to reassign posts to.', 'default': 0, 'type': 'integer'}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string'}, 'min_price': {'required': False, 'description': 'Limit result set to products based on a minimum price.', 'type': 'string'}, 'attribute': {'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'on_sale': {'required': False, 'description': 'Limit result set to products on sale.', 'type': 'boolean'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'attribute_term': {'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'in_stock': {'required': False, 'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean'}, 'tag': {'required': False, 'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'max_price': {'required': False, 'description': 'Limit result set to products based on a maximum price.', 'type': 'string'}, 'parent_exclude': {'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'featured': {'required': False, 'description': 'Limit result set to featured products.', 'type': 'boolean'}, 'shipping_class': {'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'slug': {'required': False, 'description': 'Limit result set to products with a specific slug.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'category': {'required': False, 'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string'}, 'type': {'required': False, 'description': 'Limit result set to products assigned a specific type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'status': {'required': False, 'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'default': False, 'type': 'boolean'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'type': 'boolean'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'default': True, 'type': 'boolean'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'default': False, 'type': 'mixed'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'default': False, 'type': 'boolean'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}}}]}, '/wc/v2/taxes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'priority': {'required': False, 'description': 'Tax priority.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}, 'class': {'required': False, 'description': 'Tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string'}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'type': 'boolean'}, 'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}}}, {'methods': ['POST'], 'args': {'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'default': False, 'type': 'boolean'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'default': 'menu_order', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'type': {'required': False, 'description': 'Type of attribute.', 'default': 'select', 'enum': ['select'], 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'methods': ['GET'], 'args': {'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}, 'display': {'required': False, 'description': 'Category archive display type.', 'default': 'default', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer'}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'fee_lines': {'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'readonly': True, 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}}}, 'type': 'array'}, 'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean'}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'line_items': {'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'context': ['view', 'edit'], 'description': 'Product SKU.', 'readonly': True, 'type': 'string'}, 'subtotal_tax': {'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'price': {'context': ['view', 'edit'], 'description': 'Product price.', 'readonly': True, 'type': 'number'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}}}, 'type': 'array'}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string'}, 'shipping_lines': {'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}}}, 'type': 'array'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'coupon_lines': {'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}, 'discount_tax': {'context': ['view', 'edit'], 'description': 'Discount total tax.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'status': {'required': False, 'description': 'Order status.', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Shipping method sort order.', 'type': 'integer'}, 'method_id': {'required': True, 'description': 'Shipping method ID.'}, 'settings': {'required': False, 'description': 'Shipping method settings.', 'type': 'object'}, 'enabled': {'required': False, 'description': 'Shipping method enabled status.', 'type': 'boolean'}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'review': {'required': False, 'description': 'The content of the review.', 'type': 'string'}, 'name': {'required': False, 'description': 'Reviewer name.', 'type': 'string'}, 'email': {'required': False, 'description': 'Reviewer email.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/customers': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'role': {'required': False, 'description': 'Limit result set to resources with a specific role.', 'default': 'customer', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'type': 'string'}, 'email': {'required': False, 'description': 'Limit result set to resources with a specific email.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'name', 'enum': ['id', 'include', 'name', 'registered_date'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}}}, {'methods': ['POST'], 'args': {'password': {'required': True, 'description': 'New user password.', 'type': 'string'}, 'username': {'required': False, 'description': 'New user username.', 'type': 'string'}, 'email': {'required': True, 'description': 'New user email address.', 'type': 'string'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'type': 'boolean'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'type': {'required': False, 'description': 'Type of attribute.', 'enum': ['select'], 'type': 'string'}, 'name': {'required': False, 'description': 'Attribute name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'review': {'required': True, 'description': 'Review content.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name of the reviewer.', 'type': 'string'}, 'email': {'required': True, 'description': 'Email of the reviewer.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}]}, '/wc/v2/customers/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'password': {'required': False, 'description': 'Customer password.', 'type': 'string'}, 'username': {'required': False, 'description': 'Customer login name.', 'type': 'string'}, 'email': {'required': False, 'description': 'The email address for the customer.', 'type': 'string'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'List of billing address data.', 'type': 'object'}, 'shipping': {'required': False, 'description': 'List of shipping address data.', 'type': 'object'}, 'first_name': {'required': False, 'description': 'Customer first name.', 'type': 'string'}, 'last_name': {'required': False, 'description': 'Customer last name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'code': {'required': False, 'description': 'Limit result set to resources with a specific code.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'default': 'fixed_cart', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'excluded_product_categories': {'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'default': False, 'type': 'boolean'}, 'code': {'required': True, 'description': 'Coupon code.', 'type': 'string'}, 'email_restrictions': {'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'type': 'array'}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'excluded_product_ids': {'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'type': 'array'}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'product_categories': {'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'default': False, 'type': 'boolean'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'default': False, 'type': 'boolean'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'product_ids': {'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'type': 'array'}}}], 'namespace': 'wc/v2'}, '/wc/v2/reports/top_sellers': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}, 'date_min': {'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'date_max': {'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'period': {'required': False, 'description': 'Report period.', 'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'type': 'boolean'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'type': 'boolean'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'type': 'mixed'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'type': 'boolean'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}}}]}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}]}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'action': {'required': False, 'description': 'What running the tool will do.', 'type': 'string'}, 'message': {'required': False, 'description': 'Tool return message.', 'type': 'string'}, 'id': {'required': False, 'description': 'A unique identifier for the tool.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tool name.', 'type': 'string'}, 'description': {'required': False, 'description': 'Tool description.', 'type': 'string'}, 'success': {'required': False, 'description': 'Did the tool run successfully?', 'type': 'boolean'}}}]}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}, 'value': {'required': False, 'description': 'Setting value.', 'type': 'mixed'}}}]}, '/wc/v2/system_status': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}, 'value': {'required': False, 'description': 'Setting value.', 'type': 'mixed'}}}]}, '/wc/v2/products/tags': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'methods': ['GET'], 'args': {'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'methods': ['DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'slug': {'required': False, 'description': 'Unique slug for the resource.', 'type': 'string'}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/reports/sales': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}, 'date_min': {'required': False, 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'date_max': {'required': False, 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string'}, 'period': {'required': False, 'description': 'Report period.', 'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'group': {'required': False, 'description': 'Settings group ID.', 'type': 'string'}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'review': {'required': False, 'description': 'The content of the review.', 'type': 'string'}, 'name': {'required': False, 'description': 'Reviewer name.', 'type': 'string'}, 'email': {'required': False, 'description': 'Reviewer email.', 'type': 'string'}, 'date_created_gmt': {'required': False, 'description': 'The date the review was created, as GMT.', 'type': 'date-time'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'rating': {'required': False, 'description': 'Review rating (0 to 5).', 'type': 'integer'}, 'date_created': {'required': False, 'description': "The date the review was created, in the site's timezone.", 'type': 'date-time'}}}]}, '/wc/v2/orders/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'customer_id': {'required': False, 'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer'}, 'parent_id': {'required': False, 'description': 'Parent order ID.', 'type': 'integer'}, 'line_items': {'required': False, 'description': 'Line items data.', 'items': {'type': 'object', 'properties': {'sku': {'context': ['view', 'edit'], 'description': 'Product SKU.', 'readonly': True, 'type': 'string'}, 'subtotal_tax': {'context': ['view', 'edit'], 'description': 'Line subtotal tax (before discounts).', 'readonly': True, 'type': 'string'}, 'variation_id': {'context': ['view', 'edit'], 'description': 'Variation ID, if applicable.', 'type': 'integer'}, 'subtotal': {'context': ['view', 'edit'], 'description': 'Line subtotal (before discounts).', 'type': 'string'}, 'product_id': {'context': ['view', 'edit'], 'description': 'Product ID.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'type': 'integer'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'quantity': {'context': ['view', 'edit'], 'description': 'Quantity ordered.', 'type': 'integer'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'price': {'context': ['view', 'edit'], 'description': 'Product price.', 'readonly': True, 'type': 'number'}, 'name': {'context': ['view', 'edit'], 'description': 'Product name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of product.', 'type': 'string'}}}, 'type': 'array'}, 'set_paid': {'required': False, 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean'}, 'customer_note': {'required': False, 'description': 'Note left by customer during checkout.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Shipping address.', 'type': 'object'}, 'payment_method_title': {'required': False, 'description': 'Payment method title.', 'type': 'string'}, 'fee_lines': {'required': False, 'description': 'Fee lines data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'tax_status': {'context': ['view', 'edit'], 'description': 'Tax status of fee.', 'enum': ['taxable', 'none'], 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Fee name.', 'type': 'mixed'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'tax_class': {'context': ['view', 'edit'], 'description': 'Tax class of fee.', 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'subtotal': {'context': ['view', 'edit'], 'description': 'Tax subtotal.', 'readonly': True, 'type': 'string'}, 'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}}}, 'type': 'array'}, 'transaction_id': {'required': False, 'description': 'Unique transaction ID.', 'type': 'string'}, 'payment_method': {'required': False, 'description': 'Payment method ID.', 'type': 'string'}, 'currency': {'required': False, 'description': 'Currency the order was created with, in ISO format.', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string'}, 'shipping_lines': {'required': False, 'description': 'Shipping lines data.', 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Line total (after discounts).', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'method_title': {'context': ['view', 'edit'], 'description': 'Shipping method name.', 'type': 'mixed'}, 'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'total_tax': {'context': ['view', 'edit'], 'description': 'Line total tax (after discounts).', 'readonly': True, 'type': 'string'}, 'taxes': {'context': ['view', 'edit'], 'description': 'Line taxes.', 'readonly': True, 'items': {'type': 'object', 'properties': {'total': {'context': ['view', 'edit'], 'description': 'Tax total.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tax rate ID.', 'readonly': True, 'type': 'integer'}}}, 'type': 'array'}, 'method_id': {'context': ['view', 'edit'], 'description': 'Shipping method ID.', 'type': 'mixed'}}}, 'type': 'array'}, 'coupon_lines': {'required': False, 'description': 'Coupons line data.', 'items': {'type': 'object', 'properties': {'meta_data': {'context': ['view', 'edit'], 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'code': {'context': ['view', 'edit'], 'description': 'Coupon code.', 'type': 'mixed'}, 'discount_tax': {'context': ['view', 'edit'], 'description': 'Discount total tax.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Item ID.', 'readonly': True, 'type': 'integer'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount total.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'billing': {'required': False, 'description': 'Billing address.', 'type': 'object'}, 'status': {'required': False, 'description': 'Order status.', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Shipping class name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}}}, {'methods': ['POST'], 'args': {'name': {'required': True, 'description': 'Tax class name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'title': {'required': False, 'description': 'Payment gateway title on checkout.', 'type': 'string'}, 'order': {'required': False, 'description': 'Payment gateway sort order.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'string'}, 'enabled': {'required': False, 'description': 'Payment gateway enabled status.', 'type': 'boolean'}, 'description': {'required': False, 'description': 'Payment gateway description on checkout.', 'type': 'string'}, 'settings': {'required': False, 'description': 'Payment gateway settings.', 'type': 'object'}}}]}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'customer_id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}}}]}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Shipping method sort order.', 'type': 'integer'}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}, 'settings': {'required': False, 'description': 'Shipping method settings.', 'type': 'object'}, 'enabled': {'required': False, 'description': 'Shipping method enabled status.', 'type': 'boolean'}}}, {'methods': ['DELETE'], 'args': {'zone_id': {'required': False, 'description': 'Unique ID for the zone.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'instance_id': {'required': False, 'description': 'Unique ID for the instance.', 'type': 'integer'}}}]}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'priority': {'required': False, 'description': 'Tax priority.', 'type': 'integer'}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean'}, 'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'class': {'required': False, 'description': 'Tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string'}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'type': 'boolean'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/webhooks/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'enum': ['active', 'paused', 'disabled'], 'type': 'string'}, 'topic': {'required': False, 'description': 'Webhook topic.', 'type': 'string'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'parent': {'required': False, 'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}]}, '/wc/v2/settings': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'methods': ['GET'], 'args': []}], 'namespace': 'wc/v2'}, '/wc/v2/products': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'sku': {'required': False, 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string'}, 'min_price': {'required': False, 'description': 'Limit result set to products based on a minimum price.', 'type': 'string'}, 'attribute': {'required': False, 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'on_sale': {'required': False, 'description': 'Limit result set to products on sale.', 'type': 'boolean'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'attribute_term': {'required': False, 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'in_stock': {'required': False, 'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean'}, 'tag': {'required': False, 'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string'}, 'max_price': {'required': False, 'description': 'Limit result set to products based on a maximum price.', 'type': 'string'}, 'parent_exclude': {'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'featured': {'required': False, 'description': 'Limit result set to featured products.', 'type': 'boolean'}, 'shipping_class': {'required': False, 'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'slug': {'required': False, 'description': 'Limit result set to products with a specific slug.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'category': {'required': False, 'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string'}, 'type': {'required': False, 'description': 'Limit result set to products assigned a specific type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'status': {'required': False, 'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'upsell_ids': {'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'default_attributes': {'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'type': 'boolean'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}, 'type': 'array'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'default': False, 'type': 'boolean'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'default': False, 'type': 'boolean'}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}}}, 'type': 'array'}, 'categories': {'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Category slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Category name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'cross_sell_ids': {'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'default': True, 'type': 'boolean'}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'default': False, 'type': 'boolean'}, 'composite_components': {'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}, 'type': 'array'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'readonly': True, 'type': 'string'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'type': 'integer'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'default': 'visible', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'default': False, 'type': 'boolean'}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'composite_scenarios': {'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}, 'type': 'array'}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}, 'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}}}, 'id': {'context': ['view', 'edit'], 'description': 'Scenario ID.', 'readonly': True, 'type': 'string'}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'items': {'type': 'object', 'properties': {'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}, 'type': 'array'}}}, 'type': 'array'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'images': {'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'format': 'uri', 'description': 'Image URL.', 'type': 'string'}, 'date_created_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_modified': {'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time'}, 'date_created': {'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time'}}}, 'type': 'array'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'grouped_products': {'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'type': 'array'}, 'tags': {'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Tag slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Tag name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'default': False, 'type': 'boolean'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'status': {'required': False, 'description': 'Product status (post status).', 'default': 'publish', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'type': {'required': False, 'description': 'Product type.', 'default': 'simple', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'default': False, 'type': 'boolean'}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'default': False, 'type': 'boolean'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'default': 'taxable', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Term name.', 'type': 'string'}}}]}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'code': {'required': False, 'description': 'Shipping zone location code.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}, 'type': {'required': False, 'description': 'Shipping zone location type.', 'enum': ['postcode', 'state', 'country', 'continent'], 'type': 'string'}}}]}, '/wc/v2/taxes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'order', 'enum': ['id', 'order'], 'type': 'string'}, 'class': {'required': False, 'description': 'Sort by tax class.', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}}}, {'methods': ['POST'], 'args': {'priority': {'required': False, 'description': 'Tax priority.', 'default': 1, 'type': 'integer'}, 'order': {'required': False, 'description': 'Indicates the order that will appear in queries.', 'type': 'integer'}, 'class': {'required': False, 'description': 'Tax class.', 'default': 'standard', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string'}, 'state': {'required': False, 'description': 'State code.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tax rate name.', 'type': 'string'}, 'country': {'required': False, 'description': 'Country ISO 3166 code.', 'type': 'string'}, 'rate': {'required': False, 'description': 'Tax rate.', 'type': 'string'}, 'city': {'required': False, 'description': 'City name.', 'type': 'string'}, 'shipping': {'required': False, 'description': 'Whether or not this tax rate also gets applied to shipping.', 'default': True, 'type': 'boolean'}, 'compound': {'required': False, 'description': 'Whether or not this is a compound rate.', 'default': False, 'type': 'boolean'}, 'postcode': {'required': False, 'description': 'Postcode / ZIP.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'parent': {'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'parent_exclude': {'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}}}, {'methods': ['POST'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'refunded_by': {'required': False, 'description': 'User ID of user who created the refund.', 'type': 'integer'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'refunded_payment': {'required': False, 'description': 'If the payment was refunded via the API.', 'type': 'boolean'}, 'amount': {'required': False, 'description': 'Refund amount.', 'type': 'string'}, 'api_refund': {'required': False, 'description': 'When true, the payment gateway API is used to generate the refund.', 'default': True, 'type': 'boolean'}, 'reason': {'required': False, 'description': 'Reason for refund.', 'type': 'string'}}}]}, '/wc/v2/products/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'upsell_ids': {'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'default_attributes': {'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}, 'type': 'array'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'default': False, 'type': 'boolean'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'default': False, 'type': 'boolean'}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}}}, 'type': 'array'}, 'categories': {'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Category slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Category name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'cross_sell_ids': {'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'type': 'boolean'}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'type': 'boolean'}, 'composite_components': {'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}, 'type': 'array'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'readonly': True, 'type': 'string'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'type': 'boolean'}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'composite_scenarios': {'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}, 'type': 'array'}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}, 'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}}}, 'id': {'context': ['view', 'edit'], 'description': 'Scenario ID.', 'readonly': True, 'type': 'string'}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'items': {'type': 'object', 'properties': {'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}, 'type': 'array'}}}, 'type': 'array'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'images': {'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'format': 'uri', 'description': 'Image URL.', 'type': 'string'}, 'date_created_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_modified': {'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time'}, 'date_created': {'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time'}}}, 'type': 'array'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'grouped_products': {'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'type': 'array'}, 'tags': {'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Tag slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Tag name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'type': 'boolean'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'status': {'required': False, 'description': 'Product status (post status).', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'type': {'required': False, 'description': 'Product type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'type': 'boolean'}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'type': 'boolean'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'methods': ['GET'], 'args': {'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by resource attribute.', 'default': 'name', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'slug': {'required': False, 'description': 'Limit result set to resources with a specific slug.', 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'hide_empty': {'required': False, 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean'}}}, {'methods': ['POST'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': True, 'description': 'Name for the resource.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'enum': ['active', 'paused', 'disabled'], 'type': 'string'}, 'topic': {'required': False, 'description': 'Webhook topic.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Shipping class name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'description': {'required': False, 'description': 'Variation description.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'image': {'required': False, 'description': 'Variation image data.', 'type': 'object'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'downloadable': {'required': False, 'description': 'If the variation is downloadable.', 'type': 'boolean'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'sale_price': {'required': False, 'description': 'Variation sale price.', 'type': 'string'}, 'weight': {'required': False, 'description': 'Variation weight (kg).', 'type': 'string'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Variation dimensions.', 'type': 'object'}, 'regular_price': {'required': False, 'description': 'Variation regular price.', 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'visible': {'required': False, 'description': "Define if the variation is visible on the product's page.", 'type': 'boolean'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at variation level.', 'type': 'mixed'}, 'virtual': {'required': False, 'description': 'If the variation is virtual.', 'type': 'boolean'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'product_id': {'required': False, 'description': 'Unique identifier for the variable product.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the variation.', 'type': 'integer'}}}]}, '/wc/v2/reports': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view'], 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Term name.', 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'attribute_id': {'required': False, 'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer'}}}]}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Tag name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Category name.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}, 'display': {'required': False, 'description': 'Category archive display type.', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'methods': ['GET', 'POST'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'type': {'required': False, 'description': 'Limit result to customers or internal notes.', 'default': 'any', 'enum': ['any', 'customer', 'internal'], 'type': 'string'}}}, {'methods': ['POST'], 'args': {'order_id': {'required': False, 'description': 'The order ID.', 'type': 'integer'}, 'customer_note': {'required': False, 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'default': False, 'type': 'boolean'}, 'note': {'required': True, 'description': 'Order note content.', 'type': 'string'}}}]}, '/wc/v2/webhooks': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'title'], 'type': 'string'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'status': {'required': False, 'description': 'Limit result set to webhooks assigned a specific status.', 'default': 'all', 'enum': ['all', 'active', 'paused', 'disabled'], 'type': 'string'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}}}, {'methods': ['POST'], 'args': {'delivery_url': {'required': True, 'description': 'Webhook delivery URL.', 'type': 'string'}, 'secret': {'required': False, 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string'}, 'status': {'required': False, 'description': 'Webhook status.', 'default': 'active', 'enum': ['active', 'paused', 'disabled'], 'type': 'string'}, 'topic': {'required': True, 'description': 'Webhook topic.', 'type': 'string'}, 'name': {'required': False, 'description': 'A friendly name for the webhook.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'methods': ['GET'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'webhook_id': {'required': False, 'description': 'Unique identifier for the webhook.', 'type': 'integer'}}}]}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'has_archives': {'required': False, 'description': 'Enable/Disable attribute archives.', 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'type': {'required': False, 'description': 'Type of attribute.', 'enum': ['select'], 'type': 'string'}, 'name': {'required': False, 'description': 'Attribute name.', 'type': 'string'}, 'order_by': {'required': False, 'description': 'Default sort order.', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/coupons/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'excluded_product_categories': {'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean'}, 'code': {'required': False, 'description': 'Coupon code.', 'type': 'string'}, 'email_restrictions': {'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'type': 'array'}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'excluded_product_ids': {'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'type': 'array'}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'product_categories': {'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'product_ids': {'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'type': 'array'}}}], 'namespace': 'wc/v2'}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'limit_usage_to_x_items': {'required': False, 'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer'}, 'usage_limit_per_user': {'required': False, 'description': 'How many times the coupon can be used per customer.', 'type': 'integer'}, 'discount_type': {'required': False, 'description': 'Determines the type of discount that will be applied.', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string'}, 'amount': {'required': False, 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string'}, 'usage_limit': {'required': False, 'description': 'How many times the coupon can be used in total.', 'type': 'integer'}, 'description': {'required': False, 'description': 'Coupon description.', 'type': 'string'}, 'maximum_amount': {'required': False, 'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string'}, 'excluded_product_categories': {'required': False, 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'free_shipping': {'required': False, 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean'}, 'code': {'required': False, 'description': 'Coupon code.', 'type': 'string'}, 'product_ids': {'required': False, 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'type': 'array'}, 'email_restrictions': {'required': False, 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'type': 'array'}, 'date_expires_gmt': {'required': False, 'description': 'The date the coupon expires, as GMT.', 'type': 'string'}, 'excluded_product_ids': {'required': False, 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'type': 'array'}, 'date_expires': {'required': False, 'description': "The date the coupon expires, in the site's timezone.", 'type': 'string'}, 'product_categories': {'required': False, 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'type': 'array'}, 'individual_use': {'required': False, 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean'}, 'exclude_sale_items': {'required': False, 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean'}, 'minimum_amount': {'required': False, 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'order': {'required': False, 'description': 'Shipping zone order.', 'type': 'integer'}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}, 'name': {'required': False, 'description': 'Shipping zone name.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique ID for the resource.', 'type': 'integer'}}}]}, '/wc/v2': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'methods': ['GET'], 'args': {'namespace': {'required': False, 'default': 'wc/v2'}, 'context': {'required': False, 'default': 'view'}}}], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones': {'methods': ['GET', 'POST'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'methods': ['GET'], 'args': []}, {'methods': ['POST'], 'args': {'order': {'required': False, 'description': 'Shipping zone order.', 'type': 'integer'}, 'name': {'required': True, 'description': 'Shipping zone name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'required': False, 'description': 'Category name.', 'type': 'string'}, 'parent': {'required': False, 'description': 'The ID for the parent of the resource.', 'type': 'integer'}, 'image': {'required': False, 'description': 'Image data.', 'type': 'object'}, 'display': {'required': False, 'description': 'Category archive display type.', 'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string'}, 'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort the resource.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/orders/network': {'methods': ['GET'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'methods': ['GET'], 'args': {'before': {'required': False, 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string'}, 'after': {'required': False, 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string'}, 'parent': {'required': False, 'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'order': {'required': False, 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'enum': ['asc', 'desc'], 'type': 'string'}, 'include': {'required': False, 'description': 'Limit result set to specific ids.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'orderby': {'required': False, 'description': 'Sort collection by object attribute.', 'default': 'date', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string'}, 'parent_exclude': {'required': False, 'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'search': {'required': False, 'description': 'Limit results to those matching a string.', 'type': 'string'}, 'per_page': {'required': False, 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer'}, 'exclude': {'required': False, 'description': 'Ensure result set excludes specific IDs.', 'default': [], 'items': {'type': 'integer'}, 'type': 'array'}, 'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'customer': {'required': False, 'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer'}, 'dp': {'required': False, 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer'}, 'page': {'required': False, 'description': 'Current page of the collection.', 'default': 1, 'type': 'integer'}, 'offset': {'required': False, 'description': 'Offset the result set by a specific number of items.', 'type': 'integer'}, 'status': {'required': False, 'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string'}, 'product': {'required': False, 'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer'}}}], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<id>[\\d]+)': {'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2', 'endpoints': [{'methods': ['GET'], 'args': {'context': {'required': False, 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'enum': ['view', 'edit'], 'type': 'string'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'upsell_ids': {'required': False, 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'sku': {'required': False, 'description': 'Unique identifier.', 'type': 'string'}, 'default_attributes': {'required': False, 'description': 'Defaults variation attributes.', 'items': {'type': 'object', 'properties': {'option': {'context': ['view', 'edit'], 'description': 'Selected attribute term name.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}}}, 'type': 'array'}, 'name': {'required': False, 'description': 'Product name.', 'type': 'string'}, 'composite_shop_price_calc': {'required': False, 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string'}, 'short_description': {'required': False, 'description': 'Product short description.', 'type': 'string'}, 'sale_price': {'required': False, 'description': 'Product sale price.', 'type': 'string'}, 'in_stock': {'required': False, 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean'}, 'attributes': {'required': False, 'description': 'List of attributes.', 'items': {'type': 'object', 'properties': {'options': {'context': ['view', 'edit'], 'description': 'List of available term names of the attribute.', 'items': {'type': 'string'}, 'type': 'array'}, 'id': {'context': ['view', 'edit'], 'description': 'Attribute ID.', 'type': 'integer'}, 'visible': {'context': ['view', 'edit'], 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'default': False, 'type': 'boolean'}, 'name': {'context': ['view', 'edit'], 'description': 'Attribute name.', 'type': 'string'}, 'variation': {'context': ['view', 'edit'], 'description': 'Define if the attribute can be used as variation.', 'default': False, 'type': 'boolean'}, 'position': {'context': ['view', 'edit'], 'description': 'Attribute position.', 'type': 'integer'}}}, 'type': 'array'}, 'categories': {'required': False, 'description': 'List of categories.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Category slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Category ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Category name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'date_on_sale_to_gmt': {'required': False, 'description': 'End date of sale price, as GMT.', 'type': 'date-time'}, 'dimensions': {'required': False, 'description': 'Product dimensions.', 'type': 'object'}, 'purchase_note': {'required': False, 'description': 'Optional note to send the customer after purchase.', 'type': 'string'}, 'cross_sell_ids': {'required': False, 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'type': 'array'}, 'reviews_allowed': {'required': False, 'description': 'Allow reviews.', 'type': 'boolean'}, 'virtual': {'required': False, 'description': 'If the product is virtual.', 'type': 'boolean'}, 'composite_components': {'required': False, 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'default_option_id': {'context': ['view', 'edit'], 'description': 'The product ID of the default/pre-selected component option.', 'type': 'integer'}, 'options_style': {'context': ['view', 'edit'], 'description': 'Indicates which template to use for displaying component options.', 'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string'}, 'thumbnail_src': {'context': ['view', 'edit'], 'description': 'URL of the thumbnail associated with this Component.', 'type': 'string'}, 'optional': {'context': ['view', 'edit'], 'description': 'Indicates whether the component is optional.', 'type': 'boolean'}, 'quantity_min': {'context': ['view', 'edit'], 'description': 'Minimum component quantity.', 'type': 'integer'}, 'thumbnail_id': {'context': ['view', 'edit'], 'description': 'Attachment ID of the thumbnail associated with this Component.', 'type': 'integer'}, 'description': {'context': ['view', 'edit'], 'description': 'Description of the component.', 'type': 'string'}, 'query_ids': {'context': ['view', 'edit'], 'description': 'Product IDs or category IDs to use for populating component options.', 'items': {'type': 'integer'}, 'type': 'array'}, 'quantity_max': {'context': ['view', 'edit'], 'description': 'Maximum component quantity.'}, 'title': {'context': ['view', 'edit'], 'description': 'Title of the component.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'readonly': True, 'type': 'string'}, 'priced_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'type': 'boolean'}, 'shipped_individually': {'context': ['view', 'edit'], 'description': 'Indicates whether this component is shipped separately from the composite.', 'type': 'boolean'}, 'query_type': {'context': ['view', 'edit'], 'description': 'Query type associated with component options.', 'enum': ['product_ids', 'category_ids'], 'type': 'string'}, 'discount': {'context': ['view', 'edit'], 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'type': 'string'}}}, 'type': 'array'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}, 'meta_data': {'required': False, 'description': 'Meta data.', 'items': {'type': 'object', 'properties': {'key': {'context': ['view', 'edit'], 'description': 'Meta key.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Meta ID.', 'readonly': True, 'type': 'integer'}, 'value': {'context': ['view', 'edit'], 'description': 'Meta value.', 'type': 'mixed'}}}, 'type': 'array'}, 'menu_order': {'required': False, 'description': 'Menu order, used to custom sort products.', 'type': 'integer'}, 'catalog_visibility': {'required': False, 'description': 'Catalog visibility.', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string'}, 'composite_layout': {'required': False, 'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string'}, 'date_on_sale_to': {'required': False, 'description': "End date of sale price, in the site's timezone.", 'type': 'date-time'}, 'downloads': {'required': False, 'description': 'List of downloadable files.', 'items': {'type': 'object', 'properties': {'file': {'context': ['view', 'edit'], 'description': 'File URL.', 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'File MD5 hash.', 'readonly': True, 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'File name.', 'type': 'string'}}}, 'type': 'array'}, 'description': {'required': False, 'description': 'Product description.', 'type': 'string'}, 'downloadable': {'required': False, 'description': 'If the product is downloadable.', 'type': 'boolean'}, 'parent_id': {'required': False, 'description': 'Product parent ID.', 'type': 'integer'}, 'composite_scenarios': {'required': False, 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'type': 'object', 'properties': {'name': {'context': ['view', 'edit'], 'description': 'Name of the scenario.', 'type': 'string'}, 'configuration': {'context': ['view', 'edit'], 'description': 'Scenario matching conditions.', 'type': 'array', 'properties': {'component_options': {'context': ['view', 'edit'], 'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'items': {'type': 'integer'}, 'type': 'array'}, 'component_id': {'context': ['view', 'edit'], 'description': 'Component ID.', 'type': 'string'}, 'options_modifier': {'context': ['view', 'edit'], 'description': 'Comparison modifier for the referenced product/variation IDs.', 'enum': ['in', 'not-in', 'masked'], 'type': 'string'}}}, 'id': {'context': ['view', 'edit'], 'description': 'Scenario ID.', 'readonly': True, 'type': 'string'}, 'description': {'context': ['view', 'edit'], 'description': 'Optional short description of the scenario.', 'type': 'string'}, 'actions': {'context': ['view', 'edit'], 'description': 'Scenario actions.', 'items': {'type': 'object', 'properties': {'action_id': {'context': ['view', 'edit'], 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'enum': ['compat_group', 'conditional_components'], 'type': 'string'}, 'action_data': {'context': ['view', 'edit'], 'description': 'Scenario action data.', 'type': 'object'}, 'is_active': {'context': ['view', 'edit'], 'description': 'Indicates whether the scenario action is active.', 'type': 'boolean'}}}, 'type': 'array'}}}, 'type': 'array'}, 'backorders': {'required': False, 'description': 'If managing stock, this controls if backorders are allowed.', 'enum': ['no', 'notify', 'yes'], 'type': 'string'}, 'images': {'required': False, 'description': 'List of images.', 'items': {'type': 'object', 'properties': {'src': {'context': ['view', 'edit'], 'format': 'uri', 'description': 'Image URL.', 'type': 'string'}, 'date_created_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was created, as GMT.', 'readonly': True, 'type': 'date-time'}, 'id': {'context': ['view', 'edit'], 'description': 'Image ID.', 'type': 'integer'}, 'alt': {'context': ['view', 'edit'], 'description': 'Image alternative text.', 'type': 'string'}, 'name': {'context': ['view', 'edit'], 'description': 'Image name.', 'type': 'string'}, 'date_modified': {'context': ['view', 'edit'], 'description': "The date the image was last modified, in the site's timezone.", 'readonly': True, 'type': 'date-time'}, 'position': {'context': ['view', 'edit'], 'description': 'Image position. 0 means that the image is featured.', 'type': 'integer'}, 'date_modified_gmt': {'context': ['view', 'edit'], 'description': 'The date the image was last modified, as GMT.', 'readonly': True, 'type': 'date-time'}, 'date_created': {'context': ['view', 'edit'], 'description': "The date the image was created, in the site's timezone.", 'readonly': True, 'type': 'date-time'}}}, 'type': 'array'}, 'date_on_sale_from': {'required': False, 'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time'}, 'grouped_products': {'required': False, 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'type': 'array'}, 'tags': {'required': False, 'description': 'List of tags.', 'items': {'type': 'object', 'properties': {'slug': {'context': ['view', 'edit'], 'description': 'Tag slug.', 'readonly': True, 'type': 'string'}, 'id': {'context': ['view', 'edit'], 'description': 'Tag ID.', 'type': 'integer'}, 'name': {'context': ['view', 'edit'], 'description': 'Tag name.', 'readonly': True, 'type': 'string'}}}, 'type': 'array'}, 'weight': {'required': False, 'description': 'Product weight (kg).', 'type': 'string'}, 'slug': {'required': False, 'description': 'Product slug.', 'type': 'string'}, 'featured': {'required': False, 'description': 'Featured product.', 'type': 'boolean'}, 'regular_price': {'required': False, 'description': 'Product regular price.', 'type': 'string'}, 'status': {'required': False, 'description': 'Product status (post status).', 'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string'}, 'shipping_class': {'required': False, 'description': 'Shipping class slug.', 'type': 'string'}, 'type': {'required': False, 'description': 'Product type.', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string'}, 'download_limit': {'required': False, 'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer'}, 'manage_stock': {'required': False, 'description': 'Stock management at product level.', 'type': 'boolean'}, 'external_url': {'required': False, 'description': 'Product external URL. Only for external products.', 'type': 'string'}, 'date_on_sale_from_gmt': {'required': False, 'description': 'Start date of sale price, as GMT.', 'type': 'date-time'}, 'sold_individually': {'required': False, 'description': 'Allow one item to be bought in a single order.', 'type': 'boolean'}, 'download_expiry': {'required': False, 'description': 'Number of days until access to downloadable files expires.', 'type': 'integer'}, 'tax_status': {'required': False, 'description': 'Tax status.', 'enum': ['taxable', 'shipping', 'none'], 'type': 'string'}, 'button_text': {'required': False, 'description': 'Product external button text. Only for external products.', 'type': 'string'}, 'stock_quantity': {'required': False, 'description': 'Stock quantity.', 'type': 'integer'}, 'tax_class': {'required': False, 'description': 'Tax class.', 'type': 'string'}}}, {'methods': ['DELETE'], 'args': {'force': {'required': False, 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean'}, 'id': {'required': False, 'description': 'Unique identifier for the resource.', 'type': 'integer'}}}]}, '/wc/v2/products/tags/batch': {'methods': ['POST', 'PUT', 'PATCH'], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'required': False, 'description': 'HTML description of the resource.', 'type': 'string'}, 'slug': {'required': False, 'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string'}, 'name': {'required': False, 'description': 'Tag name.', 'type': 'string'}}}], 'namespace': 'wc/v2'}}
11:14:47,247 root INFO Get INDEX API info from cache.
11:14:47,250 root INFO {'/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'dp': {'type': 'integer', 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}}}, {'methods': ['POST'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'api_refund': {'type': 'boolean', 'description': 'When true, the payment gateway API is used to generate the refund.', 'default': True, 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'reason': {'type': 'string', 'description': 'Reason for refund.', 'required': False}, 'amount': {'type': 'string', 'description': 'Refund amount.', 'required': False}, 'refunded_by': {'type': 'integer', 'description': 'User ID of user who created the refund.', 'required': False}, 'refunded_payment': {'type': 'boolean', 'description': 'If the payment was refunded via the API.', 'required': False}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones': {'endpoints': [{'methods': ['GET'], 'args': []}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Shipping zone name.', 'required': True}, 'order': {'type': 'integer', 'description': 'Shipping zone order.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'name': {'type': 'string', 'description': 'Tag name.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'webhook_id': {'type': 'integer', 'description': 'Unique identifier for the webhook.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}], 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Term name.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}}}], 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'on_sale': {'type': 'boolean', 'description': 'Limit result set to products on sale.', 'required': False}, 'status': {'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'required': False}, 'min_price': {'type': 'string', 'description': 'Limit result set to products based on a minimum price.', 'required': False}, 'max_price': {'type': 'string', 'description': 'Limit result set to products based on a maximum price.', 'required': False}, 'attribute_term': {'type': 'string', 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'description': 'Limit result set to products assigned a specific type.', 'required': False}, 'tag': {'type': 'string', 'description': 'Limit result set to products assigned a specific tag ID.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'sku': {'type': 'string', 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to products with a specific slug.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Limit result set to featured products.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'attribute': {'type': 'string', 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Limit result set to products in stock or out of stock.', 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'category': {'type': 'string', 'description': 'Limit result set to products assigned a specific category ID.', 'required': False}}}, {'methods': ['POST'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the variation is downloadable.', 'default': False, 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the variation is virtual.', 'default': False, 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'manage_stock': {'type': 'mixed', 'description': 'Stock management at variation level.', 'default': False, 'required': False}, 'visible': {'type': 'boolean', 'description': "Define if the variation is visible on the product's page.", 'default': True, 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'default': 'taxable', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the variation is downloadable.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the variation is virtual.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'visible': {'type': 'boolean', 'description': "Define if the variation is visible on the product's page.", 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'manage_stock': {'type': 'mixed', 'description': 'Stock management at variation level.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'on_sale': {'type': 'boolean', 'description': 'Limit result set to products on sale.', 'required': False}, 'status': {'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'type': 'string', 'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'required': False}, 'min_price': {'type': 'string', 'description': 'Limit result set to products based on a minimum price.', 'required': False}, 'max_price': {'type': 'string', 'description': 'Limit result set to products based on a maximum price.', 'required': False}, 'attribute_term': {'type': 'string', 'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'required': False}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'description': 'Limit result set to products assigned a specific type.', 'required': False}, 'tag': {'type': 'string', 'description': 'Limit result set to products assigned a specific tag ID.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'sku': {'type': 'string', 'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to products with a specific slug.', 'required': False}, 'featured': {'type': 'boolean', 'description': 'Limit result set to featured products.', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'attribute': {'type': 'string', 'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Limit result set to products in stock or out of stock.', 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Limit result set to products assigned a specific shipping class ID.', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'category': {'type': 'string', 'description': 'Limit result set to products assigned a specific category ID.', 'required': False}}}, {'methods': ['POST'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'cross_sell_ids': {'type': 'array', 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'description': 'Product status (post status).', 'default': 'publish', 'required': False}, 'categories': {'type': 'array', 'description': 'List of categories.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Category slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Category name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'description': 'Catalog visibility.', 'default': 'visible', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'default': 'taxable', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'required': False}, 'composite_scenarios': {'type': 'array', 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}, 'actions': {'description': 'Scenario actions.', 'type': 'array', 'items': {'properties': {'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'configuration': {'properties': {'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Scenario ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'images': {'type': 'array', 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit']}, 'src': {'format': 'uri', 'type': 'string', 'description': 'Image URL.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit']}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'date_modified': {'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'composite_components': {'type': 'array', 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Component ID.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'description': 'Allow reviews.', 'default': True, 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'tags': {'type': 'array', 'description': 'List of tags.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Tag slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Tag name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the product is downloadable.', 'default': False, 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'grouped_products': {'type': 'array', 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'required': False}, 'default_attributes': {'type': 'array', 'description': 'Defaults variation attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'required': False}, 'manage_stock': {'type': 'boolean', 'description': 'Stock management at product level.', 'default': False, 'required': False}, 'upsell_ids': {'type': 'array', 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the product is virtual.', 'default': False, 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'options': {'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}, 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'featured': {'type': 'boolean', 'description': 'Featured product.', 'default': False, 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'description': 'Product type.', 'default': 'simple', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'sold_individually': {'type': 'boolean', 'description': 'Allow one item to be bought in a single order.', 'default': False, 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/taxes': {'endpoints': [{'methods': ['GET'], 'args': {'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'orderby': {'enum': ['id', 'order'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'order', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'description': 'Sort by tax class.', 'required': False}}}, {'methods': ['POST'], 'args': {'shipping': {'type': 'boolean', 'description': 'Whether or not this tax rate also gets applied to shipping.', 'default': True, 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'compound': {'type': 'boolean', 'description': 'Whether or not this is a compound rate.', 'default': False, 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'description': 'Tax class.', 'default': 'standard', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'priority': {'type': 'integer', 'description': 'Tax priority.', 'default': 1, 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}, {'methods': ['POST'], 'args': {'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'description': 'Default sort order.', 'default': 'menu_order', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'has_archives': {'type': 'boolean', 'description': 'Enable/Disable attribute archives.', 'default': False, 'required': False}, 'type': {'enum': ['select'], 'type': 'string', 'description': 'Type of attribute.', 'default': 'select', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'shipping': {'type': 'boolean', 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'priority': {'type': 'integer', 'description': 'Tax priority.', 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'compound': {'type': 'boolean', 'description': 'Whether or not this is a compound rate.', 'required': False}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'description': 'Tax class.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'cross_sell_ids': {'type': 'array', 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'description': 'Product status (post status).', 'required': False}, 'categories': {'type': 'array', 'description': 'List of categories.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Category slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Category name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'description': 'Catalog visibility.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'composite_scenarios': {'type': 'array', 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}, 'actions': {'description': 'Scenario actions.', 'type': 'array', 'items': {'properties': {'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'configuration': {'properties': {'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Scenario ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'images': {'type': 'array', 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit']}, 'src': {'format': 'uri', 'type': 'string', 'description': 'Image URL.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit']}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'date_modified': {'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'composite_components': {'type': 'array', 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Component ID.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'description': 'Allow reviews.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'tags': {'type': 'array', 'description': 'List of tags.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Tag slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Tag name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the product is downloadable.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'grouped_products': {'type': 'array', 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'required': False}, 'default_attributes': {'type': 'array', 'description': 'Defaults variation attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'manage_stock': {'type': 'boolean', 'description': 'Stock management at product level.', 'required': False}, 'upsell_ids': {'type': 'array', 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the product is virtual.', 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'options': {'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}, 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'featured': {'type': 'boolean', 'description': 'Featured product.', 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'description': 'Product type.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'sold_individually': {'type': 'boolean', 'description': 'Allow one item to be bought in a single order.', 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'endpoints': [{'methods': ['GET'], 'args': {'customer_id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/products/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'cross_sell_ids': {'type': 'array', 'description': 'List of cross-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'composite_layout': {'type': 'string', 'description': 'Single-product template layout. Applicable to composite-type products.', 'required': False}, 'status': {'enum': ['draft', 'pending', 'private', 'publish'], 'type': 'string', 'description': 'Product status (post status).', 'required': False}, 'categories': {'type': 'array', 'description': 'List of categories.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Category slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Category name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Category ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'catalog_visibility': {'enum': ['visible', 'catalog', 'search', 'hidden'], 'type': 'string', 'description': 'Catalog visibility.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'weight': {'type': 'string', 'description': 'Product weight (kg).', 'required': False}, 'composite_shop_price_calc': {'enum': ['defaults', 'min_max', 'hidden'], 'type': 'string', 'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'required': False}, 'purchase_note': {'type': 'string', 'description': 'Optional note to send the customer after purchase.', 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'composite_scenarios': {'type': 'array', 'description': 'Scenarios data. Applicable to composite-type products.', 'items': {'properties': {'description': {'type': 'string', 'description': 'Optional short description of the scenario.', 'context': ['view', 'edit']}, 'actions': {'description': 'Scenario actions.', 'type': 'array', 'items': {'properties': {'action_id': {'enum': ['compat_group', 'conditional_components'], 'type': 'string', 'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit']}, 'action_data': {'type': 'object', 'description': 'Scenario action data.', 'context': ['view', 'edit']}, 'is_active': {'type': 'boolean', 'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'configuration': {'properties': {'component_id': {'type': 'string', 'description': 'Component ID.', 'context': ['view', 'edit']}, 'options_modifier': {'enum': ['in', 'not-in', 'masked'], 'type': 'string', 'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit']}, 'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}}, 'type': 'array', 'description': 'Scenario matching conditions.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Name of the scenario.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Scenario ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'images': {'type': 'array', 'description': 'List of images.', 'items': {'properties': {'date_created_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit']}, 'date_created': {'type': 'date-time', 'readonly': True, 'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit']}, 'src': {'format': 'uri', 'type': 'string', 'description': 'Image URL.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Image ID.', 'context': ['view', 'edit']}, 'date_modified_gmt': {'type': 'date-time', 'readonly': True, 'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit']}, 'alt': {'type': 'string', 'description': 'Image alternative text.', 'context': ['view', 'edit']}, 'date_modified': {'type': 'date-time', 'readonly': True, 'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Image name.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'composite_components': {'type': 'array', 'description': 'List of components that this product consists of. Applicable to composite-type products.', 'items': {'properties': {'query_type': {'enum': ['product_ids', 'category_ids'], 'type': 'string', 'description': 'Query type associated with component options.', 'context': ['view', 'edit']}, 'default_option_id': {'type': 'integer', 'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit']}, 'quantity_min': {'type': 'integer', 'description': 'Minimum component quantity.', 'context': ['view', 'edit']}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'type': 'array', 'items': {'type': 'integer'}, 'context': ['view', 'edit']}, 'thumbnail_src': {'type': 'string', 'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'thumbnail_id': {'type': 'integer', 'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit']}, 'options_style': {'enum': ['dropdowns', 'thumbnails', 'radios'], 'type': 'string', 'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit']}, 'optional': {'type': 'boolean', 'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit']}, 'shipped_individually': {'type': 'boolean', 'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'Component ID.', 'context': ['view', 'edit']}, 'description': {'type': 'string', 'description': 'Description of the component.', 'context': ['view', 'edit']}, 'title': {'type': 'string', 'description': 'Title of the component.', 'context': ['view', 'edit']}, 'priced_individually': {'type': 'boolean', 'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'name': {'type': 'string', 'description': 'Product name.', 'required': False}, 'reviews_allowed': {'type': 'boolean', 'description': 'Allow reviews.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Product parent ID.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'tags': {'type': 'array', 'description': 'List of tags.', 'items': {'properties': {'slug': {'type': 'string', 'readonly': True, 'description': 'Tag slug.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'readonly': True, 'description': 'Tag name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tag ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the product is downloadable.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'grouped_products': {'type': 'array', 'description': 'List of grouped products ID.', 'items': {'type': 'integer'}, 'required': False}, 'default_attributes': {'type': 'array', 'description': 'Defaults variation attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'regular_price': {'type': 'string', 'description': 'Product regular price.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'manage_stock': {'type': 'boolean', 'description': 'Stock management at product level.', 'required': False}, 'upsell_ids': {'type': 'array', 'description': 'List of up-sell products IDs.', 'items': {'type': 'integer'}, 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'button_text': {'type': 'string', 'description': 'Product external button text. Only for external products.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the product is virtual.', 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'variation': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}, 'visible': {'type': 'boolean', 'default': False, 'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'position': {'type': 'integer', 'description': 'Attribute position.', 'context': ['view', 'edit']}, 'options': {'description': 'List of available term names of the attribute.', 'type': 'array', 'items': {'type': 'string'}, 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'featured': {'type': 'boolean', 'description': 'Featured product.', 'required': False}, 'short_description': {'type': 'string', 'description': 'Product short description.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Product dimensions.', 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'type': {'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'type': 'string', 'description': 'Product type.', 'required': False}, 'sale_price': {'type': 'string', 'description': 'Product sale price.', 'required': False}, 'sold_individually': {'type': 'boolean', 'description': 'Allow one item to be bought in a single order.', 'required': False}, 'slug': {'type': 'string', 'description': 'Product slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Product description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'external_url': {'type': 'string', 'description': 'Product external URL. Only for external products.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'Shipping zone name.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping zone order.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Term name.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'description': 'Sort collection by resource attribute.', 'default': 'name', 'required': False}, 'hide_empty': {'type': 'boolean', 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}}}, {'methods': ['POST'], 'args': {'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}], 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/taxes/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'shipping': {'type': 'boolean', 'description': 'Whether or not this tax rate also gets applied to shipping.', 'required': False}, 'postcode': {'type': 'string', 'description': 'Postcode / ZIP.', 'required': False}, 'name': {'type': 'string', 'description': 'Tax rate name.', 'required': False}, 'country': {'type': 'string', 'description': 'Country ISO 3166 code.', 'required': False}, 'state': {'type': 'string', 'description': 'State code.', 'required': False}, 'compound': {'type': 'boolean', 'description': 'Whether or not this is a compound rate.', 'required': False}, 'rate': {'type': 'string', 'description': 'Tax rate.', 'required': False}, 'class': {'enum': ['standard', 'reduced-rate', 'zero-rate'], 'type': 'string', 'description': 'Tax class.', 'required': False}, 'order': {'type': 'integer', 'description': 'Indicates the order that will appear in queries.', 'required': False}, 'city': {'type': 'string', 'description': 'City name.', 'required': False}, 'priority': {'type': 'integer', 'description': 'Tax priority.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'description': 'Default sort order.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'has_archives': {'type': 'boolean', 'description': 'Enable/Disable attribute archives.', 'required': False}, 'type': {'enum': ['select'], 'type': 'string', 'description': 'Type of attribute.', 'required': False}, 'name': {'type': 'string', 'description': 'Attribute name.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'name': {'type': 'string', 'description': 'Shipping class name.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/products/categories': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific parent.', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'description': 'Sort collection by resource attribute.', 'default': 'name', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}}}, {'methods': ['POST'], 'args': {'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'description': 'Category archive display type.', 'default': 'default', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/reports/sales': {'endpoints': [{'methods': ['GET'], 'args': {'date_min': {'type': 'string', 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False}, 'period': {'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string', 'description': 'Report period.', 'required': False}, 'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'date_max': {'type': 'string', 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'description': 'Category archive display type.', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Category name.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/categories/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'display': {'enum': ['default', 'products', 'subcategories', 'both'], 'type': 'string', 'description': 'Category archive display type.', 'required': False}, 'parent': {'type': 'integer', 'description': 'The ID for the parent of the resource.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'image': {'type': 'object', 'description': 'Image data.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Category name.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/customers': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'email': {'type': 'string', 'description': 'Limit result set to resources with a specific email.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'orderby': {'enum': ['id', 'include', 'name', 'registered_date'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'name', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'role': {'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'type': 'string', 'description': 'Limit result set to resources with a specific role.', 'default': 'customer', 'required': False}}}, {'methods': ['POST'], 'args': {'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'password': {'type': 'string', 'description': 'New user password.', 'required': True}, 'email': {'type': 'string', 'description': 'New user email address.', 'required': True}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}, 'username': {'type': 'string', 'description': 'New user username.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/orders': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'dp': {'type': 'integer', 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific product.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'status': {'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'customer': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific customer.', 'required': False}}}, {'methods': ['POST'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'description': 'Shipping lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'description': 'Currency the order was created with, in ISO format.', 'default': 'GBP', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'description': 'Order status.', 'default': 'pending', 'required': False}, 'line_items': {'type': 'array', 'description': 'Line items data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit']}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'description': 'Product SKU.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}, 'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'price': {'type': 'number', 'readonly': True, 'description': 'Product price.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'fee_lines': {'type': 'array', 'description': 'Fee lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'readonly': True, 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'set_paid': {'type': 'boolean', 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'default': False, 'required': False}, 'coupon_lines': {'type': 'array', 'description': 'Coupons line data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}, 'discount_tax': {'type': 'string', 'readonly': True, 'description': 'Discount total tax.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'customer_id': {'type': 'integer', 'description': 'User ID who owns the order. 0 for guests.', 'default': 0, 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}, 'value': {'type': 'mixed', 'description': 'Setting value.', 'required': False}}}], 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/customers/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'password': {'type': 'string', 'description': 'Customer password.', 'required': False}, 'email': {'type': 'string', 'description': 'The email address for the customer.', 'required': False}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}, 'username': {'type': 'string', 'description': 'Customer login name.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'email_restrictions': {'type': 'array', 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'required': False}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'description': 'Determines the type of discount that will be applied.', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'free_shipping': {'type': 'boolean', 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False}, 'product_categories': {'type': 'array', 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'type': 'array', 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': False}, 'exclude_sale_items': {'type': 'boolean', 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False}, 'excluded_product_categories': {'type': 'array', 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'individual_use': {'type': 'boolean', 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'type': {'enum': ['postcode', 'state', 'country', 'continent'], 'type': 'string', 'description': 'Shipping zone location type.', 'required': False}, 'code': {'type': 'string', 'description': 'Shipping zone location code.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique ID for the resource.', 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}}}], 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/customers/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'first_name': {'type': 'string', 'description': 'Customer first name.', 'required': False}, 'shipping': {'type': 'object', 'description': 'List of shipping address data.', 'required': False}, 'billing': {'type': 'object', 'description': 'List of billing address data.', 'required': False}, 'password': {'type': 'string', 'description': 'Customer password.', 'required': False}, 'email': {'type': 'string', 'description': 'The email address for the customer.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'last_name': {'type': 'string', 'description': 'Customer last name.', 'required': False}, 'username': {'type': 'string', 'description': 'Customer login name.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'reassign': {'type': 'integer', 'description': 'ID to reassign posts to.', 'default': 0, 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'name': {'type': 'string', 'description': 'Reviewer name.', 'required': False}, 'email': {'type': 'string', 'description': 'Reviewer email.', 'required': False}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'review': {'type': 'string', 'description': 'The content of the review.', 'required': False}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}}}, {'methods': ['DELETE'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/settings': {'endpoints': [{'methods': ['GET'], 'args': []}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific parent.', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'description': 'Sort collection by resource attribute.', 'default': 'name', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}, 'hide_empty': {'type': 'boolean', 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}}}, {'methods': ['POST'], 'args': {'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort the resource.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}, 'attribute_id': {'type': 'integer', 'description': 'Unique identifier for the attribute of the terms.', 'required': False}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/coupons': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'code': {'type': 'string', 'description': 'Limit result set to resources with a specific code.', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}}}, {'methods': ['POST'], 'args': {'email_restrictions': {'type': 'array', 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'required': False}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'description': 'Determines the type of discount that will be applied.', 'default': 'fixed_cart', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'free_shipping': {'type': 'boolean', 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'default': False, 'required': False}, 'product_categories': {'type': 'array', 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'type': 'array', 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': True}, 'exclude_sale_items': {'type': 'boolean', 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'default': False, 'required': False}, 'excluded_product_categories': {'type': 'array', 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'individual_use': {'type': 'boolean', 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'default': False, 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/system_status': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/orders/network': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'dp': {'type': 'integer', 'description': 'Number of decimal points to use in each resource.', 'default': 2, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific product.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'orderby': {'enum': ['date', 'id', 'include', 'title', 'slug'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'status': {'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'customer': {'type': 'integer', 'description': 'Limit result set to orders assigned a specific customer.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}, 'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'group': {'type': 'string', 'description': 'Settings group ID.', 'required': False}, 'value': {'type': 'mixed', 'description': 'Setting value.', 'required': False}, 'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'description': 'Shipping lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'customer_id': {'type': 'integer', 'description': 'User ID who owns the order. 0 for guests.', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'description': 'Order status.', 'required': False}, 'line_items': {'type': 'array', 'description': 'Line items data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit']}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'description': 'Product SKU.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}, 'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'price': {'type': 'number', 'readonly': True, 'description': 'Product price.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'fee_lines': {'type': 'array', 'description': 'Fee lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'readonly': True, 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'set_paid': {'type': 'boolean', 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False}, 'coupon_lines': {'type': 'array', 'description': 'Coupons line data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}, 'discount_tax': {'type': 'string', 'readonly': True, 'description': 'Discount total tax.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'description': 'Currency the order was created with, in ISO format.', 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'order_by': {'enum': ['menu_order', 'name', 'name_num', 'id'], 'type': 'string', 'description': 'Default sort order.', 'required': False}, 'type': {'enum': ['select'], 'type': 'string', 'description': 'Type of attribute.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'has_archives': {'type': 'boolean', 'description': 'Enable/Disable attribute archives.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Attribute name.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'endpoints': [{'methods': ['GET'], 'args': {'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}}}, {'methods': ['POST'], 'args': {'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'name': {'type': 'string', 'description': 'Name of the reviewer.', 'required': True}, 'email': {'type': 'string', 'description': 'Email of the reviewer.', 'required': True}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the variation.', 'required': False}, 'review': {'type': 'string', 'description': 'Review content.', 'required': True}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Tag name.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'webhook_id': {'type': 'integer', 'description': 'Unique identifier for the webhook.', 'required': False}}}], 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/coupons/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'email_restrictions': {'type': 'array', 'description': 'List of email addresses that can use this coupon.', 'items': {'type': 'string'}, 'required': False}, 'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'usage_limit_per_user': {'type': 'integer', 'description': 'How many times the coupon can be used per customer.', 'required': False}, 'limit_usage_to_x_items': {'type': 'integer', 'description': 'Max number of items in the cart the coupon can be applied to.', 'required': False}, 'date_expires_gmt': {'type': 'string', 'description': 'The date the coupon expires, as GMT.', 'required': False}, 'discount_type': {'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'type': 'string', 'description': 'Determines the type of discount that will be applied.', 'required': False}, 'maximum_amount': {'type': 'string', 'description': 'Maximum order amount allowed when using the coupon.', 'required': False}, 'date_expires': {'type': 'string', 'description': "The date the coupon expires, in the site's timezone.", 'required': False}, 'free_shipping': {'type': 'boolean', 'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'required': False}, 'product_categories': {'type': 'array', 'description': 'List of category IDs the coupon applies to.', 'items': {'type': 'integer'}, 'required': False}, 'product_ids': {'type': 'array', 'description': 'List of product IDs the coupon can be used on.', 'items': {'type': 'integer'}, 'required': False}, 'code': {'type': 'string', 'description': 'Coupon code.', 'required': False}, 'exclude_sale_items': {'type': 'boolean', 'description': 'If true, this coupon will not be applied to items that have sale prices.', 'required': False}, 'excluded_product_categories': {'type': 'array', 'description': 'List of category IDs the coupon does not apply to.', 'items': {'type': 'integer'}, 'required': False}, 'minimum_amount': {'type': 'string', 'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'required': False}, 'individual_use': {'type': 'boolean', 'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'required': False}, 'usage_limit': {'type': 'integer', 'description': 'How many times the coupon can be used in total.', 'required': False}, 'amount': {'type': 'string', 'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'required': False}, 'excluded_product_ids': {'type': 'array', 'description': 'List of product IDs the coupon cannot be used on.', 'items': {'type': 'integer'}, 'required': False}, 'description': {'type': 'string', 'description': 'Coupon description.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': False}, 'status': {'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'description': 'Webhook status.', 'required': False}, 'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'endpoints': [{'methods': ['DELETE'], 'args': {'slug': {'type': 'string', 'description': 'Unique slug for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'date_on_sale_to_gmt': {'type': 'date-time', 'description': 'End date of sale price, as GMT.', 'required': False}, 'menu_order': {'type': 'integer', 'description': 'Menu order, used to custom sort products.', 'required': False}, 'dimensions': {'type': 'object', 'description': 'Variation dimensions.', 'required': False}, 'downloadable': {'type': 'boolean', 'description': 'If the variation is downloadable.', 'required': False}, 'date_on_sale_from': {'type': 'date-time', 'description': "Start date of sale price, in the site's timezone.", 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'tax_class': {'type': 'string', 'description': 'Tax class.', 'required': False}, 'virtual': {'type': 'boolean', 'description': 'If the variation is virtual.', 'required': False}, 'regular_price': {'type': 'string', 'description': 'Variation regular price.', 'required': False}, 'manage_stock': {'type': 'mixed', 'description': 'Stock management at variation level.', 'required': False}, 'visible': {'type': 'boolean', 'description': "Define if the variation is visible on the product's page.", 'required': False}, 'tax_status': {'enum': ['taxable', 'shipping', 'none'], 'type': 'string', 'description': 'Tax status.', 'required': False}, 'backorders': {'enum': ['no', 'notify', 'yes'], 'type': 'string', 'description': 'If managing stock, this controls if backorders are allowed.', 'required': False}, 'sku': {'type': 'string', 'description': 'Unique identifier.', 'required': False}, 'weight': {'type': 'string', 'description': 'Variation weight (kg).', 'required': False}, 'attributes': {'type': 'array', 'description': 'List of attributes.', 'items': {'properties': {'option': {'type': 'string', 'description': 'Selected attribute term name.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'Attribute name.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Attribute ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'stock_quantity': {'type': 'integer', 'description': 'Stock quantity.', 'required': False}, 'date_on_sale_to': {'type': 'date-time', 'description': "End date of sale price, in the site's timezone.", 'required': False}, 'image': {'type': 'object', 'description': 'Variation image data.', 'required': False}, 'in_stock': {'type': 'boolean', 'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'required': False}, 'downloads': {'type': 'array', 'description': 'List of downloadable files.', 'items': {'properties': {'file': {'type': 'string', 'description': 'File URL.', 'context': ['view', 'edit']}, 'name': {'type': 'string', 'description': 'File name.', 'context': ['view', 'edit']}, 'id': {'type': 'string', 'readonly': True, 'description': 'File MD5 hash.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'sale_price': {'type': 'string', 'description': 'Variation sale price.', 'required': False}, 'shipping_class': {'type': 'string', 'description': 'Shipping class slug.', 'required': False}, 'description': {'type': 'string', 'description': 'Variation description.', 'required': False}, 'download_expiry': {'type': 'integer', 'description': 'Number of days until access to downloadable files expires.', 'required': False}, 'download_limit': {'type': 'integer', 'description': 'Number of times downloadable files can be downloaded after purchase.', 'required': False}, 'date_on_sale_from_gmt': {'type': 'date-time', 'description': 'Start date of sale price, as GMT.', 'required': False}}}], 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/webhooks/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}, 'status': {'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'description': 'Webhook status.', 'required': False}, 'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}, 'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'settings': {'type': 'object', 'description': 'Shipping method settings.', 'required': False}, 'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping method sort order.', 'required': False}, 'enabled': {'type': 'boolean', 'description': 'Shipping method enabled status.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}, 'instance_id': {'type': 'integer', 'description': 'Unique ID for the instance.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Whether to bypass trash and force deletion.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'success': {'type': 'boolean', 'description': 'Did the tool run successfully?', 'required': False}, 'name': {'type': 'string', 'description': 'Tool name.', 'required': False}, 'action': {'type': 'string', 'description': 'What running the tool will do.', 'required': False}, 'description': {'type': 'string', 'description': 'Tool description.', 'required': False}, 'id': {'type': 'string', 'description': 'A unique identifier for the tool.', 'required': False}, 'message': {'type': 'string', 'description': 'Tool return message.', 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/taxes/classes': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}, {'methods': ['POST'], 'args': {'name': {'type': 'string', 'description': 'Tax class name.', 'required': True}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'date_created_gmt': {'type': 'date-time', 'description': 'The date the review was created, as GMT.', 'required': False}, 'product_id': {'type': 'integer', 'description': 'Unique identifier for the variable product.', 'required': False}, 'name': {'type': 'string', 'description': 'Reviewer name.', 'required': False}, 'email': {'type': 'string', 'description': 'Reviewer email.', 'required': False}, 'rating': {'type': 'integer', 'description': 'Review rating (0 to 5).', 'required': False}, 'review': {'type': 'string', 'description': 'The content of the review.', 'required': False}, 'date_created': {'type': 'date-time', 'description': "The date the review was created, in the site's timezone.", 'required': False}}}], 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/webhooks': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'before': {'type': 'string', 'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'required': False}, 'orderby': {'enum': ['date', 'id', 'title'], 'type': 'string', 'description': 'Sort collection by object attribute.', 'default': 'date', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'status': {'enum': ['all', 'active', 'paused', 'disabled'], 'type': 'string', 'description': 'Limit result set to webhooks assigned a specific status.', 'default': 'all', 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'after': {'type': 'string', 'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}}}, {'methods': ['POST'], 'args': {'delivery_url': {'type': 'string', 'description': 'Webhook delivery URL.', 'required': True}, 'topic': {'type': 'string', 'description': 'Webhook topic.', 'required': True}, 'status': {'enum': ['active', 'paused', 'disabled'], 'type': 'string', 'description': 'Webhook status.', 'default': 'active', 'required': False}, 'secret': {'type': 'string', 'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'required': False}, 'name': {'type': 'string', 'description': 'A friendly name for the webhook.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'endpoints': [{'methods': ['GET'], 'args': {'type': {'enum': ['any', 'customer', 'internal'], 'type': 'string', 'description': 'Limit result to customers or internal notes.', 'default': 'any', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}, {'methods': ['POST'], 'args': {'note': {'type': 'string', 'description': 'Order note content.', 'required': True}, 'customer_note': {'type': 'boolean', 'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'default': False, 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'endpoints': [{'methods': ['GET'], 'args': {'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}}}, {'methods': ['POST'], 'args': {'settings': {'type': 'object', 'description': 'Shipping method settings.', 'required': False}, 'zone_id': {'type': 'integer', 'description': 'Unique ID for the zone.', 'required': False}, 'order': {'type': 'integer', 'description': 'Shipping method sort order.', 'required': False}, 'enabled': {'type': 'boolean', 'description': 'Shipping method enabled status.', 'required': False}, 'method_id': {'description': 'Shipping method ID.', 'required': True}}}], 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/orders/batch': {'endpoints': [{'methods': ['POST', 'PUT', 'PATCH'], 'args': {'meta_data': {'type': 'array', 'description': 'Meta data.', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'billing': {'type': 'object', 'description': 'Billing address.', 'required': False}, 'customer_note': {'type': 'string', 'description': 'Note left by customer during checkout.', 'required': False}, 'parent_id': {'type': 'integer', 'description': 'Parent order ID.', 'required': False}, 'shipping_lines': {'type': 'array', 'description': 'Shipping lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'method_title': {'type': 'mixed', 'description': 'Shipping method name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'method_id': {'type': 'mixed', 'description': 'Shipping method ID.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'currency': {'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'type': 'string', 'description': 'Currency the order was created with, in ISO format.', 'required': False}, 'payment_method': {'type': 'string', 'description': 'Payment method ID.', 'required': False}, 'payment_method_title': {'type': 'string', 'description': 'Payment method title.', 'required': False}, 'status': {'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'type': 'string', 'description': 'Order status.', 'required': False}, 'line_items': {'type': 'array', 'description': 'Line items data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'subtotal_tax': {'type': 'string', 'readonly': True, 'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit']}, 'subtotal': {'type': 'string', 'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit']}, 'sku': {'type': 'string', 'readonly': True, 'description': 'Product SKU.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'quantity': {'type': 'integer', 'description': 'Quantity ordered.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}, 'product_id': {'type': 'mixed', 'description': 'Product ID.', 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of product.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Product name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'price': {'type': 'number', 'readonly': True, 'description': 'Product price.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'variation_id': {'type': 'integer', 'description': 'Variation ID, if applicable.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'shipping': {'type': 'object', 'description': 'Shipping address.', 'required': False}, 'fee_lines': {'type': 'array', 'description': 'Fee lines data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'tax_class': {'type': 'string', 'description': 'Tax class of fee.', 'context': ['view', 'edit']}, 'name': {'type': 'mixed', 'description': 'Fee name.', 'context': ['view', 'edit']}, 'total_tax': {'type': 'string', 'readonly': True, 'description': 'Line total tax (after discounts).', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}, 'tax_status': {'enum': ['taxable', 'none'], 'type': 'string', 'description': 'Tax status of fee.', 'context': ['view', 'edit']}, 'taxes': {'description': 'Line taxes.', 'type': 'array', 'readonly': True, 'items': {'properties': {'subtotal': {'type': 'string', 'readonly': True, 'description': 'Tax subtotal.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Tax rate ID.', 'context': ['view', 'edit']}, 'total': {'type': 'string', 'readonly': True, 'description': 'Tax total.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'total': {'type': 'string', 'description': 'Line total (after discounts).', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'set_paid': {'type': 'boolean', 'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'required': False}, 'coupon_lines': {'type': 'array', 'description': 'Coupons line data.', 'items': {'properties': {'meta_data': {'description': 'Meta data.', 'type': 'array', 'items': {'properties': {'value': {'type': 'mixed', 'description': 'Meta value.', 'context': ['view', 'edit']}, 'key': {'type': 'string', 'description': 'Meta key.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Meta ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'context': ['view', 'edit']}, 'discount': {'type': 'string', 'description': 'Discount total.', 'context': ['view', 'edit']}, 'code': {'type': 'mixed', 'description': 'Coupon code.', 'context': ['view', 'edit']}, 'discount_tax': {'type': 'string', 'readonly': True, 'description': 'Discount total tax.', 'context': ['view', 'edit']}, 'id': {'type': 'integer', 'readonly': True, 'description': 'Item ID.', 'context': ['view', 'edit']}}, 'type': 'object'}, 'required': False}, 'customer_id': {'type': 'integer', 'description': 'User ID who owns the order. 0 for guests.', 'required': False}, 'transaction_id': {'type': 'string', 'description': 'Unique transaction ID.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'methods': ['POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'name': {'type': 'string', 'description': 'Shipping class name.', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'], 'namespace': 'wc/v2'}, '/wc/v2': {'endpoints': [{'methods': ['GET'], 'args': {'namespace': {'required': False, 'default': 'wc/v2'}, 'context': {'required': False, 'default': 'view'}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/products/tags': {'endpoints': [{'methods': ['GET'], 'args': {'include': {'description': 'Limit result set to specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'type': 'array', 'items': {'type': 'integer'}, 'default': [], 'required': False}, 'page': {'type': 'integer', 'description': 'Current page of the collection.', 'default': 1, 'required': False}, 'order': {'enum': ['asc', 'desc'], 'type': 'string', 'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'required': False}, 'offset': {'type': 'integer', 'description': 'Offset the result set by a specific number of items.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'orderby': {'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'type': 'string', 'description': 'Sort collection by resource attribute.', 'default': 'name', 'required': False}, 'hide_empty': {'type': 'boolean', 'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'required': False}, 'slug': {'type': 'string', 'description': 'Limit result set to resources with a specific slug.', 'required': False}, 'per_page': {'type': 'integer', 'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'required': False}, 'search': {'type': 'string', 'description': 'Limit results to those matching a string.', 'required': False}, 'product': {'type': 'integer', 'description': 'Limit result set to resources assigned to a specific product.', 'required': False}}}, {'methods': ['POST'], 'args': {'description': {'type': 'string', 'description': 'HTML description of the resource.', 'required': False}, 'slug': {'type': 'string', 'description': 'An alphanumeric identifier for the resource unique to its type.', 'required': False}, 'name': {'type': 'string', 'description': 'Name for the resource.', 'required': True}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'methods': ['GET', 'POST'], 'namespace': 'wc/v2'}, '/wc/v2/reports/top_sellers': {'endpoints': [{'methods': ['GET'], 'args': {'date_min': {'type': 'string', 'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'required': False}, 'period': {'enum': ['week', 'month', 'last_month', 'year'], 'type': 'string', 'description': 'Report period.', 'required': False}, 'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'date_max': {'type': 'string', 'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/reports': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}}}], '_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'methods': ['GET'], 'namespace': 'wc/v2'}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'endpoints': [{'methods': ['GET'], 'args': {'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['POST', 'PUT', 'PATCH'], 'args': {'id': {'type': 'string', 'description': 'Unique identifier for the resource.', 'required': False}, 'settings': {'type': 'object', 'description': 'Payment gateway settings.', 'required': False}, 'description': {'type': 'string', 'description': 'Payment gateway description on checkout.', 'required': False}, 'order': {'type': 'integer', 'description': 'Payment gateway sort order.', 'required': False}, 'enabled': {'type': 'boolean', 'description': 'Payment gateway enabled status.', 'required': False}, 'title': {'type': 'string', 'description': 'Payment gateway title on checkout.', 'required': False}}}], 'methods': ['GET', 'POST', 'PUT', 'PATCH'], 'namespace': 'wc/v2'}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'endpoints': [{'methods': ['GET'], 'args': {'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'context': {'enum': ['view', 'edit'], 'type': 'string', 'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'required': False}, 'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}}}, {'methods': ['DELETE'], 'args': {'id': {'type': 'integer', 'description': 'Unique identifier for the resource.', 'required': False}, 'order_id': {'type': 'integer', 'description': 'The order ID.', 'required': False}, 'force': {'type': 'boolean', 'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'required': False}}}], 'methods': ['GET', 'DELETE'], 'namespace': 'wc/v2'}}
11:14:47,253 root INFO sdfsdfdf
11:15:05,134 root INFO Get INDEX API info from cache.
11:15:05,137 root INFO {'/wc/v2/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'visible': {'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'type': 'boolean', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'type': 'mixed', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean', 'required': False}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by resource attribute.', 'default': 'name', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'required': False}}, 'methods': ['GET']}, {'args': {'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2'}, 'endpoints': [{'args': {'context': {'default': 'view', 'required': False}, 'namespace': {'default': 'wc/v2', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/customers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers'}, 'endpoints': [{'args': {'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'email': {'description': 'Limit result set to resources with a specific email.', 'type': 'string', 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'name', 'type': 'string', 'enum': ['id', 'include', 'name', 'registered_date'], 'required': False}, 'role': {'description': 'Limit result set to resources with a specific role.', 'default': 'customer', 'type': 'string', 'enum': ['all', 'administrator', 'editor', 'author', 'contributor', 'subscriber', 'customer', 'shop_manager'], 'required': False}}, 'methods': ['GET']}, {'args': {'username': {'description': 'New user username.', 'type': 'string', 'required': False}, 'email': {'description': 'New user email address.', 'type': 'string', 'required': True}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'password': {'description': 'New user password.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/webhooks': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'status': {'description': 'Limit result set to webhooks assigned a specific status.', 'default': 'all', 'type': 'string', 'enum': ['all', 'active', 'paused', 'disabled'], 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'title'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': True}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'delivery_url': {'description': 'Webhook delivery URL.', 'type': 'string', 'required': True}, 'status': {'description': 'Webhook status.', 'default': 'active', 'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/reports/top_sellers': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/top_sellers'}, 'endpoints': [{'args': {'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}, 'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'period': {'description': 'Report period.', 'type': 'string', 'enum': ['week', 'month', 'last_month', 'year'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/orders/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/batch'}, 'endpoints': [{'args': {'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_status': {'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none']}}}}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'status': {'description': 'Order status.', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}}}, 'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount_tax': {'description': 'Discount total tax.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'sku': {'description': 'Product SKU.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'price': {'description': 'Product price.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'number'}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations/batch': {'endpoints': [{'args': {'visible': {'description': "Define if the variation is visible on the product's page.", 'type': 'boolean', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'type': 'boolean', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'type': 'mixed', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'name': {'description': 'Name of the reviewer.', 'type': 'string', 'required': True}, 'review': {'description': 'Review content.', 'type': 'string', 'required': True}, 'email': {'description': 'Email of the reviewer.', 'type': 'string', 'required': True}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}, 'id': {'description': 'Unique identifier for the variation.', 'type': 'integer', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'value': {'description': 'Setting value.', 'type': 'mixed', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes/batch'}, 'endpoints': [{'args': {'name': {'description': 'Attribute name.', 'type': 'string', 'required': False}, 'order_by': {'description': 'Default sort order.', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'required': False}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'required': False}, 'type': {'description': 'Type of attribute.', 'type': 'string', 'enum': ['select'], 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/system_status': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/reports/sales': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports/sales'}, 'endpoints': [{'args': {'date_max': {'description': 'Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}, 'date_min': {'description': 'Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.', 'type': 'string', 'required': False}, 'period': {'description': 'Report period.', 'type': 'string', 'enum': ['week', 'month', 'last_month', 'year'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)': {'endpoints': [{'args': {'slug': {'description': 'Unique slug for the resource.', 'type': 'string', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['DELETE']}, '/wc/v2/customers/(?P<customer_id>[\\d]+)/downloads': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}, 'customer_id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/shipping_classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by resource attribute.', 'default': 'name', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'type': 'boolean', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_status': {'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none']}}}}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'status': {'description': 'Order status.', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}}}, 'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount_tax': {'description': 'Discount total tax.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'type': 'integer', 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'sku': {'description': 'Product SKU.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'price': {'description': 'Product price.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'number'}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/taxes/classes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/classes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tax class name.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/shipping_classes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/shipping_classes/batch'}, 'endpoints': [{'args': {'name': {'description': 'Shipping class name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer', 'required': False}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'status': {'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'type': 'string', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'set_paid': {'description': 'Define if the order is paid. It will set the status to processing and reduce stock items.', 'default': False, 'type': 'boolean', 'required': False}, 'payment_method_title': {'description': 'Payment method title.', 'type': 'string', 'required': False}, 'fee_lines': {'description': 'Fee lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Fee name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'tax_class': {'description': 'Tax class of fee.', 'context': ['view', 'edit'], 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_status': {'description': 'Tax status of fee.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['taxable', 'none']}}}}, 'billing': {'description': 'Billing address.', 'type': 'object', 'required': False}, 'customer_note': {'description': 'Note left by customer during checkout.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'status': {'description': 'Order status.', 'default': 'pending', 'type': 'string', 'enum': ['pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'required': False}, 'currency': {'description': 'Currency the order was created with, in ISO format.', 'default': 'GBP', 'type': 'string', 'enum': ['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTC', 'BTN', 'BWP', 'BYR', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'IRT', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PRB', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'], 'required': False}, 'shipping_lines': {'description': 'Shipping lines data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'method_title': {'description': 'Shipping method name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'method_id': {'description': 'Shipping method ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}}}, 'coupon_lines': {'description': 'Coupons line data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}, 'discount': {'description': 'Discount total.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount_tax': {'description': 'Discount total tax.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'parent_id': {'description': 'Parent order ID.', 'type': 'integer', 'required': False}, 'transaction_id': {'description': 'Unique transaction ID.', 'type': 'string', 'required': False}, 'customer_id': {'description': 'User ID who owns the order. 0 for guests.', 'default': 0, 'type': 'integer', 'required': False}, 'payment_method': {'description': 'Payment method ID.', 'type': 'string', 'required': False}, 'shipping': {'description': 'Shipping address.', 'type': 'object', 'required': False}, 'line_items': {'description': 'Line items data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Line subtotal (before discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'product_id': {'description': 'Product ID.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'taxes': {'description': 'Line taxes.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'array', 'items': {'type': 'object', 'properties': {'subtotal': {'description': 'Tax subtotal.', 'context': ['view', 'edit'], 'type': 'string'}, 'total': {'description': 'Tax total.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Tax rate ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'variation_id': {'description': 'Variation ID, if applicable.', 'context': ['view', 'edit'], 'type': 'integer'}, 'sku': {'description': 'Product SKU.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'meta_data': {'description': 'Meta data.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'price': {'description': 'Product price.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'number'}, 'name': {'description': 'Product name.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'total_tax': {'description': 'Line total tax (after discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'total': {'description': 'Line total (after discounts).', 'context': ['view', 'edit'], 'type': 'string'}, 'subtotal_tax': {'description': 'Line subtotal tax (before discounts).', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'tax_class': {'description': 'Tax class of product.', 'context': ['view', 'edit'], 'type': 'string'}, 'quantity': {'description': 'Quantity ordered.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Item ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/categories': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean', 'required': False}, 'parent': {'description': 'Limit result set to resources assigned to a specific parent.', 'type': 'integer', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by resource attribute.', 'default': 'name', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'display': {'description': 'Category archive display type.', 'default': 'default', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/refunds': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'amount': {'description': 'Refund amount.', 'type': 'string', 'required': False}, 'reason': {'description': 'Reason for refund.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'api_refund': {'description': 'When true, the payment gateway API is used to generate the refund.', 'default': True, 'type': 'boolean', 'required': False}, 'refunded_payment': {'description': 'If the payment was refunded via the API.', 'type': 'boolean', 'required': False}, 'refunded_by': {'description': 'User ID of user who created the refund.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'on_sale': {'description': 'Limit result set to products on sale.', 'type': 'boolean', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string', 'required': False}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string', 'required': False}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'type': 'string', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'required': False}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string', 'required': False}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'type': 'string', 'required': False}, 'max_price': {'description': 'Limit result set to products based on a maximum price.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'featured': {'description': 'Limit result set to featured products.', 'type': 'boolean', 'required': False}, 'type': {'description': 'Limit result set to products assigned a specific type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'downloadable': {'description': 'If the product is downloadable.', 'default': False, 'type': 'boolean', 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'tags': {'description': 'List of tags.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Tag name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Tag slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}}}}, 'id': {'description': 'Scenario ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked']}}}}}}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'type': 'integer', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'default': 'visible', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'default': 'taxable', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'status': {'description': 'Product status (post status).', 'default': 'publish', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'default': 'simple', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'images': {'description': 'List of images.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'src': {'description': 'Image URL.', 'context': ['view', 'edit'], 'type': 'string', 'format': 'uri'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}}}}, 'reviews_allowed': {'description': 'Allow reviews.', 'default': True, 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'type': 'integer', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'featured': {'description': 'Featured product.', 'default': False, 'type': 'boolean', 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'default': False, 'type': 'boolean', 'required': False}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'categories': {'description': 'List of categories.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Category name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Category slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'default': False, 'type': 'boolean', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'default': False, 'type': 'boolean', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'query_type': {'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios']}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/tags/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tag name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/system_status/tools': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/system_status/tools'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/(?P<product_id>[\\d]+)/variations': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'on_sale': {'description': 'Limit result set to products on sale.', 'type': 'boolean', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'shipping_class': {'description': 'Limit result set to products assigned a specific shipping class ID.', 'type': 'string', 'required': False}, 'tag': {'description': 'Limit result set to products assigned a specific tag ID.', 'type': 'string', 'required': False}, 'attribute': {'description': 'Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.', 'type': 'string', 'required': False}, 'status': {'description': 'Limit result set to products assigned a specific status.', 'default': 'any', 'type': 'string', 'enum': ['any', 'draft', 'pending', 'private', 'publish'], 'required': False}, 'slug': {'description': 'Limit result set to products with a specific slug.', 'type': 'string', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'category': {'description': 'Limit result set to products assigned a specific category ID.', 'type': 'string', 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'sku': {'description': 'Limit result set to products with specific SKU(s). Use commas to separate.', 'type': 'string', 'required': False}, 'min_price': {'description': 'Limit result set to products based on a minimum price.', 'type': 'string', 'required': False}, 'max_price': {'description': 'Limit result set to products based on a maximum price.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Limit result set to products in stock or out of stock.', 'type': 'boolean', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'featured': {'description': 'Limit result set to featured products.', 'type': 'boolean', 'required': False}, 'type': {'description': 'Limit result set to products assigned a specific type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'attribute_term': {'description': 'Limit result set to products with a specific attribute term ID (required an assigned attribute).', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'visible': {'description': "Define if the variation is visible on the product's page.", 'default': True, 'type': 'boolean', 'required': False}, 'downloadable': {'description': 'If the variation is downloadable.', 'default': False, 'type': 'boolean', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'default': 'no', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'weight': {'description': 'Variation weight (kg).', 'type': 'string', 'required': False}, 'dimensions': {'description': 'Variation dimensions.', 'type': 'object', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'image': {'description': 'Variation image data.', 'type': 'object', 'required': False}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'description': {'description': 'Variation description.', 'type': 'string', 'required': False}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'default': -1, 'type': 'integer', 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'default': 'taxable', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'in_stock': {'description': 'Controls whether or not the variation is listed as "in stock" or "out of stock" on the frontend.', 'default': True, 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the variation is virtual.', 'default': False, 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'default': -1, 'type': 'integer', 'required': False}, 'manage_stock': {'description': 'Stock management at variation level.', 'default': False, 'type': 'mixed', 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'regular_price': {'description': 'Variation regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Variation sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping/zones'}, 'endpoints': [{'args': [], 'methods': ['GET']}, {'args': {'name': {'description': 'Shipping zone name.', 'type': 'string', 'required': True}, 'order': {'description': 'Shipping zone order.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/system_status/tools/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tool name.', 'type': 'string', 'required': False}, 'description': {'description': 'Tool description.', 'type': 'string', 'required': False}, 'action': {'description': 'What running the tool will do.', 'type': 'string', 'required': False}, 'success': {'description': 'Did the tool run successfully?', 'type': 'boolean', 'required': False}, 'message': {'description': 'Tool return message.', 'type': 'string', 'required': False}, 'id': {'description': 'A unique identifier for the tool.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'webhook_id': {'description': 'Unique identifier for the webhook.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/attributes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Attribute name.', 'type': 'string', 'required': False}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'type': 'boolean', 'required': False}, 'type': {'description': 'Type of attribute.', 'type': 'string', 'enum': ['select'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'order_by': {'description': 'Default sort order.', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': True, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/categories/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/categories/batch'}, 'endpoints': [{'args': {'name': {'description': 'Category name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'display': {'description': 'Category archive display type.', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/attributes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'order_by': {'description': 'Default sort order.', 'default': 'menu_order', 'type': 'string', 'enum': ['menu_order', 'name', 'name_num', 'id'], 'required': False}, 'has_archives': {'description': 'Enable/Disable attribute archives.', 'default': False, 'type': 'boolean', 'required': False}, 'type': {'description': 'Type of attribute.', 'default': 'select', 'type': 'string', 'enum': ['select'], 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch': {'endpoints': [{'args': {'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'name': {'description': 'Term name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'type': {'description': 'Limit result to customers or internal notes.', 'default': 'any', 'type': 'string', 'enum': ['any', 'customer', 'internal'], 'required': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'customer_note': {'description': 'If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.', 'default': False, 'type': 'boolean', 'required': False}, 'note': {'description': 'Order note content.', 'type': 'string', 'required': True}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/products/tags': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'hide_empty': {'description': 'Whether to hide resources not assigned to any products.', 'default': False, 'type': 'boolean', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'slug': {'description': 'Limit result set to resources with a specific slug.', 'type': 'string', 'required': False}, 'product': {'description': 'Limit result set to resources assigned to a specific product.', 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by resource attribute.', 'default': 'name', 'type': 'string', 'enum': ['id', 'include', 'name', 'slug', 'term_group', 'description', 'count'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Name for the resource.', 'type': 'string', 'required': True}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)': {'endpoints': [{'args': {'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/customers/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'username': {'description': 'Customer login name.', 'type': 'string', 'required': False}, 'email': {'description': 'The email address for the customer.', 'type': 'string', 'required': False}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'password': {'description': 'Customer password.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'reassign': {'description': 'ID to reassign posts to.', 'default': 0, 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/shipping_classes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Shipping class name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'downloadable': {'description': 'If the product is downloadable.', 'type': 'boolean', 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'tags': {'description': 'List of tags.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Tag name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Tag slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}}}}, 'id': {'description': 'Scenario ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked']}}}}}}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'status': {'description': 'Product status (post status).', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'images': {'description': 'List of images.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'src': {'description': 'Image URL.', 'context': ['view', 'edit'], 'type': 'string', 'format': 'uri'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}}}}, 'reviews_allowed': {'description': 'Allow reviews.', 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'featured': {'description': 'Featured product.', 'type': 'boolean', 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'type': 'boolean', 'required': False}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'categories': {'description': 'List of categories.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Category name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Category slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'type': 'boolean', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'query_type': {'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios']}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings/(?P<group_id>[\\w-]+)/batch': {'endpoints': [{'args': {'value': {'description': 'Setting value.', 'type': 'mixed', 'required': False}, 'group': {'description': 'Settings group ID.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/taxes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'priority': {'description': 'Tax priority.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'required': False}, 'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'required': False}, 'class': {'description': 'Tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/taxes/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes/batch'}, 'endpoints': [{'args': {'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'type': 'boolean', 'required': False}, 'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'priority': {'description': 'Tax priority.', 'type': 'integer', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'type': 'boolean', 'required': False}, 'class': {'description': 'Tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/coupons': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'code': {'description': 'Limit result set to resources with a specific code.', 'type': 'string', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'default': 'fixed_cart', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': True}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'default': False, 'type': 'boolean', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False, 'items': {'type': 'string'}}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'default': False, 'type': 'boolean', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'default': False, 'type': 'boolean', 'required': False}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<id>[\\d-]+)': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Shipping zone name.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}, 'order': {'description': 'Shipping zone order.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/(?P<id>[\\d]+)': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'name': {'description': 'Reviewer name.', 'type': 'string', 'required': False}, 'review': {'description': 'The content of the review.', 'type': 'string', 'required': False}, 'email': {'description': 'Reviewer email.', 'type': 'string', 'required': False}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/webhooks/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': False}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'status': {'description': 'Webhook status.', 'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/coupons/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'required': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': False}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False, 'items': {'type': 'string'}}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'required': False}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/tags/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/tags/batch'}, 'endpoints': [{'args': {'name': {'description': 'Tag name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/webhooks/(?P<webhook_id>[\\d]+)/deliveries/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'webhook_id': {'description': 'Unique identifier for the webhook.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/customers/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/customers/batch'}, 'endpoints': [{'args': {'username': {'description': 'Customer login name.', 'type': 'string', 'required': False}, 'email': {'description': 'The email address for the customer.', 'type': 'string', 'required': False}, 'first_name': {'description': 'Customer first name.', 'type': 'string', 'required': False}, 'billing': {'description': 'List of billing address data.', 'type': 'object', 'required': False}, 'last_name': {'description': 'Customer last name.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'shipping': {'description': 'List of shipping address data.', 'type': 'object', 'required': False}, 'password': {'description': 'Customer password.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/payment_gateways/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}, {'args': {'description': {'description': 'Payment gateway description on checkout.', 'type': 'string', 'required': False}, 'enabled': {'description': 'Payment gateway enabled status.', 'type': 'boolean', 'required': False}, 'order': {'description': 'Payment gateway sort order.', 'type': 'integer', 'required': False}, 'title': {'description': 'Payment gateway title on checkout.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}, 'settings': {'description': 'Payment gateway settings.', 'type': 'object', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/coupons/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/coupons/batch'}, 'endpoints': [{'args': {'minimum_amount': {'description': 'Minimum order amount that needs to be in the cart before coupon applies.', 'type': 'string', 'required': False}, 'discount_type': {'description': 'Determines the type of discount that will be applied.', 'type': 'string', 'enum': ['percent', 'fixed_cart', 'fixed_product', 'booking_person'], 'required': False}, 'amount': {'description': 'The amount of discount. Should always be numeric, even if setting a percentage.', 'type': 'string', 'required': False}, 'limit_usage_to_x_items': {'description': 'Max number of items in the cart the coupon can be applied to.', 'type': 'integer', 'required': False}, 'excluded_product_categories': {'description': 'List of category IDs the coupon does not apply to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'product_ids': {'description': 'List of product IDs the coupon can be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'usage_limit_per_user': {'description': 'How many times the coupon can be used per customer.', 'type': 'integer', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'code': {'description': 'Coupon code.', 'type': 'string', 'required': False}, 'date_expires_gmt': {'description': 'The date the coupon expires, as GMT.', 'type': 'string', 'required': False}, 'maximum_amount': {'description': 'Maximum order amount allowed when using the coupon.', 'type': 'string', 'required': False}, 'individual_use': {'description': 'If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.', 'type': 'boolean', 'required': False}, 'excluded_product_ids': {'description': 'List of product IDs the coupon cannot be used on.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'email_restrictions': {'description': 'List of email addresses that can use this coupon.', 'type': 'array', 'required': False, 'items': {'type': 'string'}}, 'description': {'description': 'Coupon description.', 'type': 'string', 'required': False}, 'exclude_sale_items': {'description': 'If true, this coupon will not be applied to items that have sale prices.', 'type': 'boolean', 'required': False}, 'date_expires': {'description': "The date the coupon expires, in the site's timezone.", 'type': 'string', 'required': False}, 'free_shipping': {'description': 'If true and if the free shipping method requires a coupon, this coupon will enable free shipping.', 'type': 'boolean', 'required': False}, 'product_categories': {'description': 'List of category IDs the coupon applies to.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'usage_limit': {'description': 'How many times the coupon can be used in total.', 'type': 'integer', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'order_id': {'description': 'The order ID.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'DELETE']}, '/wc/v2/products/categories/(?P<id>[\\d]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Category name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'display': {'description': 'Category archive display type.', 'type': 'string', 'enum': ['default', 'products', 'subcategories', 'both'], 'required': False}, 'image': {'description': 'Image data.', 'type': 'object', 'required': False}, 'parent': {'description': 'The ID for the parent of the resource.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)': {'endpoints': [{'args': {'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}, 'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}, 'order': {'description': 'Shipping method sort order.', 'type': 'integer', 'required': False}, 'enabled': {'description': 'Shipping method enabled status.', 'type': 'boolean', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}, 'settings': {'description': 'Shipping method settings.', 'type': 'object', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'instance_id': {'description': 'Unique ID for the instance.', 'type': 'integer', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}, 'force': {'description': 'Whether to bypass trash and force deletion.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/products/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/products/batch'}, 'endpoints': [{'args': {'downloadable': {'description': 'If the product is downloadable.', 'type': 'boolean', 'required': False}, 'upsell_ids': {'description': 'List of up-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'tags': {'description': 'List of tags.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Tag name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Tag ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Tag slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'backorders': {'description': 'If managing stock, this controls if backorders are allowed.', 'type': 'string', 'enum': ['no', 'notify', 'yes'], 'required': False}, 'purchase_note': {'description': 'Optional note to send the customer after purchase.', 'type': 'string', 'required': False}, 'date_on_sale_to_gmt': {'description': 'End date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'dimensions': {'description': 'Product dimensions.', 'type': 'object', 'required': False}, 'composite_scenarios': {'description': 'Scenarios data. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Name of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'description': {'description': 'Optional short description of the scenario.', 'context': ['view', 'edit'], 'type': 'string'}, 'actions': {'description': 'Scenario actions.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'object', 'properties': {'action_id': {'description': "Scenario action ID (by default 'compat_group' or 'conditional_components').", 'context': ['view', 'edit'], 'type': 'string', 'enum': ['compat_group', 'conditional_components']}, 'is_active': {'description': 'Indicates whether the scenario action is active.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'action_data': {'description': 'Scenario action data.', 'context': ['view', 'edit'], 'type': 'object'}}}}, 'id': {'description': 'Scenario ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'configuration': {'description': 'Scenario matching conditions.', 'context': ['view', 'edit'], 'type': 'array', 'properties': {'component_options': {'description': 'Product/variation IDs in component targeted by the scenario (0 = any product or variation, -1 = no selection)', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'component_id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'type': 'string'}, 'options_modifier': {'description': 'Comparison modifier for the referenced product/variation IDs.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['in', 'not-in', 'masked']}}}}}}, 'downloads': {'description': 'List of downloadable files.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'File name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'File MD5 hash.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'file': {'description': 'File URL.', 'context': ['view', 'edit'], 'type': 'string'}}}}, 'stock_quantity': {'description': 'Stock quantity.', 'type': 'integer', 'required': False}, 'download_limit': {'description': 'Number of times downloadable files can be downloaded after purchase.', 'type': 'integer', 'required': False}, 'catalog_visibility': {'description': 'Catalog visibility.', 'type': 'string', 'enum': ['visible', 'catalog', 'search', 'hidden'], 'required': False}, 'sku': {'description': 'Unique identifier.', 'type': 'string', 'required': False}, 'meta_data': {'description': 'Meta data.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'value': {'description': 'Meta value.', 'context': ['view', 'edit'], 'type': 'mixed'}, 'key': {'description': 'Meta key.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Meta ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'integer'}}}}, 'tax_status': {'description': 'Tax status.', 'type': 'string', 'enum': ['taxable', 'shipping', 'none'], 'required': False}, 'status': {'description': 'Product status (post status).', 'type': 'string', 'enum': ['draft', 'pending', 'private', 'publish'], 'required': False}, 'composite_layout': {'description': 'Single-product template layout. Applicable to composite-type products.', 'type': 'string', 'required': False}, 'type': {'description': 'Product type.', 'type': 'string', 'enum': ['simple', 'grouped', 'external', 'variable', 'composite'], 'required': False}, 'attributes': {'description': 'List of attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'visible': {'description': 'Define if the attribute is visible on the "Additional information" tab in the product\'s page.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'options': {'description': 'List of available term names of the attribute.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'string'}}, 'variation': {'description': 'Define if the attribute can be used as variation.', 'context': ['view', 'edit'], 'type': 'boolean', 'default': False}, 'position': {'description': 'Attribute position.', 'context': ['view', 'edit'], 'type': 'integer'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'images': {'description': 'List of images.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Image name.', 'context': ['view', 'edit'], 'type': 'string'}, 'alt': {'description': 'Image alternative text.', 'context': ['view', 'edit'], 'type': 'string'}, 'date_modified_gmt': {'description': 'The date the image was last modified, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'src': {'description': 'Image URL.', 'context': ['view', 'edit'], 'type': 'string', 'format': 'uri'}, 'position': {'description': 'Image position. 0 means that the image is featured.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created_gmt': {'description': 'The date the image was created, as GMT.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'id': {'description': 'Image ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'date_created': {'description': "The date the image was created, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}, 'date_modified': {'description': "The date the image was last modified, in the site's timezone.", 'context': ['view', 'edit'], 'readonly': True, 'type': 'date-time'}}}}, 'reviews_allowed': {'description': 'Allow reviews.', 'type': 'boolean', 'required': False}, 'download_expiry': {'description': 'Number of days until access to downloadable files expires.', 'type': 'integer', 'required': False}, 'date_on_sale_to': {'description': "End date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'cross_sell_ids': {'description': 'List of cross-sell products IDs.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'menu_order': {'description': 'Menu order, used to custom sort products.', 'type': 'integer', 'required': False}, 'description': {'description': 'Product description.', 'type': 'string', 'required': False}, 'button_text': {'description': 'Product external button text. Only for external products.', 'type': 'string', 'required': False}, 'shipping_class': {'description': 'Shipping class slug.', 'type': 'string', 'required': False}, 'tax_class': {'description': 'Tax class.', 'type': 'string', 'required': False}, 'featured': {'description': 'Featured product.', 'type': 'boolean', 'required': False}, 'weight': {'description': 'Product weight (kg).', 'type': 'string', 'required': False}, 'date_on_sale_from_gmt': {'description': 'Start date of sale price, as GMT.', 'type': 'date-time', 'required': False}, 'short_description': {'description': 'Product short description.', 'type': 'string', 'required': False}, 'manage_stock': {'description': 'Stock management at product level.', 'type': 'boolean', 'required': False}, 'default_attributes': {'description': 'Defaults variation attributes.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Attribute name.', 'context': ['view', 'edit'], 'type': 'string'}, 'option': {'description': 'Selected attribute term name.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Attribute ID.', 'context': ['view', 'edit'], 'type': 'integer'}}}}, 'categories': {'description': 'List of categories.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'name': {'description': 'Category name.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}, 'id': {'description': 'Category ID.', 'context': ['view', 'edit'], 'type': 'integer'}, 'slug': {'description': 'Category slug.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'name': {'description': 'Product name.', 'type': 'string', 'required': False}, 'date_on_sale_from': {'description': "Start date of sale price, in the site's timezone.", 'type': 'date-time', 'required': False}, 'parent_id': {'description': 'Product parent ID.', 'type': 'integer', 'required': False}, 'sold_individually': {'description': 'Allow one item to be bought in a single order.', 'type': 'boolean', 'required': False}, 'slug': {'description': 'Product slug.', 'type': 'string', 'required': False}, 'in_stock': {'description': 'Controls whether or not the product is listed as "in stock" or "out of stock" on the frontend.', 'type': 'boolean', 'required': False}, 'virtual': {'description': 'If the product is virtual.', 'type': 'boolean', 'required': False}, 'grouped_products': {'description': 'List of grouped products ID.', 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'external_url': {'description': 'Product external URL. Only for external products.', 'type': 'string', 'required': False}, 'composite_shop_price_calc': {'description': 'Composite catalog price calculation. Applicable to composite-type products.', 'type': 'string', 'enum': ['defaults', 'min_max', 'hidden'], 'required': False}, 'composite_components': {'description': 'List of components that this product consists of. Applicable to composite-type products.', 'type': 'array', 'required': False, 'items': {'type': 'object', 'properties': {'query_type': {'description': 'Query type associated with component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['product_ids', 'category_ids']}, 'default_option_id': {'description': 'The product ID of the default/pre-selected component option.', 'context': ['view', 'edit'], 'type': 'integer'}, 'thumbnail_id': {'description': 'Attachment ID of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'integer'}, 'title': {'description': 'Title of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'shipped_individually': {'description': 'Indicates whether this component is shipped separately from the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'quantity_max': {'description': 'Maximum component quantity.', 'context': ['view', 'edit']}, 'query_ids': {'description': 'Product IDs or category IDs to use for populating component options.', 'context': ['view', 'edit'], 'type': 'array', 'items': {'type': 'integer'}}, 'quantity_min': {'description': 'Minimum component quantity.', 'context': ['view', 'edit'], 'type': 'integer'}, 'options_style': {'description': 'Indicates which template to use for displaying component options.', 'context': ['view', 'edit'], 'type': 'string', 'enum': ['dropdowns', 'thumbnails', 'radios']}, 'description': {'description': 'Description of the component.', 'context': ['view', 'edit'], 'type': 'string'}, 'discount': {'description': 'Discount applied to the component, applicable when the Priced Individually option is enabled.', 'context': ['view', 'edit'], 'type': 'string'}, 'priced_individually': {'description': 'Indicates whether the price of this component is added to the base price of the composite.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'optional': {'description': 'Indicates whether the component is optional.', 'context': ['view', 'edit'], 'type': 'boolean'}, 'thumbnail_src': {'description': 'URL of the thumbnail associated with this Component.', 'context': ['view', 'edit'], 'type': 'string'}, 'id': {'description': 'Component ID.', 'context': ['view', 'edit'], 'readonly': True, 'type': 'string'}}}}, 'regular_price': {'description': 'Product regular price.', 'type': 'string', 'required': False}, 'sale_price': {'description': 'Product sale price.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)': {'endpoints': [{'args': {'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Term name.', 'type': 'string', 'required': False}, 'description': {'description': 'HTML description of the resource.', 'type': 'string', 'required': False}, 'menu_order': {'description': 'Menu order, used to custom sort the resource.', 'type': 'integer', 'required': False}, 'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'slug': {'description': 'An alphanumeric identifier for the resource unique to its type.', 'type': 'string', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}, {'args': {'attribute_id': {'description': 'Unique identifier for the attribute of the terms.', 'type': 'integer', 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'integer', 'required': False}, 'force': {'description': 'Required to be true, as resource does not support trashing.', 'default': False, 'type': 'boolean', 'required': False}}, 'methods': ['DELETE']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']}, '/wc/v2/settings': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/settings'}, 'endpoints': [{'args': [], 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/payment_gateways': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/payment_gateways'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/orders/network': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/orders/network'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'exclude': {'description': 'Ensure result set excludes specific IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'search': {'description': 'Limit results to those matching a string.', 'type': 'string', 'required': False}, 'parent': {'description': 'Limit result set to those of particular parent IDs.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'before': {'description': 'Limit response to resources published before a given ISO8601 compliant date.', 'type': 'string', 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'customer': {'description': 'Limit result set to orders assigned a specific customer.', 'type': 'integer', 'required': False}, 'parent_exclude': {'description': 'Limit result set to all items except those of a particular parent ID.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'product': {'description': 'Limit result set to orders assigned a specific product.', 'type': 'integer', 'required': False}, 'dp': {'description': 'Number of decimal points to use in each resource.', 'default': 2, 'type': 'integer', 'required': False}, 'include': {'description': 'Limit result set to specific ids.', 'default': [], 'type': 'array', 'required': False, 'items': {'type': 'integer'}}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'desc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'status': {'description': 'Limit result set to orders assigned a specific status.', 'default': 'any', 'type': 'string', 'enum': ['any', 'pending', 'processing', 'on-hold', 'completed', 'cancelled', 'refunded', 'failed'], 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'date', 'type': 'string', 'enum': ['date', 'id', 'include', 'title', 'slug'], 'required': False}, 'after': {'description': 'Limit response to resources published after a given ISO8601 compliant date.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/webhooks/batch': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/webhooks/batch'}, 'endpoints': [{'args': {'name': {'description': 'A friendly name for the webhook.', 'type': 'string', 'required': False}, 'topic': {'description': 'Webhook topic.', 'type': 'string', 'required': False}, 'secret': {'description': "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.", 'type': 'string', 'required': False}, 'status': {'description': 'Webhook status.', 'type': 'string', 'enum': ['active', 'paused', 'disabled'], 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping_methods': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/shipping_methods'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/taxes': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/taxes'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view', 'edit'], 'required': False}, 'per_page': {'description': 'Maximum number of items to be returned in result set.', 'default': 10, 'type': 'integer', 'required': False}, 'order': {'description': 'Order sort attribute ascending or descending.', 'default': 'asc', 'type': 'string', 'enum': ['asc', 'desc'], 'required': False}, 'offset': {'description': 'Offset the result set by a specific number of items.', 'type': 'integer', 'required': False}, 'orderby': {'description': 'Sort collection by object attribute.', 'default': 'order', 'type': 'string', 'enum': ['id', 'order'], 'required': False}, 'page': {'description': 'Current page of the collection.', 'default': 1, 'type': 'integer', 'required': False}, 'class': {'description': 'Sort by tax class.', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'required': False}}, 'methods': ['GET']}, {'args': {'name': {'description': 'Tax rate name.', 'type': 'string', 'required': False}, 'compound': {'description': 'Whether or not this is a compound rate.', 'default': False, 'type': 'boolean', 'required': False}, 'city': {'description': 'City name.', 'type': 'string', 'required': False}, 'order': {'description': 'Indicates the order that will appear in queries.', 'type': 'integer', 'required': False}, 'priority': {'description': 'Tax priority.', 'default': 1, 'type': 'integer', 'required': False}, 'rate': {'description': 'Tax rate.', 'type': 'string', 'required': False}, 'postcode': {'description': 'Postcode / ZIP.', 'type': 'string', 'required': False}, 'state': {'description': 'State code.', 'type': 'string', 'required': False}, 'country': {'description': 'Country ISO 3166 code.', 'type': 'string', 'required': False}, 'shipping': {'description': 'Whether or not this tax rate also gets applied to shipping.', 'default': True, 'type': 'boolean', 'required': False}, 'class': {'description': 'Tax class.', 'default': 'standard', 'type': 'string', 'enum': ['standard', 'reduced-rate', 'zero-rate'], 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<zone_id>[\\d]+)/methods': {'endpoints': [{'args': {'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'method_id': {'description': 'Shipping method ID.', 'required': True}, 'order': {'description': 'Shipping method sort order.', 'type': 'integer', 'required': False}, 'enabled': {'description': 'Shipping method enabled status.', 'type': 'boolean', 'required': False}, 'zone_id': {'description': 'Unique ID for the zone.', 'type': 'integer', 'required': False}, 'settings': {'description': 'Shipping method settings.', 'type': 'object', 'required': False}}, 'methods': ['POST']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST']}, '/wc/v2/shipping/zones/(?P<id>[\\d]+)/locations': {'endpoints': [{'args': {'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}}, 'methods': ['GET']}, {'args': {'code': {'description': 'Shipping zone location code.', 'type': 'string', 'required': False}, 'id': {'description': 'Unique ID for the resource.', 'type': 'integer', 'required': False}, 'type': {'description': 'Shipping zone location type.', 'type': 'string', 'enum': ['postcode', 'state', 'country', 'continent'], 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['GET', 'POST', 'PUT', 'PATCH']}, '/wc/v2/reports': {'_links': {'self': 'https://devsit-4132.bolt55.servebolt.com/wp-json/wc/v2/reports'}, 'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}, '/wc/v2/products/(?P<product_id>[\\d]+)/reviews/batch': {'endpoints': [{'args': {'product_id': {'description': 'Unique identifier for the variable product.', 'type': 'integer', 'required': False}, 'name': {'description': 'Reviewer name.', 'type': 'string', 'required': False}, 'review': {'description': 'The content of the review.', 'type': 'string', 'required': False}, 'email': {'description': 'Reviewer email.', 'type': 'string', 'required': False}, 'rating': {'description': 'Review rating (0 to 5).', 'type': 'integer', 'required': False}, 'date_created': {'description': "The date the review was created, in the site's timezone.", 'type': 'date-time', 'required': False}, 'date_created_gmt': {'description': 'The date the review was created, as GMT.', 'type': 'date-time', 'required': False}}, 'methods': ['POST', 'PUT', 'PATCH']}], 'namespace': 'wc/v2', 'methods': ['POST', 'PUT', 'PATCH']}, '/wc/v2/shipping_methods/(?P<id>[\\w-]+)': {'endpoints': [{'args': {'context': {'description': 'Scope under which the request is made; determines fields present in response.', 'default': 'view', 'type': 'string', 'enum': ['view'], 'required': False}, 'id': {'description': 'Unique identifier for the resource.', 'type': 'string', 'required': False}}, 'methods': ['GET']}], 'namespace': 'wc/v2', 'methods': ['GET']}}
